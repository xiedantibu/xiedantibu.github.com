<!DOCTYPE html><!-- saved from url=(0056)http://www.cplusplus.com/forum/general/70648/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Is there any point using boost::noncopya - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">General C++ Programming</a></li>
<li class="here">Is there any point using boost::noncopya</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico question" title="question">&nbsp;</div> Is there any point using boost::noncopyable?</h3><span id="CH_edttl"></span><span class="rootdatPost" title="70648,root,0,-1,5,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg376774"><span title="376774,53221,1023,1383,1"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg376774" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmabb77f6686" title="Wed, 09 May 2012 21:19:50 +0000"></span><script type="text/javascript">WhenId('CH_zTmabb77f6686');</script><noscript>May 9, 2012 at 9:19pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/xander314/default.htm"><b>Xander314</b> (1383)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i376774">
Does anyone use this class? Is it worth the dependency just to save writing your own (few line) non copyable class? Perhaps the sensible thing is to use it only when Boost is already a dependency?
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm1021bf49d3" title="Wed, 09 May 2012 21:20:05 +0000"></span><script type="text/javascript">WhenId('CH_zTm1021bf49d3');</script><noscript>May 9, 2012 at 9:20pm UTC</noscript></span>
<span class="dbtn" id="CH_btn376774"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg376779"><span title="376779,70152,1023,656,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg376779" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm1ef877521e" title="Wed, 09 May 2012 21:35:12 +0000"></span><script type="text/javascript">WhenId('CH_zTm1ef877521e');</script><noscript>May 9, 2012 at 9:35pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/codekiddy/default.htm"><b>codekiddy</b> (656)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i376779">
I'm not 100% sure but noncopyable class is old overhead of what is today in C++11 called  <span class="auto"><code class="source">= <var>delete</var>;</code></span><br>
<br>
 <span class="auto"><code class="source">MyCopyCotor = <var>delete</var>; <cite>// this is noncopyable class </cite></code></span><br>
 the same steps goes for move ctor.<br>
<br>
So yes if you ask me I would never use noncopyable class from boost library.
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn376779"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg376796"><span title="376796,53221,1023,1383,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg376796" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmf1e891cad4" title="Wed, 09 May 2012 21:54:02 +0000"></span><script type="text/javascript">WhenId('CH_zTmf1e891cad4');</script><noscript>May 9, 2012 at 9:54pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/xander314/default.htm"><b>Xander314</b> (1383)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i376796">
Yes, I think that is the best way to make a class non copyable in C++11. But I wonder if it's still worth having a base class<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code><var>class</var> NonCopyable {
<var>public</var>:
  NonCopyable(<var>const</var> NonCopyable&amp;) = <var>delete</var>;
  <var>const</var> NonCopyable&amp; <var>operator</var>=(<var>const</var> NonCopyable&amp;) = <var>delete</var>;
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Perhaps this makes for slightly improved clarity of code, and it saves a bit of typing. On the other hand, the compiler starts to output more errors per attempted copy.<br>
<br>
So I guess the question now has become a choice between<br>
(1) use boost::noncopyable<br>
(2) write a noncopyable base class using C++11 semantics<br>
(3) use C++11 semantics to delete copy and assignment functions in each noncopyable class
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm2471827085" title="Wed, 09 May 2012 21:56:57 +0000"></span><script type="text/javascript">WhenId('CH_zTm2471827085');</script><noscript>May 9, 2012 at 9:56pm UTC</noscript></span>
<span class="dbtn" id="CH_btn376796"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg376809"><span title="376809,70152,1023,656,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg376809" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmfc0cf19c04" title="Wed, 09 May 2012 22:18:43 +0000"></span><script type="text/javascript">WhenId('CH_zTmfc0cf19c04');</script><noscript>May 9, 2012 at 10:18pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/codekiddy/default.htm"><b>codekiddy</b> (656)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i376809">
maybe better (and cleaner) approach would be to use <span class="auto"><code class="source">=<var>delete</var> </code></span> only in most base class if you use multiple inheritance.<br>
<br>
all derived classes are thus indirecly noncopyable.<br>
<br>
otherwise boost::noncopyable is better IMO only for single classes, and only benefit is that you don't have to manualy type <span class="auto"><code class="source">=<var>delete</var>;</code></span><br>
<br>
<br>
Don't forget that derived assgnment operators and others may not work as you think they do, they don't call base class operators, move ctors and others!<br>
<br>
The following will be hidden in the derived class by implicitly-declared versions (or user-declared versions, if the user declares them):<br>
Default constructor: T()<br>
Destructor: ~T()<br>
Copy constructor: T(T const &amp;) (sometimes without const)<br>
Copy-assignment operator: T &amp; operator=(T const &amp;) (sometimes without const)<br>
Move constructor: T(T &amp;&amp;)<br>
Move-assignment operator: T &amp; operator=(T &amp;&amp;)<br>
<br>
<br>
Now you gotta ask your self what your primary goal is, and according to that you see what is the best approach.<br>
<br>
I strongly belive that boost::noncopyable can bring more trouble then benefit in multiple inheritance.<br>
<br>
Kind regards!
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn376809"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg376853"><span title="376853,72044,1023,3663,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg376853" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm2f2b54ae33" title="Wed, 09 May 2012 23:52:19 +0000"></span><script type="text/javascript">WhenId('CH_zTm2f2b54ae33');</script><noscript>May 9, 2012 at 11:52pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/cubbi/default.htm"><b>Cubbi</b> (3663)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i376853">
I use it, in a pre-11 product. Gives obvious compiler errors when someone attempts to copy those classes. (but yes, it is not the only thing we use from boost, of course) 
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn376853"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Topic archived. No new replies allowed.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(70648,1,53221,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li class="selected"><a href="../default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~344.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>