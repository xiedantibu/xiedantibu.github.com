<!DOCTYPE html><!-- saved from url=(0056)http://www.cplusplus.com/forum/general/96221/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Why do compilers not accept '.' and '-&gt;' - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">General C++ Programming</a></li>
<li class="here">Why do compilers not accept '.' and '-&gt;'</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico default" title="post">&nbsp;</div> Why do compilers not accept '.' and '-&gt;' both for pointer and instances?</h3><span id="CH_edttl"></span><span class="rootdatPost" title="96221,root,0,-1,11,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg516564"><span title="516564,109482,255,2,1"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516564" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm991a9f7341" title="Tue, 19 Mar 2013 11:00:24 +0000"></span><script type="text/javascript">WhenId('CH_zTm991a9f7341');</script><noscript>Mar 19, 2013 at 11:00am UTC</noscript></div>
<div class="dwho"><a href="../../../user/woomla/default.htm"><b>woomla</b> (2)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516564">
Why do compilers not accept '.' and '-&gt;' at the same time. I now a pointer requires '-&gt;' and an instance a '.', but why not let us use both?<br>
<br>
Obviously for a good reason, but I cannot think of one myself.
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn516564"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg516566"><span title="516566,79150,3,6539,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516566" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm5875521ad4" title="Tue, 19 Mar 2013 11:06:22 +0000"></span><script type="text/javascript">WhenId('CH_zTm5875521ad4');</script><noscript>Mar 19, 2013 at 11:06am UTC</noscript></div>
<div class="dwho"><a href="../../../user/vlad_from_moscow/default.htm"><b>vlad from moscow</b> (6539)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516566">
Please show how you are going to use them both?
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn516566"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg516574"><span title="516574,72446,1023,5917,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516574" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm91f77f8b02" title="Tue, 19 Mar 2013 11:37:34 +0000"></span><script type="text/javascript">WhenId('CH_zTm91f77f8b02');</script><noscript>Mar 19, 2013 at 11:37am UTC</noscript></div>
<div class="dwho"><a href="../../../user/peter87/default.htm"><b>Peter87</b> (5917)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516574">
They don't do the same thing. '.' is used to access a member of the object. When '-&gt;' is used on a raw pointer it is used to access a member of the object that the pointer is pointing to. '-&gt;' can also be defined for class types. <br>
<br>
Here is an example where you can use both '.' and '-&gt;' but with different meanings.<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br></code></pre></td>
<td class="source"><pre><code><var>struct</var> A
{
	<var>void</var> reset();
};

std::unique_ptr&lt;A&gt; m(<var>new</var> A);

<cite>// Calls A::reset.</cite>
m-&gt;reset();

<cite>// Calls std::unique_ptr&lt;int&gt;::reset.</cite>
m.reset();</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm71726deb6b" title="Tue, 19 Mar 2013 11:38:52 +0000"></span><script type="text/javascript">WhenId('CH_zTm71726deb6b');</script><noscript>Mar 19, 2013 at 11:38am UTC</noscript></span>
<span class="dbtn" id="CH_btn516574"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg516580"><span title="516580,79150,3,6539,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516580" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmd2617207b5" title="Tue, 19 Mar 2013 11:53:33 +0000"></span><script type="text/javascript">WhenId('CH_zTmd2617207b5');</script><noscript>Mar 19, 2013 at 11:53am UTC</noscript></div>
<div class="dwho"><a href="../../../user/vlad_from_moscow/default.htm"><b>vlad from moscow</b> (6539)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516580">
Maybe you mean something as<br>
<br>
instance.pointer-&gt;object;<br>
<br>
This statement is correct.
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm477921b5d1" title="Tue, 19 Mar 2013 11:55:50 +0000"></span><script type="text/javascript">WhenId('CH_zTm477921b5d1');</script><noscript>Mar 19, 2013 at 11:55am UTC</noscript></span>
<span class="dbtn" id="CH_btn516580"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg516647"><span title="516647,75536,1023,5443,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516647" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm8c82cf7cba" title="Tue, 19 Mar 2013 14:28:14 +0000"></span><script type="text/javascript">WhenId('CH_zTm8c82cf7cba');</script><noscript>Mar 19, 2013 at 2:28pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/jlborges/default.htm"><b>JLBorges</b> (5443)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516647">
&gt; why not let us use both?<br>
<br>
If you create a user-defined type of your own, and for some reason you want to use both '.' and '-&gt;' to access its members, you can.<br>
<br>
<br>
&gt; Please show how you are going to use them both?<br>
<br>
Showing how to use them both is embarrassingly trivial:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>

<var>struct</var> not_a_pointer
{
    <var>int</var> v = 10 ;
    <var>int</var> foo( <var>int</var> a ) 
    { std::cout &lt;&lt; <kbd>"not_a_pointer::foo("</kbd> &lt;&lt; a &lt;&lt; <kbd>")\n"</kbd> ; <var>return</var> v += a ; }

    not_a_pointer* <var>operator</var>-&gt;() { <var>return</var> <var>this</var> ; }
    <var>const</var> not_a_pointer* <var>operator</var>-&gt;() <var>const</var> { <var>return</var> <var>this</var> ; }
};

<var>int</var> main()
{
    not_a_pointer nptr ;

    nptr.foo( nptr-&gt;foo(40) ) ;

    std::cout &lt;&lt; nptr.v &lt;&lt; <kbd>' '</kbd>
              &lt;&lt; nptr-&gt;v &lt;&lt; <kbd>'\n'</kbd> ;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<a href="../../../../liveworkspace.org/code/3iglfr$0">http://liveworkspace.org/code/3IgLFR$0</a><br>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn516647"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg516806"><span title="516806,11146,1023,2942,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516806" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmcafc1f04ac" title="Tue, 19 Mar 2013 18:23:30 +0000"></span><script type="text/javascript">WhenId('CH_zTmcafc1f04ac');</script><noscript>Mar 19, 2013 at 6:23pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/guestgulkan/default.htm"><b>guestgulkan</b> (2942)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516806">
Apparently there is some historical  reason as to why there is both .  and -&gt; for member access - (at least that is what I read some time previously).<br>
<br>
I myself could not understand why -  ( because the compiler knows  whether something is an object or a pointer and should be able to act accordingly<br>
and so only one of them (lets say for argument sake  the dot operaror) would<br>
be needed).<br>
<br>
I'll do a search and see if I can find that  write up again.
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn516806"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg516811"><span title="516811,108757,1023,10,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg516811" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmedb57d6af8" title="Tue, 19 Mar 2013 18:28:57 +0000"></span><script type="text/javascript">WhenId('CH_zTmedb57d6af8');</script><noscript>Mar 19, 2013 at 6:28pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/helixirr/default.htm"><b>Helixirr</b> (10)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i516811">
I suppose there is no other reason for <span class="auto"><code class="source"><var>operator</var>-&gt;</code></span> to exist other than make pointer's member access easier. It is easier (for me) to write<br>
<br>
<span class="auto"><code class="source">pointer-&gt;member</code></span><br>
<br>
instead of writing<br>
<br>
<span class="auto"><code class="source">(*pointer).member</code></span><br>
<br>
It is also faster to type <span class="auto"><code class="source">-&gt;</code></span> compared to the latter example. This way you can be a little more productive.
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTmc2ffe4e899" title="Tue, 19 Mar 2013 18:29:42 +0000"></span><script type="text/javascript">WhenId('CH_zTmc2ffe4e899');</script><noscript>Mar 19, 2013 at 6:29pm UTC</noscript></span>
<span class="dbtn" id="CH_btn516811"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg517214"><span title="517214,16990,1023,2454,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg517214" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmd8fa473b3a" title="Wed, 20 Mar 2013 12:31:55 +0000"></span><script type="text/javascript">WhenId('CH_zTmd8fa473b3a');</script><noscript>Mar 20, 2013 at 12:31pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/mikeyboy/default.htm"><b>MikeyBoy</b> (2454)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i517214">
The point is that the two operators do <b>different things</b>.<br>
<br>
. simply accesses a member of an object<br>
<br>
-&gt; de-references the pointer and then accesses a member of the object being pointed to.<br>
<br>
Having two separate operators removes ambiguity - it tells the compiler exactly what to do, and it tells anyone reading the code what the compiler is doing.<br>
<br>
This is important, because it's possible to create classes which have pointer-like behaviour.  These classes can use the standard syntax of pointers, by overloading the * and -&gt; operators.<br>
<br>
The classic example is a smart pointer object, as implemented in the Boost libraries and now incorporated into the C++11 standard.  These are objects, and therefore have members, so it is necessary to use the . operator to access those members.  However, they also behave like pointers, so they override the -&gt; operator to make it possible to access members of the data they are pointing to.<br>
<br>
Imagine if the object being pointed to by the smart pointer had a member with the same name as a member of the smart pointer object itself.  How would the compiler know which one you meant, without the distinction between . and -&gt; operators?<br>

</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm9a5cdf4466" title="Wed, 20 Mar 2013 12:32:42 +0000"></span><script type="text/javascript">WhenId('CH_zTm9a5cdf4466');</script><noscript>Mar 20, 2013 at 12:32pm UTC</noscript></span>
<span class="dbtn" id="CH_btn517214"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg517225"><span title="517225,63891,1023,2305,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg517225" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmc600c068de" title="Wed, 20 Mar 2013 12:53:57 +0000"></span><script type="text/javascript">WhenId('CH_zTmc600c068de');</script><noscript>Mar 20, 2013 at 12:53pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/essgeeich/default.htm"><b>EssGeEich</b> (2305)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i517225">
<table class="quote"><tr><th class="qh"><strong>Helixirr</strong> wrote:</th></tr><tr><td class="qd">I suppose there is no other reason for <span class="auto"><code class="source"><var>operator</var>-&gt;</code></span> to exist other than make pointer's member access easier. It is easier (for me) to write<br>
<br>
<span class="auto"><code class="source">pointer-&gt;member</code></span><br>
<br>
instead of writing<br>
<br>
<span class="auto"><code class="source">(*pointer).member</code></span><br>
<br>
It is also faster to type <span class="auto"><code class="source">-&gt;</code></span> compared to the latter example. This way you can be a little more productive.</td></tr></table><br>
+1.<br>
<br>
Explaining to the op:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br></code></pre></td>
<td class="source"><pre><code>
<var>struct</var> S {
    <var>int</var> I;
};

<var>int</var> main()
{
    S test;
    S * pointerTest = &amp;test;
    <cite>/*
    At this point:

    <b>test.I</b> is equal to <b>pointerTest-&gt;I</b>

    But you can see how <b>test is <u>S</u></b>, and <b>pointerTest is <u>S*</u></b>.
    They are NOT the same thing, NOT the same type.
    
    Also, as noted above,

    <u>pointerTest-&gt;I</u> is equal to <u>(*pointerTest)-&gt;I</u>
    */</cite>
}
</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn517225"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg517736"><span title="517736,109482,255,2,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg517736" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmead8d4c344" title="Thu, 21 Mar 2013 08:16:32 +0000"></span><script type="text/javascript">WhenId('CH_zTmead8d4c344');</script><noscript>Mar 21, 2013 at 8:16am UTC</noscript></div>
<div class="dwho"><a href="../../../user/woomla/default.htm"><b>woomla</b> (2)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i517736">
As far as I know, a compiler knows if it's an object or pointer to an object. And thus the compiler should be able to generate the correct code. I'm searching for an explanation why the C standard defined it this way.<br>
<br>
The thing about smart pointer objects and overriding the -&gt; operator makes me believe the distinction is necessary. I never used this but I'll look into this more.<br>
<br>
<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></code></pre></td>
<td class="source"><pre><code><var>class</var> S {
    <var>int</var> I;
};

<var>void</var> foo(S* bar)
{
    bar-&gt;I = 10;
    bar.I = 10;  <cite>//In this case, the compiler could know what bar is and could generate the correct code</cite>
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn517736"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg517829"><span title="517829,63891,1023,2305,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg517829" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm37d63e0aae" title="Thu, 21 Mar 2013 12:58:05 +0000"></span><script type="text/javascript">WhenId('CH_zTm37d63e0aae');</script><noscript>Mar 21, 2013 at 12:58pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/essgeeich/default.htm"><b>EssGeEich</b> (2305)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i517829">
I find this a useless compiler functionality.<br>
I prefer to know by myself what type something is.<br>
<br>
That functionality also will call a lot of newbies asking why is this possible and why is not the inverse possible.<br>
<br>
See overriding of -&gt; operator.<br>
<br>
It's like inserting a new <b>system</b>.<br>
( <a href="../../articles/11153/default.htm">http://www.cplusplus.com/forum/articles/11153/</a> )
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn517829"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Topic archived. No new replies allowed.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(96221,1,109482,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li class="selected"><a href="../default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~366.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>