<!DOCTYPE html><!-- saved from url=(0057)http://www.cplusplus.com/forum/general/146574/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Strange behaviour when comparing with ze - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">General C++ Programming</a></li>
<li class="here">Strange behaviour when comparing with ze</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico default" title="post">&nbsp;</div> Strange behaviour when comparing with zero</h3><span id="CH_edttl"></span><span class="rootdatPost" title="146574,root,0,-1,6,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg770802"><span title="770802,156229,255,2,1"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg770802" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm0e664d6b20" title="Sat, 01 Nov 2014 14:16:43 +0000"></span><script type="text/javascript">WhenId('CH_zTm0e664d6b20');</script><noscript>Nov 1, 2014 at 2:16pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/noctilux/default.htm"><b>noctilux</b> (2)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i770802">
Hi everyone,<br>
<br>
I'm currently trying to learn about floating point representation in depth, so I played around a bit. While doing so, I stumbled on some strange behaviour; I can't really work out what's happening, and I'd be very grateful for some insight. Apologies if this has been answered, I found it quite hard to google!<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;cmath&gt;</dfn>
<var>using</var> <var>namespace</var> std;

<var>int</var> main(){

  <var>float</var> minVal = pow(2,-149); <cite>// set to smallest float possible</cite>
  
  <var>float</var> nextCheck = ((<var>float</var>)((minVal/2.0f))); <cite>// divide by two</cite>
  <var>bool</var> isZero = (<var>static_cast</var>&lt;<var>float</var>&gt;(minVal/2.0f) == 0.0f); <cite>// this thing evaluates to false when it really shouldn't...!?</cite>
  <var>bool</var> isZero2 = (nextCheck == 0.0f); <cite>// this evaluates to true</cite>

  cout &lt;&lt; nextCheck &lt;&lt; <kbd>" "</kbd> &lt;&lt; isZero &lt;&lt; <kbd>" "</kbd> &lt;&lt; isZero2 &lt;&lt; endl;
  <cite>// this outputs 0 0 1</cite>
  
  <var>return</var> 0;

}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Essentially what's happening is:<br>
	- I set minVal to be the smallest float that can be represented using single precision<br>
	- Dividing by 2 should yield 0 -- we're at the minimum<br>
        - Indeed, isZero2 does return true, but isZero returns false. <br>
<br>
What's going on -- I would have thought them to be identical? Is the compiler trying to be clever, saying that dividing any number cannot possibly yield zero?<br>
<br>
Thanks for your help!
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn770802"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg770846"><span title="770846,18360,1023,12939,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg770846" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmca25b65789" title="Sat, 01 Nov 2014 16:39:56 +0000"></span><script type="text/javascript">WhenId('CH_zTmca25b65789');</script><noscript>Nov 1, 2014 at 4:39pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/disch/default.htm"><b>Disch</b> (12939)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i770846">
It outputs 0 1 1 for me both in VS and on IDEone (Which uses gcc, iirc):<br>
<br>
<a href="../../../../ideone.com/ksyie8">http://ideone.com/ksyIE8</a><br>
<br>
What compiler are you using?
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn770846"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg770854"><span title="770854,99948,1023,5455,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg770854" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm4f1e3abdad" title="Sat, 01 Nov 2014 17:10:06 +0000"></span><script type="text/javascript">WhenId('CH_zTm4f1e3abdad');</script><noscript>Nov 1, 2014 at 5:10pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/miinipaa/default.htm"><b>MiiNiPaa</b> (5455)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i770854">
<table class="quote"><tr><td class="qd">I would have thought them to be identical? </td></tr></table><span class="auto"><code class="source">minVal/2.0f == minVal/2.0f</code></span> is not guaranteed to return <span class="auto"><code class="source"><var>true</var></code></span> even if <tt>minVal</tt> is perfectly normal floating point value (not NaN, not infinity, etc...)<br>
<br>
<table class="quote"><tr><td class="qd">Is the compiler trying to be clever, saying that dividing any number cannot possibly yield zero?</td></tr></table>Nope, ypu might run into precision problem. result of expression containing floating point values is stored in temporary with <b>unspecified</b> precision.<br>
<br>
In <tt>nextCheck</tt> assigment it might use smaller precision and <span class="auto"><code class="source">minVal/2.0f</code></span> will result in geniune 0.<br>
In first comparsion it might store result in extended precision where <span class="auto"><code class="source">minVal/2.0f</code></span> is representable as non-zero and when casting to float rounding mode made result non-zero too.<br>
<br>
You should not try to compare values with == or != until you will get the zen of floating point values.<br>
<br>
mandatory reading: <a href="../../../../randomascii.wordpress.com/2013/07/16/floating-point-determinism/default.htm">http://randomascii.wordpress.com/2013/07/16/floating-point-determinism/</a>
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn770854"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg770865"><span title="770865,75536,1023,5443,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg770865" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmab3527c8e4" title="Sat, 01 Nov 2014 17:30:51 +0000"></span><script type="text/javascript">WhenId('CH_zTmab3527c8e4');</script><noscript>Nov 1, 2014 at 5:30pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/jlborges/default.htm"><b>JLBorges</b> (5443)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i770865">
&gt; I set minVal to be the smallest float that can be represented using single precision<br>
<br>
We are dealing with denormal (subnormal) floting point values here.<br>
<a href="../../../../en.wikipedia.org/wiki/denormal_number">http://en.wikipedia.org/wiki/Denormal_number</a><br>
<br>
With IEEE floating point,<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br></code></pre></td>
<td class="source"><pre><code><var>float</var> minVal = pow(2,-149); <cite>// equal to or close to the smallest <b>denormal</b> float possible</cite>
              <cite>// it has a magnitude smaller that the smallest normal floating point number </cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;cmath&gt;</dfn>
<dfn>#include &lt;limits&gt;</dfn>
<dfn>#include &lt;iomanip&gt;</dfn>

<var>int</var> main(){

  <var>const</var> <var>float</var> pow_2_149 = std::pow(2,-149); <cite>// denormal number see: <a href="../../../../en.wikipedia.org/wiki/denormal_number">http://en.wikipedia.org/wiki/Denormal_number</a></cite>
  <var>const</var> <var>float</var> min = std::numeric_limits&lt;<var>float</var>&gt;::min() ; <cite>// smallest normal value (FLT_MIN) </cite>
  <var>const</var> <var>float</var> lowest = std::numeric_limits&lt;<var>float</var>&gt;::lowest() ; <cite>// lowest normal value (-FLT_MAX)</cite>
  <var>const</var> <var>float</var> denorm_min = std::numeric_limits&lt;<var>float</var>&gt;::denorm_min() ; <cite>// smallest denormal value</cite>
  
  
  <var>const</var> <var>float</var> pow_2_149_by_2 = pow_2_149 / 2 ;  
  <var>const</var> <var>float</var> min_by_2 = min / 2 ; <cite>// smaller than smallest normal value, therefore denormal</cite>
  <var>const</var> <var>float</var> lowest_by_2 = lowest / 2 ; <cite>// lower than lowest normal value, therefore denormal</cite>
  <var>const</var> <var>float</var> denorm_min_by_2 = denorm_min / 2 ; <cite>// smaller than smallest denormal value, therefore zero</cite>
  
  std::cout &lt;&lt; std::scientific &lt;&lt; std::setprecision( std::numeric_limits&lt;<var>float</var>&gt;::digits10 + 1 ) &lt;&lt; std::boolalpha
            &lt;&lt; pow_2_149 &lt;&lt; <kbd>' '</kbd>  &lt;&lt; min &lt;&lt; <kbd>' '</kbd> &lt;&lt; lowest &lt;&lt; <kbd>' '</kbd> &lt;&lt; denorm_min &lt;&lt; <kbd>'\n'</kbd> 
            &lt;&lt; pow_2_149_by_2 &lt;&lt; <kbd>' '</kbd> &lt;&lt; min_by_2 &lt;&lt; <kbd>' '</kbd> &lt;&lt; lowest_by_2 &lt;&lt; <kbd>' '</kbd> &lt;&lt; denorm_min_by_2 &lt;&lt; <kbd>'\n'</kbd> 
            &lt;&lt; ( pow_2_149_by_2 == 0 ) &lt;&lt; <kbd>' '</kbd> &lt;&lt;  ( min_by_2 == 0 ) &lt;&lt; <kbd>' '</kbd> &lt;&lt; ( lowest_by_2 == 0 ) &lt;&lt; <kbd>' '</kbd> &lt;&lt; ( denorm_min_by_2 == 0 ) &lt;&lt; <kbd>'\n'</kbd> ;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>g++ -std=c++11 -O2 -Wall -Wextra -pedantic-errors main.cpp &amp;&amp; ./a.out
clang++ -std=c++11 -stdlib=libc++ -O2 -Wall -Wextra -pedantic-errors main.cpp -lsupc++ &amp;&amp; ./a.out

1.4012985e-45 1.1754944e-38 -3.4028235e+38 1.4012985e-45
0.0000000e+00 5.8774718e-39 -1.7014117e+38 0.0000000e+00
true false false true

1.4012985e-45 1.1754944e-38 -3.4028235e+38 1.4012985e-45
0.0000000e+00 5.8774718e-39 -1.7014117e+38 0.0000000e+00
true false false true</samp></pre></td></tr></table></div><br>
<a href="../../../../coliru.stacked-crooked.com/a/c5c0524f0651d873">http://coliru.stacked-crooked.com/a/c5c0524f0651d873</a><br>
<a href="../../../../rextester.com/dzcy5419">http://rextester.com/DZCY5419</a>
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm14805c2181" title="Sat, 01 Nov 2014 17:31:27 +0000"></span><script type="text/javascript">WhenId('CH_zTm14805c2181');</script><noscript>Nov 1, 2014 at 5:31pm UTC</noscript></span>
<span class="dbtn" id="CH_btn770865"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg771037"><span title="771037,88654,1023,2981,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg771037" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmfaa86d0418" title="Sun, 02 Nov 2014 01:12:38 +0000"></span><script type="text/javascript">WhenId('CH_zTmfaa86d0418');</script><noscript>Nov 2, 2014 at 1:12am UTC</noscript></div>
<div class="dwho"><a href="../../../user/theideasman/default.htm"><b>TheIdeasMan</b> (2981)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i771037">
Hi,<br>
<br>
In addition to the expert advice already given, it might help to realise how floating point numbers are stored (very basically).<br>
<br>
They are like a number in scientific format, say -1.23e-4 say, except in binary (very basically speaking). So there is 4 parts: the sign of the mantissa; the mantissa (1.23) ; the exponent sign; and the exponent.<br>
<br>
The mantissa is stored as a binary fraction less than 1 with the first digit being 1 (the exponent is adjusted to suit). So the mantissa of 7.5 is stored as 11 because 0.5 + 0.25 is 0.75 and 1/2 + 1/4 is 0.11 in binary.<br>
<br>
So this has a bunch of consequences, one of which is not every real number can be represented exactly:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br></code></pre></td>
<td class="source"><pre><code><var>float</var> a = 0.1; <cite>// a = 0.0999997 maybe</cite>

<var>if</var> (a == 0.1){} <cite>// almost certainly false</cite>

<var>if</var> (10.0 * a == 1.0){}  <cite>// almost certainly false</cite>

<var>const</var> <var>float</var> PRECISION 1e-6;
<var>const</var> <var>float</var> MyNum = 10 * a;

<var>if</var> (std::abs (1.0 - MyNum) &lt;  PRECISION ){} <cite>// should be true MyNum == 1.0 to 6dp </cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Changing the type to double doesn't help - now we 15 or 16 significant figures instead of 6 or 7.<br>
<br>
The precision of floats is a problem: if one has a number larger than 1 or 10 million depending on whether your system has 6 or 7 significant figures for floats; then decimal fractions are no longer represented. That is, we can no longer represent 1000000.1<br>
<br>
So it is a good idea to always use double rather than float, unless you are using some graphics library that requires them, say. <br>
<br>
<span class="auto"><code class="source"><var>double</var> </code></span>is usually good enough for most people, but there are extended precision types in libraries such as boost and others. For example Astrophysicists use light years instead of metres for units.<br>
<br>
<span class="auto"><code class="source"><var>long</var> <var>double</var></code></span> only provides an extra 2 significant figures, but has larger exponents.<br>
<br>
I read somewhere that exact decimal are coming / proposed  in C++17.<br>
<br>
<br>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn771037"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg771194"><span title="771194,156229,255,2,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg771194" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm4b1f4a15f3" title="Sun, 02 Nov 2014 12:55:54 +0000"></span><script type="text/javascript">WhenId('CH_zTm4b1f4a15f3');</script><noscript>Nov 2, 2014 at 12:55pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/noctilux/default.htm"><b>noctilux</b> (2)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i771194">
Hi guys,<br>
<br>
Thanks for the responses. I have to admit I was so impatient to know the answer that I also posted on StackOverflow here: <a href="../../../../stackoverflow.com/questions/26690196/strange-behaviour-when-comparing-cast-float-to-zero">http://stackoverflow.com/questions/26690196/strange-behaviour-when-comparing-cast-float-to-zero</a><br>
<br>
I think between your answers and theirs, I now have a complete picture. Thanks in particular to MiiNiPaa for the link to the interesting articles.<br>
<br>
MiiNiPaa, you are right. Assembler code reveals that on my Windows machine, the compiler apparently uses 387 instructions which store intermediary values at a higher precision, which explains why it didn't evaluate to zero. I tried it on a different machine running Ubuntu, which gave a different answer as it was using SSE instructions and thus not using excess precision at intermediate steps.<br>
<br>
So thanks again everyone!
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn771194"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Registered users can post here. <a href="../../../user/default.htm">Sign in or register</a> to post.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(146574,0,156229,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li class="selected"><a href="../default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~361.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>