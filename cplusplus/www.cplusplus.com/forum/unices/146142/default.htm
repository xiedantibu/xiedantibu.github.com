<!DOCTYPE html><!-- saved from url=(0056)http://www.cplusplus.com/forum/unices/146142/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title> I just want to know why I get and error - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">UNIX/Linux Programming</a></li>
<li class="here"> I just want to know why I get and error</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico question" title="question">&nbsp;</div><div class="C_ico solved" title="solved">&nbsp;</div>  I just want to know why I get and error on 54th line saying invalid conversion from void to process ?? Any Idea anyone &gt;??</h3><span id="CH_edttl"></span><span class="rootdatPost" title="146142,root,0,-1,4,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg768955"><span title="768955,118521,1023,2,1"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg768955" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmc88c4dcc4d" title="Tue, 28 Oct 2014 04:00:52 +0000"></span><script type="text/javascript">WhenId('CH_zTmc88c4dcc4d');</script><noscript>Oct 28, 2014 at 4:00am UTC</noscript></div>
<div class="dwho"><a href="../../../user/krunal/default.htm"><b>Krunal</b> (2)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i768955">
Thanks
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTmbc2513eba0" title="Tue, 28 Oct 2014 23:20:59 +0000"></span><script type="text/javascript">WhenId('CH_zTmbc2513eba0');</script><noscript>Oct 28, 2014 at 11:20pm UTC</noscript></span>
<span class="dbtn" id="CH_btn768955"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg769019"><span title="769019,72446,1023,5917,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg769019" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm05525dcf04" title="Tue, 28 Oct 2014 09:06:02 +0000"></span><script type="text/javascript">WhenId('CH_zTm05525dcf04');</script><noscript>Oct 28, 2014 at 9:06am UTC</noscript></div>
<div class="dwho"><a href="../../../user/peter87/default.htm"><b>Peter87</b> (5917)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i769019">
<table class="quote"><tr><th class="qh"><strong>Krunal</strong> wrote:</th></tr><tr><td class="qd"><div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142<br>143<br>144<br>145<br>146<br>147<br>148<br>149<br>150<br>151<br>152<br>153<br>154<br>155<br>156<br>157<br>158<br>159<br>160<br>161<br>162<br>163<br>164<br>165<br>166<br>167<br>168<br>169<br>170<br>171<br>172<br>173<br>174<br>175<br>176<br>177<br>178<br>179<br>180<br>181<br>182<br>183<br>184<br>185<br>186<br>187<br>188<br>189<br>190<br>191<br>192<br>193<br>194<br>195<br>196<br>197<br>198<br>199<br>200<br>201<br>202<br>203<br>204<br>205<br>206<br>207<br>208<br>209<br>210<br>211<br>212<br>213<br>214<br>215<br>216<br>217<br>218<br>219<br>220<br>221<br>222<br>223<br>224<br>225<br>226<br>227<br>228<br>229<br>230<br>231<br>232<br>233<br>234<br>235<br>236<br>237<br>238<br>239<br>240<br>241<br>242<br>243<br>244<br>245<br>246<br>247<br>248<br>249<br>250<br>251<br>252<br>253<br>254<br>255<br>256<br>257<br>258<br>259<br>260<br>261<br>262<br>263<br>264<br>265<br>266<br>267<br>268<br>269<br>270<br>271<br>272<br>273<br>274<br>275<br>276<br>277<br>278<br>279<br>280<br>281<br>282<br>283<br>284<br>285<br>286<br>287<br>288<br>289<br>290<br>291<br>292<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;stdio.h&gt;</dfn>
<dfn>#include &lt;stdlib.h&gt;</dfn>

<cite>/* Process Data Structure */</cite>
<var>struct</var> process {
	<var>int</var> pid; <cite>/* Process ID */</cite>
	<var>int</var> burst; <cite>/* CPU Burst Time */</cite>
	<var>int</var> priority; <cite>/* Priority */</cite>
	<var>int</var> working; <cite>/* Working time, for round-robin scheduling */</cite>
	<var>int</var> waiting; <cite>/* Waiting time, for round-robin scheduling */</cite>
	<var>struct</var> process *next;
};

<var>struct</var> process *init_process (<var>int</var> pid, <var>int</var> burst, <var>int</var> priority);
<var>void</var> fcfs (<var>struct</var> process *proc);
<var>void</var> listprocs (<var>struct</var> process *proc);
<var>void</var> priority (<var>struct</var> process *proc);
<var>void</var> rr (<var>struct</var> process *proc, <var>int</var> quantum);
<var>void</var> sjf (<var>struct</var> process *proc);
<var>int</var> main (<var>void</var>) {
	<cite>/* Initialize process list */</cite>
	<var>struct</var> process *plist, *ptmp;
	plist = init_process(1, 10, 3);
	plist-&gt;next = init_process(2, 1, 1); ptmp = plist-&gt;next;
	ptmp-&gt;next = init_process(3, 2, 3); ptmp = ptmp-&gt;next;
	ptmp-&gt;next = init_process(4, 1, 4); ptmp = ptmp-&gt;next;
	ptmp-&gt;next = init_process(5, 5, 2);

	<cite>/* Perform simulations */</cite>
	listprocs(plist);
	fcfs(plist);
	sjf(plist);
	priority(plist);
	rr(plist, 1);

	<var>while</var> (plist != NULL) {
		ptmp = plist;
		plist = plist-&gt;next;
		free(ptmp);
	};
	<var>return</var>(0);
};


<cite>/* Process list entry initialization routine */</cite>
<var>struct</var> process *init_process (<var>int</var> pid, <var>int</var> burst, <var>int</var> priority) {
	<var>struct</var> process *proc;
	proc = malloc(<var>sizeof</var>(<var>struct</var> process));
	<var>if</var> (proc == NULL) {
		printf(<kbd>"Fatal error: memory allocation failure.\nTerminating.\n"</kbd>);
		exit(1);
	};
	proc-&gt;pid = pid;
	proc-&gt;burst = burst;
	proc-&gt;priority = priority;
	proc-&gt;working = 0;
	proc-&gt;waiting = 0;
	proc-&gt;next = NULL;
	<var>return</var>(proc);
};


<cite>/* First-Come-First-Served scheduling simulation */</cite>
<var>void</var> fcfs (<var>struct</var> process *proc) {
	<var>int</var> time = 0, start, end;
	<var>struct</var> process *tmp = proc;

	printf(<kbd>"BEGIN:\tFirst-Come-First-Served scheduling simulation\n"</kbd>);

	<var>while</var> (tmp != NULL) {
		start = time;
		time += tmp-&gt;burst;
		end = time;
		printf(<kbd>"Process: %d\tEnd Time: %d\tWaiting: %d\tTurnaround: %d\n"</kbd>, tmp-&gt;pid, time, start, end);
		tmp = tmp-&gt;next;
	};

	printf(<kbd>"END:\tFirst-Come-First-served scheduling simulation\n\n"</kbd>);
};


<cite>/* Process listing */</cite>
<var>void</var> listprocs (<var>struct</var> process *proc) {
	<var>struct</var> process *tmp = proc;

	printf(<kbd>"BEGIN:\tProcess Listing\n"</kbd>);

	<var>while</var> (tmp != NULL) {
		printf(<kbd>"PID: %d\t\tPriority: %d\tBurst: %d\n"</kbd>, tmp-&gt;pid, tmp-&gt;priority, tmp-&gt;burst);
		tmp = tmp-&gt;next;
	};

	printf(<kbd>"END:\tProcess Listing\n\n"</kbd>);
};



<var>void</var> priority (<var>struct</var> process *proc) {
	<var>int</var> time, start, end, highest;
	<var>struct</var> process *copy, *tmpsrc, *tmp, *beforehighest;

	printf(<kbd>"BEGIN:\tPriority scheduling simulation\n"</kbd>);

	<cite>/* Duplicate process list */</cite>
	tmpsrc = proc;
	copy = tmp = NULL;
	<var>while</var> (tmpsrc != NULL) {
		<var>if</var> (copy == NULL) {
			copy = init_process(tmpsrc-&gt;pid, tmpsrc-&gt;burst, tmpsrc-&gt;priority);
			tmp = copy;
		} <var>else</var> {
			tmp-&gt;next = init_process(tmpsrc-&gt;pid, tmpsrc-&gt;burst, tmpsrc-&gt;priority);
			tmp = tmp-&gt;next;
		};
		tmpsrc = tmpsrc-&gt;next;
	};

	<cite>/* Main routine */</cite>
	time = 0;
	<var>while</var> (copy != NULL) {
		<cite>/* Find the next job */</cite>
		beforehighest = NULL;
		highest = copy-&gt;priority;
		tmp = copy-&gt;next;
		tmpsrc = copy;
		<var>while</var> (tmp != NULL) {
			<var>if</var> (tmp-&gt;priority &lt; highest) {
				highest = tmp-&gt;priority;
				beforehighest = tmpsrc;
			};
			tmpsrc = tmp;
			tmp = tmp-&gt;next;
		};

		<cite>/* Process job and remove from copy of process list */</cite>
		<var>if</var> (beforehighest == NULL) {
			<cite>/* Handle first job is highest priority case */</cite>
			start = time;
			time += copy-&gt;burst;
			end = time;
			printf(<kbd>"Process: %d\tEnd Time: %d\tWaiting: %d\tTurnaround: %d\n"</kbd>, copy-&gt;pid, time, start, end);
			tmpsrc = copy-&gt;next;
			free(copy);
			copy = tmpsrc;
		} <var>else</var> {
			<cite>/* Handle first job is not highest priority case */</cite>
			tmp = beforehighest-&gt;next;
			start = time;
			time += tmp-&gt;burst;
			end = time;
			printf(<kbd>"Process: %d\tEnd Time: %d\tWaiting: %d\tTurnaround: %d\n"</kbd>, tmp-&gt;pid, time, start, end);
			beforehighest-&gt;next = tmp-&gt;next;
			free(tmp);
		};
	};

	printf(<kbd>"END:\tPriority scheduling simulation\n\n"</kbd>);
};


<cite>/* Round-Robin scheduling simulation */</cite>
<var>void</var> rr (<var>struct</var> process *proc, <var>int</var> quantum) {
	<var>int</var> jobsremain, passes;
	<var>struct</var> process *copy, *tmpsrc, *tmp, *slot;

	printf(<kbd>"BEGIN:\tRound-Robin scheduling simulation (Quantum: %d)\n"</kbd>, quantum);
	<cite>/* Duplicate process list */</cite>
	tmpsrc = proc;
	copy = tmp = NULL;
	<var>while</var> (tmpsrc != NULL) {
		<var>if</var> (copy == NULL) {
			copy = init_process(tmpsrc-&gt;pid, tmpsrc-&gt;burst, tmpsrc-&gt;priority);
			tmp = copy;
		} <var>else</var> {
			tmp-&gt;next = init_process(tmpsrc-&gt;pid, tmpsrc-&gt;burst, tmpsrc-&gt;priority);
			tmp = tmp-&gt;next;
		};
		tmpsrc = tmpsrc-&gt;next;
	};

	<cite>/* Main routine */</cite>
	jobsremain = 1;
	slot = NULL;
	<var>while</var> (jobsremain) {
		jobsremain = 0;

		<cite>/* Pick next working slot */</cite>
		<var>if</var> (slot == NULL) {
			slot = copy;
			jobsremain = 1;
		} <var>else</var> {
			passes = 0;
			<var>do</var> {
				<var>if</var> (slot-&gt;next == NULL) {
					passes++;
					slot = copy;
				} <var>else</var> {
					slot = slot-&gt;next;
				};
			} <var>while</var> (passes &lt;= 2 &amp;&amp; slot-&gt;burst &lt;= slot-&gt;working);
			<var>if</var> (passes &lt;= 2) {
				jobsremain = 1;
			};
		};

		<cite>/* Perform a cycle */</cite>
		tmp = copy;
		<var>while</var> (tmp != NULL) {
			<var>if</var> (tmp-&gt;burst &gt; tmp-&gt;working) {
				<var>if</var> (tmp == slot) {
					tmp-&gt;working += quantum;
				} <var>else</var> {
					tmp-&gt;waiting += quantum;
				};
			};
			tmp = tmp-&gt;next;
		};
	};
	tmp = copy;
	<var>while</var> (tmp != NULL) {
		printf(<kbd>"Process: %d\tWorking: %d\tWaiting: %d\tTurnaround: %d\n"</kbd>, tmp-&gt;pid, tmp-&gt;working, tmp-&gt;waiting, tmp-&gt;working + tmp-&gt;waiting);
		tmpsrc = tmp;
		tmp = tmp-&gt;next;
		free(tmpsrc);
	};

	printf(<kbd>"END:\tRR scheduling simulation\n\n"</kbd>);
};


<cite>/* Shortest Job First scheduling simulation */</cite>
<var>void</var> sjf (<var>struct</var> process *proc) {
	<var>int</var> time, start, end, shortest;
	<var>struct</var> process *copy, *tmpsrc, *tmp, *beforeshortest;

	printf(<kbd>"BEGIN:\tShortest Job First scheduling simulation\n"</kbd>);


	tmpsrc = proc;
	copy = tmp = NULL;
	<var>while</var> (tmpsrc != NULL) {
		<var>if</var> (copy == NULL) {
			copy = init_process(tmpsrc-&gt;pid, tmpsrc-&gt;burst, tmpsrc-&gt;priority);
			tmp = copy;
		} <var>else</var> {
			tmp-&gt;next = init_process(tmpsrc-&gt;pid, tmpsrc-&gt;burst, tmpsrc-&gt;priority);
			tmp = tmp-&gt;next;
		};
		tmpsrc = tmpsrc-&gt;next;
	};

	<cite>/* Main routine */</cite>
	time = 0;
	<var>while</var> (copy != NULL) {
		<cite>/* Find the next job */</cite>
		beforeshortest = NULL;
		shortest = copy-&gt;burst;
		tmp = copy-&gt;next;
		tmpsrc = copy;
		<var>while</var> (tmp != NULL) {
			<var>if</var> (tmp-&gt;burst &lt; shortest) {
				shortest = tmp-&gt;burst;
				beforeshortest = tmpsrc;
			};
				tmpsrc = tmp;
				tmp = tmp-&gt;next;
		};

		<cite>/* Process job and remove from copy of process list */</cite>
		<var>if</var> (beforeshortest == NULL) {
			<cite>/* Handle first job is shortest case */</cite>
			start = time;
			time += copy-&gt;burst;
			end = time;
			printf(<kbd>"Process: %d\tEnd Time: %d\tWaiting: %d\tTurnaround: %d\n"</kbd>, copy-&gt;pid, time, start, end);
			tmpsrc = copy;
			copy = copy-&gt;next;
			free(tmpsrc);
		} <var>else</var> {
			<cite>/* Handle first job is not shortest case */</cite>
			tmp = beforeshortest-&gt;next;
			start = time;
			time += tmp-&gt;burst;
			end = time;
			printf(<kbd>"Process: %d\tEnd Time: %d\tWaiting: %d\tTurnaround: %d\n"</kbd>, tmp-&gt;pid, time, start, end);
			beforeshortest-&gt;next = tmp-&gt;next;
			free(tmp);
		};
	};

	printf(<kbd>"END:\tShortest Job First scheduling simulation\n\n"</kbd>);
}; </code></pre></td><td class="C_btnholder"></td></tr></table></div>
</td></tr></table><br>
<br>
In C++ the conversion from void* to other pointer types are not implicit so you have to make an explicit cast.<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>&nbsp;</code></pre></td>
<td class="source"><pre><code>proc = <var>static_cast</var>&lt;process*&gt;(malloc(<var>sizeof</var>(<var>struct</var> process)));</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm967cb9b15f" title="Tue, 28 Oct 2014 23:43:30 +0000"></span><script type="text/javascript">WhenId('CH_zTm967cb9b15f');</script><noscript>Oct 28, 2014 at 11:43pm UTC</noscript></span>
<span class="dbtn" id="CH_btn769019"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg769020"><span title="769020,111189,1023,3222,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg769020" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm7b29fb8174" title="Tue, 28 Oct 2014 09:06:38 +0000"></span><script type="text/javascript">WhenId('CH_zTm7b29fb8174');</script><noscript>Oct 28, 2014 at 9:06am UTC</noscript></div>
<div class="dwho"><a href="../../../user/keskiverto/default.htm"><b>keskiverto</b> (3222)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i769020">
Please add the code tags: <a href="../../../articles/jeywvcm9/default.htm">http://www.cplusplus.com/articles/jEywvCM9/</a><br>
(Finding line 54 without them is too much.)
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn769020"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg769220"><span title="769220,39669,1023,1988,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg769220" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm9b34836239" title="Tue, 28 Oct 2014 19:27:51 +0000"></span><script type="text/javascript">WhenId('CH_zTm9b34836239');</script><noscript>Oct 28, 2014 at 7:27pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/modoran/default.htm"><b>modoran</b> (1988)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i769220">
Compile that code using <b>gcc</b>, not <b>g++</b> and you don't have any problems. After all, is a pure C code, not C++.
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn769220"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Registered users can post here. <a href="../../../user/default.htm">Sign in or register</a> to post.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(146142,0,118521,1,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li class="selected"><a href="../default.htm"><b>UNIX/Linux Programming</b></a></li><li><a href="../../general/default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus.com_252fforum_252fu~20.htm">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>