<!DOCTYPE html><!-- saved from url=(0057)http://www.cplusplus.com/forum/articles/11168/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Named Pipes for data exchange in Windows - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">Articles</a></li>
<li class="here">Named Pipes for data exchange in Windows</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico default" title="post">&nbsp;</div> Named Pipes for data exchange in Windows Vista</h3><span id="CH_edttl"></span><span class="rootdatPost" title="11168,root,0,-1,1,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg52703"><span title="52703,22400,255,2,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg52703" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTma2450f989e" title="Wed, 20 May 2009 12:38:08 +0000"></span><script type="text/javascript">WhenId('CH_zTma2450f989e');</script><noscript>May 20, 2009 at 12:38pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/apriorit/default.htm"><b>Apriorit</b> (2)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i52703">
Author:<br>
Yuri Maxiutenko,<br>
Software Developer of Apriorit Inc. <br>
<br>
This article is devoted to the question about working with services and applications in Windows Vista. In particular we’ll consider how to organize the data exchange between the service and applications. There are a number of different approaches but we will talk about named pipes.<br>
<br>
If we talk about big volumes of data in exchange process beteen the application and service in Windows Vista we can use named pipe technology. We must mention that the code below is provided in C++. The classes for working with the named pipes in C# were also introduced but only since .NET Framework 3.5. If you want to know how to use these new .NET tools for working with the named pipes you can read, for example, this article:<br>
<a href="../../../../social.msdn.microsoft.com/forums/en-us/csharpgeneral/thread/23dc2951-8b59-48e4-89fe-d2b435db48c6">http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/23dc2951-8b59-48e4-89fe-d2b435db48c6</a><br>
<br>
Let’s suppose that an application periodically needs to send some number of unsigned int type to the service.<br>
In this case we can open the named pipe on the service side and then monitor its state in the separated thread to read and process data when they come. So we create the pipe DataPipe in the service code:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br></code></pre></td>
<td class="source"><pre><code>HANDLE CreatePipe()
{
	SECURITY_ATTRIBUTES sa;
	sa.lpSecurityDescriptor = (PSECURITY_DESCRIPTOR)malloc(SECURITY_DESCRIPTOR_MIN_LENGTH);
	<var>if</var> (!InitializeSecurityDescriptor(sa.lpSecurityDescriptor, SECURITY_DESCRIPTOR_REVISION))
	{
		DWORD er = ::GetLastError();
	}
	<var>if</var> (!SetSecurityDescriptorDacl(sa.lpSecurityDescriptor, TRUE, (PACL)0, FALSE))
	{
		DWORD er = ::GetLastError();
	}
	sa.nLength = <var>sizeof</var> sa;
	sa.bInheritHandle = TRUE;

<cite>// To know the maximal size of the received data for reading from the      // pipe buffer</cite>

	<var>union</var> maxSize
	{
		UINT   _1;
	};
	HANDLE hPipe = ::CreateNamedPipe((LPSTR)<kbd>"\\\\.\\pipe\\DataPipe"</kbd>, PIPE_ACCESS_INBOUND, 
PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE | PIPE_WAIT, PIPE_UNLIMITED_INSTANCES, <var>sizeof</var> maxSize, <var>sizeof</var> maxSize,
 NMPWAIT_USE_DEFAULT_WAIT, &amp;sa);
	<var>if</var> (hPipe == INVALID_HANDLE_VALUE)
	{
		DWORD dwError = ::GetLastError();
	}
	<var>return</var> hPipe;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
We also create the function to check the thread state and perform reading if required:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br></code></pre></td>
<td class="source"><pre><code><var>unsigned</var> <var>int</var> __stdcall ThreadFunction(HANDLE&amp; hPipe)
{
	<var>while</var> (<var>true</var>)
	{
		BOOL  bResult = ::ConnectNamedPipe(hPipe, 0);
		DWORD dwError = GetLastError();

		<var>if</var> (bResult || dwError == ERROR_PIPE_CONNECTED)
		{
			BYTE  buffer[<var>sizeof</var> UINT] = {0};
			DWORD read = 0;

			UINT   uMessage = 0;

			<var>if</var> (!(::ReadFile(hPipe, &amp;buffer, <var>sizeof</var> UINT, &amp;read, 0)))
			{
				<var>unsigned</var> <var>int</var> error = GetLastError();
			}
			<var>else</var>
			{
				uMessage = *((UINT*)&amp;buffer[0]);
				<cite>// The processing of the received data</cite>
			}
			::DisconnectNamedPipe(hPipe);
		}
		<var>else</var>
		{

		}
		::Sleep(0);
	}
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
And finally start the separate thread with ThreadFunction() function:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br></code></pre></td>
<td class="source"><pre><code><var>unsigned</var> <var>int</var> id = 0;
HANDLE pipeHandle = CreatePipe();
::CloseHandle((HANDLE)::_beginthreadex(0, 0, ThreadFunction, (<var>void</var>*) pipeHandle, 0, &amp;id));</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Now we go to the application side and organize sending of data to the service via named pipe.<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br></code></pre></td>
<td class="source"><pre><code>SendDataToService(UINT message)
{
	HANDLE hPipe = INVALID_HANDLE_VALUE;
	DWORD  dwError = 0;
	<var>while</var> (<var>true</var>) 
	{ 
		hPipe = ::CreateFile((LPSTR)<kbd>"\\\\.\\pipe\\DataPipe"</kbd>, GENERIC_WRITE, 0, 0, 
OPEN_EXISTING, 0, 0);
		dwError = GetLastError();
		<var>if</var> (hPipe != INVALID_HANDLE_VALUE)
{
<var>break</var>;
} 
			
		<cite>// If any error except the ERROR_PIPE_BUSY has occurred,</cite>
            <cite>// we should return FALSE. </cite>
		<var>if</var> (dwError != ERROR_PIPE_BUSY) 
		{
			<var>return</var> FALSE;
		}
		<cite>// The named pipe is busy. Let’s wait for 20 seconds. </cite>
		<var>if</var> (!WaitNamedPipe((LPSTR)<kbd>"\\\\.\\pipe\\DataPipe"</kbd>, 20000)) 
		{ 
			dwError = GetLastError();
			<var>return</var> FALSE;
		} 
	} 
	DWORD dwRead = 0;
	<var>if</var> (!(WriteFile(hPipe, (LPVOID)&amp;message, <var>sizeof</var> UINT, &amp;dwRead, 0)))
	{
		CloseHandle(hPipe);
		<var>return</var> FALSE;
	}
	CloseHandle(hPipe);
	::Sleep(0);
	<var>return</var> TRUE;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
To learn this question deeper and a lot of features of developing for Windows Vista we also recommend the book by Michael Howard, David LeBlanc - Writing Secure Code for Windows Vista (Microsoft Press, 2007). 
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm3986c10626" title="Wed, 20 May 2009 12:40:18 +0000"></span><script type="text/javascript">WhenId('CH_zTm3986c10626');</script><noscript>May 20, 2009 at 12:40pm UTC</noscript></span>
<span class="dbtn" id="CH_btn52703"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Topic archived. No new replies allowed.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(11168,1,22400,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li><a href="../../general/default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~561.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>