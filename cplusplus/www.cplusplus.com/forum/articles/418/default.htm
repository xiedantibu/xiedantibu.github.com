<!DOCTYPE html><!-- saved from url=(0055)http://www.cplusplus.com/forum/articles/418/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>The Pointer - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">Articles</a></li>
<li class="here">The Pointer</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico default" title="post">&nbsp;</div> The Pointer</h3><span id="CH_edttl"></span><span class="rootdatPost" title="418,root,0,-1,9,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg1389"><span title="1389,9189,1023,15,1"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg1389" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm6c286e401d" title="Tue, 19 Feb 2008 06:41:59 +0000"></span><script type="text/javascript">WhenId('CH_zTm6c286e401d');</script><noscript>Feb 19, 2008 at 6:41am UTC</noscript></div>
<div class="dwho"><a href="../../../user/graham/default.htm"><b>Graham</b> (15)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i1389">
NOTE: This is just because a lot of beginners need a grasp on this concept.<br>
<br>
WHAT IT IS<br>
----------<br>
<br>
Pointers are addresses. The can be assigned, or made to "point to" another memory location. They are a powerful concept that is not well understood by many users of C. Their use can make code more efficient, more readable, and more functional.<br>
<br>
HOW TO USE IT<br>
-------------<br>
<br>
Pointers are declared by using the following template (assuming T is a type):<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>&nbsp;</code></pre></td>
<td class="source"><pre><code>T *var;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
Of course, some prefer the convention of:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>&nbsp;</code></pre></td>
<td class="source"><pre><code>T* var;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
but these modifications are in the personal opinion of the user, since the compiler ignores the whitespaces in a declaration (that don't seperate a type and the first variable).<br>
<br>
The address of a normal variable can be assigned to a pointer as follows:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br></code></pre></td>
<td class="source"><pre><code>T *ptr;
T var;
ptr=&amp;var;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
This works because the ampersand (&amp;) will take the address of var, and assign the value to the pointer, which itself holds an address.<br>
<br>
Pointers to pointers can be made. And so can pointers to those, but they are hardly useful.<br>
<br>
The asterisk (*) can dereference a pointer.<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br></code></pre></td>
<td class="source"><pre><code>T *ptr;
T var, var2;
ptr=&amp;var;

var2=*ptr;
*ptr+=var2;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
The last two statements effectively assign var2 the value of var (because the dereference operator tells the machine to follow the pointer to the variable), then adds var2 to var (the same as doubling var). Since the pointer was dereferenced to the same location as var, all operations on the dereferenced pointer will take effect on the variable it points to.<br>
<br>
Often, to signify the state of not pointing to anything, a pointer will be assigned the value of 0. This pointer is the null pointer. It is illegal to dereference a null pointer.<br>
<br>
Pointers can be declared constant by putting the keyword const before the asterisk in the declaration:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>&nbsp;</code></pre></td>
<td class="source"><pre><code>T <var>const</var> *var;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Do NOT confuse this with<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>&nbsp;</code></pre></td>
<td class="source"><pre><code><var>const</var> T *var;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
which defines var to point to a type of constant T. Constant pointers must be initialized. Arrays, in fact, are constant pointers.<br>
<br>
The space allocated for pointers is the space necessary to hold a memory address. This is usually an unsigned long.<br>
<br>
Pointers can be redirected to multiple targets. For example:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></pre></td>
<td class="source"><pre><code>T *ptr;
T var, var2;

ptr=&amp;var;
<cite>//Do some stuff with var</cite>

ptr=&amp;var2;
<cite>//Do some stuff with var2 </cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Pointers have their own kind of arithmetic: adding or subtracting values (let's say X) actually causes a shift in the address equal to X*sizeof(T). This is how arrays dereference (the expression a[x] is really *(a+x), which works because arrays are constant pointers). Multiplication and division are not allowed.<br>
<br>
A pointer to any arbitrary type T must have the declaration T * OR one of the special types, void *. Void pointers (not to be confused with null pointers) can be assigned an address to any value. Because of this, pointer arithmetic on void pointers is illegal, as is dereferencing them. You can dereference and perform arithmetic on a casted void pointer, though.<br>
<br>
A pointer definition doesn't implicitly span to each member in a declaration, you need an asterisk before each pointer variable.<br>
<br>
WHY YOU NEED THEM<br>
-----------------<br>
<br>
ARRAYS, ARRAYS, ARRAYS!!! Every array is a constant pointer, so it is pretty crucial to have this feature.<br>
<br>
Functions normally are passed copies of their parameters. By passing addresses (and defining the function to receive a pointer), the caller's value can be modified. Passing of this type is called pass by reference.<br>
<br>
Pointers are crucial to the processing of strings. Every C String is a character array, and hence a constant pointer to a character.<br>
<br>
They are also necessary when making linked lists and using dynamic memory allocation. Using pointers for dynamic memory allocation means you can:<br>
-use the same pointer for multiple seperate memory spaces.<br>
-assign this value to any other pointer with the same type or a void *.<br>
-Define an arbitrarily long range to be put under a single pointer. This is the basis of arrays.<br>
<br>
GOING FARTHER<br>
-------------<br>
<br>
Go ahead, try a few pointings. Remember, you have to cast a void pointer to use it.<br>
<br>
Pointers are used internally on several occasions. Not a program doesn't have a pointer in it, because functions are pointers to the compiled code for that function in their data segment (yes, even main). Find other such uses.<br>
<br>
Your reply is valued! Please give questions and comments below!<br>
Thank you,<br>
Graham Northup
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm1439a289d2" title="Tue, 19 Feb 2008 06:43:23 +0000"></span><script type="text/javascript">WhenId('CH_zTm1439a289d2');</script><noscript>Feb 19, 2008 at 6:43am UTC</noscript></span>
<span class="dbtn" id="CH_btn1389"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg1510"><span title="1510,8330,1023,54,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg1510" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm6f0355157b" title="Fri, 22 Feb 2008 00:44:30 +0000"></span><script type="text/javascript">WhenId('CH_zTm6f0355157b');</script><noscript>Feb 22, 2008 at 12:44am UTC</noscript></div>
<div class="dwho"><a href="../../../user/ganon11/default.htm"><b>Ganon11</b> (54)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i1510">
Looks like a great tutorial.  One thing though: You mention very briefly that pointers can be used for dynamic memory allocation.  Maybe you should go into more detail about this point - what does dynamic allocation mean/how does it differ from other allocations?  Any examples (with malloc() or new, as appropriate), etc. etc.
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn1510"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg2475"><span title="2475,9828,1023,148,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg2475" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm674087634a" title="Wed, 12 Mar 2008 15:18:29 +0000"></span><script type="text/javascript">WhenId('CH_zTm674087634a');</script><noscript>Mar 12, 2008 at 3:18pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/satm2008/default.htm"><b>satm2008</b> (148)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i2475">
&gt;&gt;Often, to signify the state of not pointing to anything, a pointer will be assigned the value of 0. This pointer is the null pointer. <br>
<br>
Wrong, a pointer is just like another variable with only the difference it points another memory location. A pointer is normally created in local memory while its pointed-to memory is in the heap. <br>
As noted in other (dynamic allocation) post, a local variable is created in stack which is volatile and tends to hold garbage if not initialized. Hence you should not assume that an uninitialized pointer holds a ZERO.<br>
<br>
Attempt to access an unitialized pointer is dangerous and the program will mostly crash (with a core dump).<br>
It is better to initialize a pointer declaration always with a NULL unless it should be of a legal value/address.<br>
<br>
for example:<br>
 <br>
T *myPtr1 = NULL;<br>
T *myPtr2;  //no guarantee of a legitimate value<br>
<br>
free (myPtr1); // or   delete myPtr1;  -- no harm/crash<br>
free (myPtr2); // or   delete myPtr2;  --  CRASH<br>
<br>
Check it out. Good luck :)<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn2475"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg2956"><span title="2956,7371,1023,310,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg2956" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm1c6d509fc1" title="Wed, 19 Mar 2008 23:25:37 +0000"></span><script type="text/javascript">WhenId('CH_zTm1c6d509fc1');</script><noscript>Mar 19, 2008 at 11:25pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/ropez/default.htm"><b>ropez</b> (310)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i2956">
@satm2008:<br>
<br>
I don't agree that the statement was wrong. He didn't say that an uninitialized pointer was null, but that value was often assigned to a pointer. Though it can not be said too often how important it is to initialize pointers.<br>
<br>
Your example looks like C code. It may still be valid C++, but we should try to make examples the way we typically write C++. I think this is better:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code>T *myPtr1 = 0; <cite>// probably keyword null_ptr in the next version of the standard</cite>
T *myPtr2; <cite>//no guarantee of a legitimate value</cite>

<var>delete</var> myPtr1; <cite>// no harm/crash</cite>
<var>delete</var> myPtr2; <cite>// CRASH </cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
BTW: Are you sure it is even OK to call free(NULL) in C?
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn2956"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg2957"><span title="2957,7371,1023,310,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg2957" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm8889c754ad" title="Wed, 19 Mar 2008 23:31:09 +0000"></span><script type="text/javascript">WhenId('CH_zTm8889c754ad');</script><noscript>Mar 19, 2008 at 11:31pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/ropez/default.htm"><b>ropez</b> (310)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i2957">
&gt;&gt; BTW: Are you sure it is even OK to call free(NULL) in C?<br>
Yes, I checked it out. It's OK.
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn2957"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg3486"><span title="3486,9828,1023,148,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg3486" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm5486fb8ed5" title="Thu, 27 Mar 2008 17:59:56 +0000"></span><script type="text/javascript">WhenId('CH_zTm5486fb8ed5');</script><noscript>Mar 27, 2008 at 5:59pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/satm2008/default.htm"><b>satm2008</b> (148)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i3486">
A pointer and its declaration (and its behaviour) almost same in C and C++, where as C++ offers more features to initialize it propertly (with their constructures and allowing new to call them).<br>
<br>
And about NULL and 0, NULL is always pre-defined 0 (ZERO) value. <br>
T *myPtr1 = NULL   <br>
or <br>
T *myPtr1 = 0   or same :)<br>
<br>
And about the rest, you check it :)<br>
<br>
<br>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn3486"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg3491"><span title="3491,9435,1023,4177,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg3491" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmae856dcf11" title="Thu, 27 Mar 2008 18:56:02 +0000"></span><script type="text/javascript">WhenId('CH_zTmae856dcf11');</script><noscript>Mar 27, 2008 at 6:56pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/grey_wolf/default.htm"><b>Grey Wolf</b> (4177)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i3491">
NULL is not necessarily the same as 0 (zero).<br>
<br>
NULL is usually defined as the lowest memory address. This may well be 0 (zero) in an architecture that has unsigned address space but not on an architecture that uses a signed address space.<br>
<br>
Although the standard dose state:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br></code></pre></td>
<td class="source"><pre><code>A null pointer constant is an integral constant expression (expr.<var>const</var>) rvalue of integer type
that evaluates to zero. A null pointer constant can be converted to a pointer type; the result is
the null pointer value of that type and is distinguishable from every other value of pointer to
object or pointer to function type. Two null pointer values of the same type shall compare
equal. The conversion of a null pointer constant to a pointer to cv-qualified type is a single
conversion, and not the sequence of a pointer conversion followed by a qualification
conversion (conv.qual).</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
and the C99 standard<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br></code></pre></td>
<td class="source"><pre><code>An integer constant expression with the value 0, or such an expression cast to type <var>void</var> *, is
called a null pointer constant.[55] If a null pointer constant is converted to a pointer type, the
resulting pointer, called a null pointer, is guaranteed to compare unequal to a pointer to any
object or function.</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm8beefaa549" title="Fri, 28 Mar 2008 12:38:05 +0000"></span><script type="text/javascript">WhenId('CH_zTm8beefaa549');</script><noscript>Mar 28, 2008 at 12:38pm UTC</noscript></span>
<span class="dbtn" id="CH_btn3491"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg3603"><span title="3603,7371,1023,310,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg3603" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmb5f4d68e2c" title="Sun, 30 Mar 2008 18:18:37 +0000"></span><script type="text/javascript">WhenId('CH_zTmb5f4d68e2c');</script><noscript>Mar 30, 2008 at 6:18pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/ropez/default.htm"><b>ropez</b> (310)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i3603">
&gt; A pointer and its declaration (and its behaviour) almost same in C and C++, where as C++ offers more features to initialize it propertly (with their constructures and allowing new to call them).<br>
<br>
Teaching beginners to use "malloc" and "free" in C++ is plain wrong.<br>
<br>
&gt; NULL is always pre-defined 0 (ZERO) value.<br>
<br>
It might (unlikely) be "(void*)0", which cannot be implicitly converted to T. However, it's not a question of whether it works, but whether it's "good practice", and I think the current trend in C++ is going towards "0" instead of "NULL" (at least until nullptr is available).<br>
<br>
I think the common definition is something like:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code><dfn>#if C++</dfn>
<dfn>#def NULL 0</dfn>
<dfn>#else C</dfn>
<dfn>#def NULL ((void*)0)</dfn>
<dfn>#end </dfn></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
@Grey Wolf:<br>
The first quote, Is that the current standard (03), or the specification for the upcoming nullptr?
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn3603"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg3608"><span title="3608,9435,1023,4177,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg3608" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm5d99ba7d65" title="Sun, 30 Mar 2008 20:30:37 +0000"></span><script type="text/javascript">WhenId('CH_zTm5d99ba7d65');</script><noscript>Mar 30, 2008 at 8:30pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/grey_wolf/default.htm"><b>Grey Wolf</b> (4177)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i3608">
Ropez,<br>
The first quote is from a disuction of the need for nullptr in the C++0x standard but is more or less from the 2003 standard. (Section 4.10 Pointer conversions)
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn3608"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Topic archived. No new replies allowed.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(418,1,9189,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li><a href="../../general/default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~594.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>