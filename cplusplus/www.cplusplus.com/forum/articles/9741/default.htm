<!DOCTYPE html><!-- saved from url=(0056)http://www.cplusplus.com/forum/articles/9741/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Reading user input as strings with getch - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">Articles</a></li>
<li class="here">Reading user input as strings with getch</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico default" title="post">&nbsp;</div> Reading user input as strings with getchar()</h3><span id="CH_edttl"></span><span class="rootdatPost" title="9741,root,0,-1,7,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg45177"><span title="45177,20936,1023,9,1"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45177" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm6b7051f771" title="Thu, 09 Apr 2009 16:30:24 +0000"></span><script type="text/javascript">WhenId('CH_zTm6b7051f771');</script><noscript>Apr 9, 2009 at 4:30pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/mborja/default.htm"><b>mborja</b> (9)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45177">
Safer alternative to scanf() for reading user input as strings:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<var>using</var> <var>namespace</var> std;

<dfn>#define MAXINPUTLEN 64</dfn>

<var>int</var> main()
{
        <var>char</var> input[MAXINPUTLEN] = <kbd>""</kbd>;
        <var>char</var> cur_input;
        printf(<kbd>"Input: "</kbd>);
        <var>for</var>(<var>int</var> i=0; i &lt;= MAXINPUTLEN; i++) {
                cur_input = getchar();
                <var>if</var>(cur_input != <kbd>'\n'</kbd>)
                        input[i] = cur_input;
                <var>else</var>
                        <var>break</var>;
        }
        printf(<kbd>"%s\n"</kbd>, input);
        <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm045b41e0f0" title="Thu, 09 Apr 2009 16:37:10 +0000"></span><script type="text/javascript">WhenId('CH_zTm045b41e0f0');</script><noscript>Apr 9, 2009 at 4:37pm UTC</noscript></span>
<span class="dbtn" id="CH_btn45177"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg45178"><span title="45178,10532,1023,5804,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45178" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTma6c64a38b5" title="Thu, 09 Apr 2009 16:32:09 +0000"></span><script type="text/javascript">WhenId('CH_zTma6c64a38b5');</script><noscript>Apr 9, 2009 at 4:32pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/jsmith/default.htm"><b>jsmith</b> (5804)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45178">
But also useless, since the user can't use BACKSPACE to fix typos.<br>
<br>
string s;<br>
getline( cin, s );<br>
<br>
done.<br>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn45178"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg45179"><span title="45179,20936,1023,9,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45179" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmc4d7576177" title="Thu, 09 Apr 2009 16:39:12 +0000"></span><script type="text/javascript">WhenId('CH_zTmc4d7576177');</script><noscript>Apr 9, 2009 at 4:39pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/mborja/default.htm"><b>mborja</b> (9)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45179">
<table class="quote"><tr><td class="qd"><br>
But also useless, since the user can't use BACKSPACE to fix typos.<br>
<br>
string s;<br>
getline( cin, s );<br>
<br>
done.<br>
</td></tr></table><br>
<br>
/me needs no BACKSPACE :-)<br>
<br>
Perhaps it's Cygwin or my compiler platform, but I don't find any problems backspacing to correct typos on the command line where input is accept. I can type:<br>
<br>
asdf<br>
<br>
...backspace once and type:<br>
<br>
asd1<br>
<br>
...and it's read without any problems into my input array of characters. Perhaps a better explanation is in order about why the user can't use a backspace?
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTmb0d34a4e99" title="Thu, 09 Apr 2009 17:43:26 +0000"></span><script type="text/javascript">WhenId('CH_zTmb0d34a4e99');</script><noscript>Apr 9, 2009 at 5:43pm UTC</noscript></span>
<span class="dbtn" id="CH_btn45179"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg45204"><span title="45204,10532,1023,5804,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45204" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmeb649cb676" title="Thu, 09 Apr 2009 18:36:20 +0000"></span><script type="text/javascript">WhenId('CH_zTmeb649cb676');</script><noscript>Apr 9, 2009 at 6:36pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/jsmith/default.htm"><b>jsmith</b> (5804)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45204">
Because your input buffer looks like<br>
<br>
<tt><br>
  a    s    d    f    \8    1<br>
</tt><br>
<br>
when that gets printed, it looks like asd1 because the terminal honors the backspace.<br>
<br>
print out strlen( input ) or do strcmp( input, "asd1" ) when you type asdf &lt;bs&gt; 1 and<br>
you'll see the length is 6 and the strings are not equal.<br>
    
</div>
<div class="dhow">
<span class="dbtn" id="CH_btn45204"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg45239"><span title="45239,20936,1023,9,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45239" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm04a856e707" title="Thu, 09 Apr 2009 20:43:51 +0000"></span><script type="text/javascript">WhenId('CH_zTm04a856e707');</script><noscript>Apr 9, 2009 at 8:43pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/mborja/default.htm"><b>mborja</b> (9)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45239">
<span class="auto"><code class="source">printf(<kbd>"%s (size: %d)\n"</kbd>, input, strlen(input));</code></span><br>
<br>
When run:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br></code></pre></td>
<td class="source"><pre><code>$ ./inputecho
Input: asdf&lt;BACKSPACE&gt;&lt;BACKSPACE&gt;
as (size: 2)</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
By the way, have you actually compiled this program for yourself? At any rate, still not seeing the problem.
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTm85f10d61b0" title="Thu, 09 Apr 2009 20:45:39 +0000"></span><script type="text/javascript">WhenId('CH_zTm85f10d61b0');</script><noscript>Apr 9, 2009 at 8:45pm UTC</noscript></span>
<span class="dbtn" id="CH_btn45239"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg45243"><span title="45243,10532,1023,5804,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45243" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm4928bc6817" title="Thu, 09 Apr 2009 21:11:35 +0000"></span><script type="text/javascript">WhenId('CH_zTm4928bc6817');</script><noscript>Apr 9, 2009 at 9:11pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/jsmith/default.htm"><b>jsmith</b> (5804)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45243">
Ah, it's because getchar() doesn't actually return until the user presses ENTER so the input is being pre-processed before it gets to the program.<br>
<br>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn45243"></span>

</div>
</div>
</div>
<div class="C_forPost" id="msg45245"><span title="45245,10532,1023,5804,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg45245" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTm6e509a4ecb" title="Thu, 09 Apr 2009 21:21:46 +0000"></span><script type="text/javascript">WhenId('CH_zTm6e509a4ecb');</script><noscript>Apr 9, 2009 at 9:21pm UTC</noscript></div>
<div class="dwho"><a href="../../../user/jsmith/default.htm"><b>jsmith</b> (5804)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i45245">
Actually, though, now that I think about it,<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br></code></pre></td>
<td class="source"><pre><code><var>char</var>* buf = 0;
scanf( <kbd>"%as"</kbd>, &amp;buf );</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
does the same thing as your code, except it does not have the arbitrary input buffer size limitation.  Though %as is not standard, IIRC.<br>
<br>
Anyways being a C++ forum, I'd use streams instead.<br>
<br>
Here's a little function I cobbled up that is not only buffer overflow-proof, but also handles entry of any type so long as it is streamable:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;boost/lexical_cast.hpp&gt;</dfn>
<dfn>#include &lt;boost/lambda/lambda.hpp&gt; </dfn><cite>// For test purposes only</cite>
<dfn>#include &lt;string&gt;</dfn>

<var>using</var> <var>namespace</var> std;
<var>using</var> <var>namespace</var> boost::lambda;

<var>struct</var> accept_all
{
    <var>template</var>&lt; <var>typename</var> T &gt;
    <var>bool</var> <var>operator</var>()( <var>const</var> T&amp; ) <var>const</var>
        { <var>return</var> <var>true</var>; }
};

<var>template</var>&lt; <var>typename</var> T, <var>typename</var> Fn &gt;
T GetInput( <var>const</var> string&amp; prompt, Fn validator )
{
    <var>do</var> {
        cout &lt;&lt; prompt &lt;&lt; <kbd>": "</kbd> &lt;&lt; ends;
        string s;
        getline( cin, s );
        <var>try</var> {
            T result = boost::lexical_cast&lt;T&gt;( s );
            <var>if</var>( validator( result ) )
                <var>return</var> result;
        } <var>catch</var>( <var>const</var> boost::bad_lexical_cast&amp; ) {
            <cite>// Just ask again.</cite>
        }
        cout &lt;&lt; <kbd>"Invalid input.  Try again."</kbd> &lt;&lt; endl;
    } <var>while</var>( 1 );

    <cite>// Appease compiler</cite>
    <var>return</var> T(); <cite>// should never get here</cite>
}

<var>template</var>&lt; <var>typename</var> T &gt;
T GetInput( <var>const</var> string&amp; prompt )
{
    <var>return</var> GetInput&lt;T, accept_all&gt;( prompt, accept_all() );
}


<var>template</var>&lt; <var>typename</var> T &gt;
<var>struct</var> accept_range 
{
    accept_range( T lower, T upper = std::numeric_limits&lt;T&gt;::max() ) :
        lower( lower ), upper( upper ) {}

    <var>bool</var> <var>operator</var>()( T value ) <var>const</var>
        { <var>return</var> lower &lt;= value &amp;&amp; value &lt;= upper; }

  <var>private</var>:
    T lower;
    T upper;
};

<var>template</var>&lt; <var>typename</var> T &gt;
accept_range&lt;T&gt; range( T min, T max = std::numeric_limits&lt;T&gt;::max() )
{
    <var>return</var> accept_range&lt;T&gt;( min, max );
}

<var>int</var> main() {
    <var>int</var> x = GetInput&lt;<var>int</var>&gt;( <kbd>"Enter a positive integer"</kbd>, range( 1 ) );
    <var>int</var> y = GetInput&lt;<var>int</var>&gt;( <kbd>"Enter an integer (1-10)"</kbd>, range( 1, 10 ) );
    <var>int</var> z = GetInput&lt;<var>int</var>&gt;( <kbd>"Enter an integer (1-100)"</kbd>, _1 &gt;= 1 &amp;&amp; _1 &lt;= 100 );
    <var>double</var> f = GetInput&lt;<var>double</var>&gt;( <kbd>"Enter a double (-1.0...1.0)"</kbd>, range( -1.0, 1.0 ) );
    string s = GetInput&lt;string&gt;( <kbd>"Enter a string"</kbd> );

    cout &lt;&lt; <kbd>"You entered:"</kbd> &lt;&lt; endl 
         &lt;&lt; <kbd>"  integer            = "</kbd> &lt;&lt; x &lt;&lt; endl
         &lt;&lt; <kbd>"  int(1-10)          = "</kbd> &lt;&lt; y &lt;&lt; endl
         &lt;&lt; <kbd>"  int(1-100)         = "</kbd> &lt;&lt; z &lt;&lt; endl
         &lt;&lt; <kbd>"  double(-1.0...1.0) = "</kbd> &lt;&lt; f &lt;&lt; endl
         &lt;&lt; <kbd>"  string             = "</kbd> &lt;&lt; s &lt;&lt; endl;
}
</code></pre></td><td class="C_btnholder"></td></tr></table></div>

</div>
<div class="dhow">
<span class="dbtn" id="CH_btn45245"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Topic archived. No new replies allowed.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(9741,1,20936,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li><a href="../../general/default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~595.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>