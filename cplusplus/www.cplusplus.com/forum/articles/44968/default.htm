<!DOCTYPE html><!-- saved from url=(0057)http://www.cplusplus.com/forum/articles/44968/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Secrets of Boost Revealed: Checked Delet - C++ Forum</title>
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Forum</a></li>
<li><a href="../default.htm">Articles</a></li>
<li class="here">Secrets of Boost Revealed: Checked Delet</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<h3><div class="C_ico news" title="news">&nbsp;</div> Secrets of Boost Revealed: Checked Delete</h3><span id="CH_edttl"></span><span class="rootdatPost" title="44968,root,0,-1,1,0"></span><div id="CH_PostList"><div class="C_forPost" id="msg243931"><span title="243931,39983,1023,1228,0"></span>
<div class="box">
<div class="boxtop">
<div class="dwhen"><a href="#msg243931" title="Link to this post"><img src="../../../img/link.png" width="16" height="8"></a> <span id="CH_zTmf0aeb5a21b" title="Fri, 17 Jun 2011 00:45:03 +0000"></span><script type="text/javascript">WhenId('CH_zTmf0aeb5a21b');</script><noscript>Jun 17, 2011 at 12:45am UTC</noscript></div>
<div class="dwho"><a href="../../../user/luc_lieber/default.htm"><b>Luc Lieber</b> (1228)</a></div>
</div>
<div class="dwhat" colspan="2" id="CH_i243931">
<div class="centertext"><b><u>Secrets of Boost Revealed</u></b><br>
<br>
<b>Boost C++ Libraries ( <a href="../../../../www.boost.org/default.htm">http://www.boost.org</a> )</b><br>
<br>
<b>Topic / Idiom:</b> <i>Checked Delete</i><br>
<br>
<b>Contributor(s):</b> <i>Peter Dimov, Daniel Frey, Howard Hinnant</i><br>
<br>
<b>Boost Reference File(s):</b> <i><a href="../../../../www.boost.org/doc/libs/1_46_1/boost/checked_delete.hpp">http://www.boost.org/doc/libs/1_46_1/boost/checked_delete.hpp</a></i><br>
<br>
<b> Note - This document may contain errors, if you spot one (or a dozen of them), let me know please.</b>
</div><br>
<br>
<b>Section I:</b> <i>What is the purpose?</i><br>
<br>
The checked delete idiom adds a compile-time safety check against deleting incomplete classes.  The C++ Standard mandates that a pointer to an incomplete class may be deleted, so long as the class has a <i>trivial desctructor</i> and <i>does not overload operator delete</i>.  Deleting pointers to classes with non-trivial destructors, or classes that overload operator delete results in <i>undefined behavior</i>.<br>
<br>
<b>Section II:</b> <i>Problematic Code Example</i><br>
<br>
Consider the following:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br></code></pre></td>
<td class="source"><pre><code><cite>/* Deleter.hpp */</cite>

<dfn>#include&lt;cstdlib&gt;</dfn>

<var>class</var> A;
<var>class</var> B;
<var>class</var> C;
<var>void</var> func1(A* a);
<var>void</var> func2(B* b);
<var>void</var> func3(C* c);
<cite>/* End of Deleter.hpp */</cite>


<cite>/* Deleter.cpp */</cite>
<dfn>#include "Deleter.hpp"</dfn>
<var>void</var> func1(A* a)
{
  <var>delete</var> a;
}

<var>void</var> func2(B* b)
{
  <var>delete</var> b;
}

<var>void</var> func3(C* c)
{
  <var>delete</var> c;
}

<cite>/* End of Deleter.cpp */</cite>

<cite>/* Classes.hpp */</cite>
<var>class</var> A
{
  <var>private</var>:
    <var>int</var>* x;

  <var>public</var>:
    A(<var>void</var>)
    {
      x = <var>new</var> <var>int</var>(4);
    }

    ~A(<var>void</var>)
    {
      <var>delete</var> x;
    }
};

<var>class</var> B { };

<var>class</var> C
{
  <var>public</var>:
    <var>void</var> <var>operator</var> <var>delete</var>(<var>void</var>* pointer)
    {
      free(pointer);
    }
};
<cite>/* End of Classes.hpp */</cite>


<cite>/* Main.cpp */</cite>
<dfn>#include "Deleter.hpp"</dfn>
<dfn>#include "Classes.hpp"</dfn>
<var>int</var> main(<var>void</var>)
{
  A* a = <var>new</var> A;
  func1(a); <cite>// &lt;-- Undefined Behavior - A has a non-trivial destructor</cite>
  B* b = <var>new</var> B;
  func2(b); <cite>// &lt;-- Legal - B has a trivial destructor and does not overload operator delete</cite>
  C* c = <var>new</var> C;
  func3(c); <cite>// &lt;-- Undefined Behavior - C has an overloaded operator delete</cite>
  <var>return</var> 0;
}
<cite>/* End of Main.cpp */</cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Most compilers generate a warning when this occurs, however some compilers have been known not to catch these errors.  This is what the checked delete idiom is designed to remedy.<br>
<br>
<b>Section III:</b> <i>Line-By-Line Evaluation</i>
<div class="centertext"><sub>The original source is listed at the top of this article.<br>
The following code has been stripped of comments and preprocessor directives.</sub></div><br>
<br>
Boost's implementation of the checked delete idiom consists of two function templates and two class templates.<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br></code></pre></td>
<td class="source"><pre><code><var>template</var>&lt;<var>class</var> T&gt; <var>void</var> checked_delete(T* p)
{
  <var>typedef</var> <var>char</var> type_must_be_complete[ <var>sizeof</var>(T)? 1: -1 ];
  (<var>void</var>) <var>sizeof</var>(type_must_be_complete);
  <var>delete</var> p;
}

<var>template</var>&lt;<var>class</var> T&gt; <var>struct</var> checked_deleter
{
  <var>typedef</var> <var>void</var> result_type;
  <var>typedef</var> T * argument_type;
  <var>void</var> <var>operator</var>()(T * x) <var>const</var>
  {
    boost::checked_delete(x);
  }
};


<var>template</var>&lt;<var>class</var> T&gt; <var>void</var> checked_array_delete(T* p)
{
  <var>typedef</var> <var>char</var> type_must_be_complete[ <var>sizeof</var>(T)? 1: -1 ];
  (<var>void</var>) <var>sizeof</var>(type_must_be_complete);
  <var>delete</var> [] p;
}

<var>template</var>&lt;<var>class</var> T&gt; <var>struct</var> checked_array_deleter
{
  <var>typedef</var> <var>void</var> result_type;
  <var>typedef</var> T * argument_type;
  <var>void</var> <var>operator</var>()(T * x) <var>const</var>
  {
      boost::checked_array_delete(x);
  }
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
While the bodies of the code look very similar, one set is used to check <span class="auto"><code class="source"><var>operator</var> <var>delete</var></code></span> and the other is used to check <span class="auto"><code class="source"><var>operator</var> <var>delete</var>[]</code></span>.<br>
<br>
<b><i><u>Warning - The following contains opinions that cannot be cited to any documentation from boost.</u></i></b><br>
<br>
Lines 1-6<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br></code></pre></td>
<td class="source"><pre><code><var>template</var>&lt;<var>class</var> T&gt; <var>void</var> checked_delete(T* p)
{
  <var>typedef</var> <var>char</var> type_must_be_complete[ <var>sizeof</var>(T)? 1: -1 ];
  (<var>void</var>) <var>sizeof</var>(type_must_be_complete);
  <var>delete</var> p;
}
<cite>// Line 3:</cite>
<cite>//  sizeof(T) will either evaluate to 0,</cite>
<cite>//  or cause a compiler error if T is an incomplete type.</cite>
<cite>//  If sizeof(T) evaluates to 0, then a compiler error is</cite>
<cite>//  caused by attempting to declare an array of -1 elements.</cite>
<cite>//</cite>
<cite>//  Line 4: * Citation Needed</cite>
<cite>//   While I cannot be sure of why line 4 is there,</cite>
<cite>//   I assume that it is to prevent the compiler from</cite>
<cite>//   complaining about an unused variable, while at the</cite>
<cite>//   same time helping it optimize the build casting the</cite>
<cite>//   result of sizeof(type_must_be_completed) to void.</cite>
<cite>//</cite>
<cite>//  Line 5:</cite>
<cite>//   operator delete is called on the parameter</cite>
<cite>//</cite>
<cite>//  Furthermore, it can be deduced that the defined</cite>
<cite>//  type, `type_must_be_complete`, is named as such</cite>
<cite>//  to aid in the debugging process, as it will show</cite>
<cite>//  up in the compiler output as an indicator of where</cite>
<cite>//  the problem lies. </cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Lines 8-16<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br></code></pre></td>
<td class="source"><pre><code><var>template</var>&lt;<var>class</var> T&gt; <var>struct</var> checked_deleter
{
  <var>typedef</var> <var>void</var> result_type;
  <var>typedef</var> T * argument_type;
  <var>void</var> <var>operator</var>()(T * x) <var>const</var>
  {
    boost::checked_delete(x);
  }
};
<cite>//  Lines 3 &amp; 4:</cite>
<cite>//   As far as I can see, lines 3 and 4 are present</cite>
<cite>//   for documentation purposes.</cite>
<cite>//  Lines 5-8:</cite>
<cite>//   The overloaded operator() simply calls the corresponding</cite>
<cite>//   function. </cite></code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Lines 19-34:<br>
<i>The line-by-line for checked_array_delete is essentially the same as above.</i>
</div>
<div class="dhow">
<span class="sedited">Last edited on <span id="CH_zTmf32e20b7c0" title="Fri, 17 Jun 2011 03:03:36 +0000"></span><script type="text/javascript">WhenId('CH_zTmf32e20b7c0');</script><noscript>Jun 17, 2011 at 3:03am UTC</noscript></span>
<span class="dbtn" id="CH_btn243931"></span>

</div>
</div>
</div>
</div><div class="rootinsMore"></div><div class="rootbtnMore"></div><div class="rootinsNew"></div><div class="rootbtnNew"></div><div id="CH_insNew"></div><div id="CH_reply">Topic archived. No new replies allowed.</div><div id="CH_subscription"></div><div class="rootedtNew"></div><script type="text/javascript">new for_PostList(44968,1,39983,0,'CH_PostList','CH_subscription','CH_reply','CH_insNew','CH_edttl','../../thread.cgi','../../post.cgi','../../myposts.cgi.htm',64,32,512,256,1024,16);</script></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../../reference/default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder selected forum"><a href="../../default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../../default.htm">Forum</a></b></h3>
<ul>
<li><a href="../../beginner/default.htm"><b>Beginners</b></a></li><li><a href="../../windows/default.htm"><b>Windows Programming</b></a></li><li><a href="../../unices/default.htm"><b>UNIX/Linux Programming</b></a></li><li><a href="../../general/default.htm"><b>General C++ Programming</b></a></li><li><a href="../../lounge/default.htm"><b>Lounge</b></a></li><li><a href="../../jobs/default.htm"><b>Jobs</b></a></li></ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~581.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
function NavFor(us) {document.getElementById('I_subnav').innerHTML=us.ok?'<div class="sect"><h3><b><a href="../../../user/default.htm">'+us.user+'</a></b></h3><ul><li><a href="../../myposts.cgi.htm">My topics</a></li></ul></div>':'';}onSession(NavFor);ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>