<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/i2zyhbrd/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Sample Snake Game in C - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">Sample Snake Game in C</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/stefan_friptu/default.htm" rel="author">Stefan Friptu</a></b></div>
<div id="I_date">Oct 27, 2011 (last update: Oct 27, 2011)</div>
<h1>Sample Snake Game in C</h1>
<div id="I_score">Score: 3.4/5 (566 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"></div>
<div id="I_content">
*Note: I've attached in this message the .cpp file & .obj<br>
**: You must compile it in TurboC3/Borland C++ 3.1 or another compiler what<br>
supports GRAPHICS.H Header<br>
***: Have fun! <br>
<br>
Code:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142<br>143<br>144<br>145<br>146<br>147<br>148<br>149<br>150<br>151<br>152<br>153<br>154<br>155<br>156<br>157<br>158<br>159<br>160<br>161<br>162<br>163<br>164<br>165<br>166<br>167<br>168<br>169<br>170<br>171<br>172<br>173<br>174<br>175<br>176<br>177<br>178<br>179<br>180<br>181<br>182<br>183<br>184<br>185<br>186<br>187<br>188<br>189<br>190<br>191<br>192<br>193<br>194<br>195<br>196<br>197<br>198<br>199<br>200<br>201<br>202<br>203<br>204<br>205<br>206<br>207<br>208<br>209<br>210<br>211<br>212<br>213<br>214<br>215<br>216<br>217<br>218<br>219<br>220<br>221<br>222<br>223<br>224<br>225<br>226<br>227<br>228<br>229<br>230<br>231<br>232<br>233<br>234<br>235<br>236<br>237<br>238<br>239<br>240<br>241<br>242<br>243<br>244<br>245<br>246<br>247<br>248<br>249<br>250<br>251<br>252<br>253<br>254<br>255<br>256<br>257<br>258<br>259<br>260<br>261<br>262<br>263<br>264<br>265<br>266<br>267<br>268<br>269<br>270<br>271<br>272<br>273<br>274<br>275<br>276<br>277<br>278<br>279<br>280<br>281<br>282<br>283<br>284<br>285<br>286<br>287<br>288<br>289<br>290<br>291<br>292<br>293<br>294<br>295<br>296<br>297<br>298<br>299<br>300<br>301<br>302<br>303<br>304<br>305<br>306<br>307<br>308<br>309<br>310<br>311<br>312<br>313<br>314<br>315<br>316<br>317<br>318<br>319<br>320<br>321<br>322<br>323<br>324<br>325<br>326<br>327<br>328<br>329<br>330<br>331<br>332<br>333<br>334<br>335<br>336<br>337<br>338<br>339<br>340<br>341<br>342<br>343<br>344<br>345<br>346<br>347<br>348<br>349<br>350<br>351<br>352<br>353<br>354<br>355<br>356<br>357<br>358<br>359<br>360<br>361<br>362<br>363<br>364<br>365<br>366<br>367<br>368<br>369<br>370<br>371<br>372<br>373<br>374<br>375<br>376<br>377<br>378<br>379<br>380<br>381<br>382<br>383<br>384<br>385<br>386<br>387<br>388<br>389<br>390<br>391<br>392<br>393<br>394<br>395<br>396<br>397<br>398<br>399<br>400<br>401<br>402<br>403<br>404<br>405<br>406<br>407<br>408<br>409<br>410<br>411<br>412<br>413<br>414<br>415<br>416<br>417<br>418<br>419<br>420<br>421<br>422<br>423<br>424<br>425<br>426<br>427<br>428<br>429<br>430<br>431<br>432<br>433<br>434<br>435<br>436<br>437<br>438<br>439<br>440<br>441<br>442<br>443<br>444<br>445<br>446<br>447<br>448<br>449<br>450<br>451<br>452<br>453<br>454<br>455<br>456<br>457<br>458<br>459<br>460<br>461<br>462<br>463<br>464<br>465<br>466<br>467<br>468<br>469<br>470<br>471<br>472<br>473<br>474<br>475<br>476<br>477<br>478<br>479<br>480<br>481<br>482<br>483<br>484<br>485<br>486<br>487<br>488<br>489<br>490<br>491<br>492<br>493<br>494<br>495<br>496<br>497<br>498<br>499<br>500<br>501<br>502<br>503<br>504<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;graphics.h&gt;</dfn>
<dfn>#include &lt;stdlib.h&gt;</dfn>
<dfn>#include &lt;stdio.h&gt;</dfn>
<dfn>#include &lt;conio.h&gt;</dfn>
<dfn>#include &lt;dos.h&gt;</dfn>
<dfn>#include &lt;iostream.h&gt;</dfn>
<dfn>#include &lt;fstream.h&gt;</dfn>
<dfn>#include &lt;string.h&gt;</dfn>


<var>void</var> main(<var>void</var>)
{
   <var>int</var> gdriver = DETECT, gmode, errorcode;
   <var>void</var>
*body,*food,*tail1,*tail2,*tail3,*tail4,*head1,*head2,*head3,*head4;
   <var>int</var> x, y,X[5000],Y[5000],i=3,
maxx,maxy,speed=100,bo=10,t[10],score=0,hscore=20;
   <var>unsigned</var> <var>int</var> size;
   <var>char</var> a=<kbd>'6'</kbd>,b,scor[4],hs[4];
   <var>int</var> k=2,l,r1,r2,f=0,z=100,first=0,second=1;;
   r1=300;
   r2=350;

   ifstream infile(<kbd>"c:\tc\bin\rattle.txt"</kbd>);
   infile.getline(hs,4);
   infile.close();
   hscore = atoi(hs);



   <cite>/* initialize graphics and local variables */</cite>
   initgraph(&amp;gdriver, &amp;gmode, <kbd>"C:\\TURBOC3\\BGI"</kbd>);

   <cite>/* read result of initialization */</cite>
   errorcode = graphresult();
   <var>if</var> (errorcode != grOk)  <cite>/* an error occurred */</cite>
   {
      printf(<kbd>"Graphics error: %s"</kbd>, grapherrormsg(errorcode));
      printf(<kbd>"Press any key to halt:"</kbd>);
      getch();
      exit(1); <cite>/* terminate with an error code */</cite>
   }
   maxx = getmaxx();
   maxy = getmaxy();
   y = 160;
   x = 80;
   <var>for</var>(<var>int</var> j=0; j&lt;=3; j++)
   {
	X[i-j]=x-bo*(j+1);
	Y[i-j]=y;

   }

   <cite>//body</cite>

   setfillstyle(1,2);
   bar(10,10,20,20);
   setcolor(0);
   setlinestyle(0,1,3);
   line(9,9,21,21);
   line(9,21,21,9);
   size = imagesize(10,10,20,20);
   body = malloc(size);
   getimage(10,10,20,20,body);
   cleardevice();

   setcolor(0);
   <cite>//tail1-right</cite>
   t[0]=20; t[1]=10;
   t[2]=10; t[3]=10;
   t[4]=20; t[5]=15;
   t[6]=10; t[7]=20;
   t[8]=20; t[9]=21;
   fillpoly(5, t);
   size = imagesize(10,10,20,21);
   tail1 = malloc(size);
   getimage(10,10,20,21,tail1);
   cleardevice();

   <cite>//tail2-left</cite>
   t[0]=10; t[1]=10;
   t[2]=20; t[3]=10;
   t[4]=10; t[5]=15;
   t[6]=20; t[7]=20;
   t[8]=10; t[9]=21;
   fillpoly(5, t);
   size = imagesize(10,10,20,21);
   tail2 = malloc(size);
   getimage(10,10,20,21,tail2);
   cleardevice();

   <cite>//tail3-up</cite>
   t[0]=10; t[1]=20;
   t[2]=10; t[3]=10;
   t[4]=15; t[5]=20;
   t[6]=20; t[7]=10;
   t[8]=20; t[9]=21;
   fillpoly(5, t);
   size = imagesize(10,10,20,21);
   tail3 = malloc(size);
   getimage(10,10,20,21,tail3);
   cleardevice();

   <cite>//tail4-down</cite>
   t[0]=10; t[1]=10;
   t[2]=10; t[3]=21;
   t[4]=15; t[5]=10;
   t[6]=20; t[7]=21;
   t[8]=20; t[9]=10;
   fillpoly(5, t);
   size = imagesize(10,10,20,21);
   tail4 = malloc(size);
   getimage(10,10,20,21,tail4);
   cleardevice();

   <cite>//head1-right</cite>
   setlinestyle(1,1,1);
   setcolor(2);
   fillellipse(10,10,10,5);
   setcolor(4);
   <cite>//eyes</cite>
   fillellipse(15,7,1,1);
   fillellipse(15,13,1,1);
   size = imagesize(10,5,20,15);
   head1 = malloc(size);
   getimage(10,5,20,15,head1);

   <cite>//head2-left</cite>
   <cite>//eyes</cite>
   fillellipse(5,7,1,1);
   fillellipse(5,13,1,1);
   size = imagesize(0,5,10,15);
   head2 = malloc(size);
   getimage(0,5,10,15,head2);
   cleardevice();

   <cite>//head3-up</cite>
   <cite>//eyes</cite>
   setcolor(2);
   fillellipse(12,12,5,10);
   setcolor(4);
   fillellipse(9,6,1,1);
   fillellipse(15,6,1,1);
   size = imagesize(7,2,18,12);
   head3 = malloc(size);
   getimage(7,2,18,12,head3);


   <cite>//head4-down</cite>
   <cite>//eyes</cite>
   fillellipse(9,17,1,1);
   fillellipse(15,17,1,1);
   size = imagesize(7,12,18,22);
   head4 = malloc(size);
   getimage(7,12,18,22,head4);
   cleardevice();


   <cite>//food</cite>
   setcolor(15);
   setfillstyle(1,15);
   fillellipse(10,10,3,5);
   size = imagesize(5,3,15,17);
   food = malloc(size);
   getimage(5,3,15,17,food);
   cleardevice();

    <cite>/* repeat until a key is pressed */</cite>

   maxx=getmaxx();
   maxy=getmaxy();
   setlinestyle(0,1,3);
   setcolor(9);
   rectangle(0,0,maxx,maxy);
   setlinestyle(0,1,2);
   line(maxx-150,0,maxx-150,maxy);
   setcolor(8);
   setfillstyle(1,8);
   bar(maxx-147,3,maxx-3,63);
   setcolor(12);
   <var>int</var> maze=1;
   <var>if</var>(maze==1)
   {
   setfillstyle(1,6);
   bar(4,4,maxx-154,14);
   bar(4,4,14,maxy-4);
   bar(4,maxy-4,maxx-154,maxy-14);
   bar(maxx-154-10,4,maxx-154,maxy-4);
   }


   settextstyle(0,0,1);
   delay(300);
   outtextxy(maxx-125,30,<kbd>"RATTLE SNAKE"</kbd>);
   delay(300);
   setcolor(11);
   setlinestyle(0,1,2);
   rectangle(maxx-145,65,maxx-5,205);
   outtextxy(maxx-128,70,<kbd>"INSTRUCTIONS"</kbd>);
   delay(200);
   setcolor(6);
   outtextxy(maxx-140,90,<kbd>"Commands     Key"</kbd>);
   delay(300);
   setcolor(8);
   outtextxy(maxx-140,110,<kbd>" Move Up      8"</kbd>);
   delay(50);
   outtextxy(maxx-140,130,<kbd>" Move Down    5"</kbd>);
    delay(50);
   outtextxy(maxx-140,150,<kbd>" Move Right   6"</kbd>);
    delay(50);
   outtextxy(maxx-140,170,<kbd>" Move Left    4"</kbd>);
    delay(50);
   outtextxy(maxx-140,190,<kbd>" Exit         0"</kbd>);
   delay(200);
   setcolor(12);
   setlinestyle(0,1,2);
   rectangle(maxx-145,210,maxx-5,350);
   setcolor(1);
   outtextxy(maxx-130,220,<kbd>"Player's Name"</kbd>);
   setcolor(15);
   outtextxy(maxx-100,230,<kbd>"Yellow"</kbd>);
   setcolor(4);
   delay(200);
   itoa(score,scor,10);
   outtextxy(maxx-140,250,<kbd>"Score"</kbd>);
   outtextxy(maxx-50,250,scor);
   delay(200);
   setcolor(10);
   outtextxy(maxx-140,280,<kbd>"Level"</kbd>);
   delay(200);
   setcolor(13);
   outtextxy(maxx-140,310,<kbd>"Maze        1"</kbd>);
   delay(200);
   setcolor(14);
   outtextxy(maxx-140,340,<kbd>"High Score  "</kbd>);
   outtextxy(maxx-50,340,hs);

   <var>for</var>(j=0; j&lt;=1000; j++)
   {
	putpixel(random(maxx-150),random(maxy),6);
	delay(1);
   }

   <var>while</var> (a!=<kbd>'0'</kbd>)
   {

       <cite>// plot new image</cite>
      <var>if</var>(a==<kbd>'6'</kbd>)
	    putimage(x, y, head1, XOR_PUT);
      <var>if</var>(a==<kbd>'4'</kbd>)
	    putimage(x, y, head2, XOR_PUT);
      <var>if</var>(a==<kbd>'8'</kbd>)
	    putimage(x, y, head3, XOR_PUT);
      <var>if</var>(a==<kbd>'5'</kbd>)
	    putimage(x, y, head4, XOR_PUT);

      <var>for</var>(j=0; j&lt;k; j++)
      {
	   putimage(X[i-j], Y[i-j], body, XOR_PUT);
      }

      <var>if</var>((X[i-j-1]-X[i-j])&lt;0  &amp;&amp; (Y[i-j-1]-Y[i-j])==0)
	    putimage(X[i-j], Y[i-j], tail1, XOR_PUT);

      <var>if</var>((X[i-j-1]-X[i-j])&gt;0  &amp;&amp; (Y[i-j-1]-Y[i-j])==0)
	    putimage(X[i-j], Y[i-j], tail2, XOR_PUT);

      <var>if</var>((X[i-j-1]-X[i-j])==0  &amp;&amp; (Y[i-j-1]-Y[i-j])&lt;0)
	    putimage(X[i-j], Y[i-j], tail3, XOR_PUT);

      <var>if</var>((X[i-j-1]-X[i-j])==0  &amp;&amp; (Y[i-j-1]-Y[i-j])&gt;0)
	    putimage(X[i-j], Y[i-j], tail4, XOR_PUT);

      delay(speed);

      <var>if</var>(second==1)
      {
	setcolor(15);
	outtextxy(maxx-140,360,<kbd>"Press Any Key..."</kbd>);
	getch();
	setcolor(0);
	outtextxy(maxx-140,360,<kbd>"Press Any Key..."</kbd>);
	a=<kbd>'6'</kbd>;

	second=2;
      }


      <var>if</var>(first==1)
      {
	setcolor(15);
	outtextxy(maxx-140,360,<kbd>"Congratulations  "</kbd>);
	sound(100);
	delay(300);
	nosound();
	getch();
	setcolor(0);
	outtextxy(maxx-140,360,<kbd>"Congratulations  "</kbd>);
	second++;
	first=2;

      }

	<cite>// erase old image</cite>
      <var>if</var>(a==<kbd>'6'</kbd>)
	    putimage(x, y, head1, XOR_PUT);
      <var>if</var>(a==<kbd>'4'</kbd>)
	    putimage(x, y, head2, XOR_PUT);
      <var>if</var>(a==<kbd>'8'</kbd>)
	    putimage(x, y, head3, XOR_PUT);
      <var>if</var>(a==<kbd>'5'</kbd>)
	    putimage(x, y, head4, XOR_PUT);


      <var>for</var>(j=0; j&lt;k; j++)
      {
	   putimage(X[i-j], Y[i-j], body, XOR_PUT);

      }

      <var>if</var>((X[i-j-1]-X[i-j])&lt;0  &amp;&amp; (Y[i-j-1]-Y[i-j])==0)
	    putimage(X[i-j], Y[i-j], tail1, XOR_PUT);

      <var>if</var>((X[i-j-1]-X[i-j])&gt;0  &amp;&amp; (Y[i-j-1]-Y[i-j])==0)
	    putimage(X[i-j], Y[i-j], tail2, XOR_PUT);

      <var>if</var>((X[i-j-1]-X[i-j])==0  &amp;&amp; (Y[i-j-1]-Y[i-j])&lt;0)
	    putimage(X[i-j], Y[i-j], tail3, XOR_PUT);

      <var>if</var>((X[i-j-1]-X[i-j])==0  &amp;&amp; (Y[i-j-1]-Y[i-j])&gt;0)
	    putimage(X[i-j], Y[i-j], tail4, XOR_PUT);


      <var>if</var>(f==0)
      {
	putimage(r1,r2,food,XOR_PUT);
	f=1;
      }

      z--;
      <var>if</var>((x&gt;=r1 &amp;&amp; y&gt;=r2 &amp;&amp; x&lt;=r1+10 &amp;&amp; y&lt;=r2+10) || (x&lt;=r1 &amp;&amp; y&lt;=r2 &amp;&amp;
x&gt;=r1-10 &amp;&amp; y&gt;=r2-10) || z==0)
      {
	<var>if</var>(z!=0)
	{
		sound(800);
		delay(20);
		setcolor(0);
		score += 10;
		outtextxy(maxx-50,250,scor);
		itoa(score,scor,10);
		<var>if</var>(score&gt;hscore)
		{
			strcpy(hs,scor);
			setfillstyle(1,1);
			bar(maxx-140,337,maxx-20,348);
			setcolor(14);
			outtextxy(maxx-50,340,hs);
			outtextxy(maxx-140,340,<kbd>"High Score  "</kbd>);
			<var>if</var>(first==0)
			{
			first=1;
			}
		}
		setcolor(4);
		outtextxy(maxx-50,250,scor);
		k++;
	nosound();
	}
	z=100;
	putimage(r1,r2,food,XOR_PUT);
	repr1:
	r1=random(450);
	    <var>if</var>(r1&lt;50)
	       <var>goto</var> repr1;
	repr2:
	r2=random(400);
	    <var>if</var>(r2&lt;50)
		<var>goto</var> repr2;

	f=0;
      }


      i++;
      X[i]=x;
      Y[i]=y;

      b=a;
      <var>if</var>(kbhit())
      {
		rep:
		a=getche();

		<var>if</var>((b==<kbd>'6'</kbd> &amp;&amp; a==<kbd>'4'</kbd>) || (b==<kbd>'4'</kbd> &amp;&amp; a==<kbd>'6'</kbd>))
			a=b;

		<var>if</var>((b==<kbd>'8'</kbd> &amp;&amp; a==<kbd>'5'</kbd>) || (b==<kbd>'5'</kbd> &amp;&amp; a==<kbd>'8'</kbd>))
			a=b;

		<var>if</var>(a!=<kbd>'6'</kbd> &amp;&amp; a!=<kbd>'4'</kbd> &amp;&amp; a!=<kbd>'8'</kbd> &amp;&amp; a!=<kbd>'0'</kbd> &amp;&amp; a!=<kbd>'5'</kbd>)
			a=b;
      }

 <cite>/*     if(x&gt;maxx-170)
	x=0;

      if(y&gt;maxy)
	y=0;*/</cite>

      <var>if</var>(a==<kbd>'8'</kbd>)
	y -= bo;

      <var>if</var>(a==<kbd>'5'</kbd>)
	y += bo;

      <var>if</var>(a==<kbd>'4'</kbd>)
	x -= bo;

      <var>if</var>(a==<kbd>'6'</kbd>)
	x += bo;

      <var>for</var>(j=i+1; j&lt;i-k; j--)
      {
	<var>if</var>((Y[i]&gt;=Y[j] &amp;&amp; Y[i]&lt;=Y[j]+10) || (Y[i]&lt;=Y[j] &amp;&amp; Y[i]&gt;=X[j]-10))
	{
		<var>if</var>((X[i]&gt;=X[j] &amp;&amp; X[i]&lt;=X[j]+10) || (X[i]&lt;=X[j] &amp;&amp; X[i]&gt;=X[j]-10))
		{
			a=<kbd>'0'</kbd>;
		}

		 outtextxy(maxx-140,360,<kbd>"C "</kbd>);


	}

	<var>if</var>((X[i]&gt;=X[j] &amp;&amp; X[i]&lt;=X[j]+10) || (X[i]&lt;=X[j] &amp;&amp; X[i]&gt;=X[j]-10))
	{
		<var>if</var>((Y[i]&gt;=Y[j] &amp;&amp; Y[i]&lt;=Y[j]+10) || (Y[i]&lt;=Y[j] &amp;&amp; Y[i]&gt;=X[j]-10))
		{
			a=<kbd>'0'</kbd>;
		}

			outtextxy(maxx-140,360,<kbd>"C  "</kbd>);
	}

       }

<cite>/*      for(j=i; j&lt;i-k; j--)
      {
	if((y&gt;=Y[j] &amp;&amp; y&lt;=Y[j]+10) || (y&lt;=Y[j] &amp;&amp; y&gt;=Y[j]-10))
	{
		if((x&gt;=X[j] &amp;&amp; x&lt;=X[j]+10) || (x&lt;=X[j] &amp;&amp; x&gt;=X[j]-10))
		{
			a='5';
		}
	}

	if((x&gt;=X[j] &amp;&amp; x&lt;=X[j]+10) || (x&lt;=X[j] &amp;&amp; x&gt;=X[j]-10))
	{
		if((y&gt;=Y[j] &amp;&amp; y&lt;=Y[j]+10) || (y&lt;=Y[j] &amp;&amp; y&gt;=Y[j]-10))
		{
			a='5';
		}
	}
	if(j==0)
		break;
      }      */</cite>


  <cite>/*	if(x&lt;=0)
	x=maxx-170;

	if(y&lt;=0)
	y=maxy;*/</cite>

	<var>if</var>(maze==1)
	{
		<var>if</var>(x&lt;=14 || x&gt;=maxx-184 || y&lt;=14 || y&gt;=maxy-14)
		{
		   a=<kbd>'0'</kbd>;
		}
	}

   }

   <var>if</var>(score&gt;hscore)
   {
	ofstream onfile(<kbd>"c:\tc\bin\rattle.txt"</kbd>);
	onfile&lt;&lt;scor;
	onfile.close();
   }

   setcolor(15);
   outtextxy(maxx-140,390,<kbd>"    Gameover"</kbd>);
   sound(100);
   delay(400);
   nosound();
   getch();
   <cite>/* clean up */</cite>
   free(body);
   closegraph();

}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<p>Attachments:
	[<a href="snake_sample.zip">Snake_Sample.zip</a>]
</p>
</div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','i2zyhbRD');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../contact.doreferrerwww.cplusplus~87.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='4GhDSL3A')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgiai2zyhbrd'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgiai2zyhbrd'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>