<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/ghtbqmol/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>A bit of bitwise - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">A bit of bitwise</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/chris/default.htm" rel="author">chris</a></b></div>
<div id="I_date">Jan 6, 2009</div>
<h1>A bit of bitwise</h1>
<div id="I_score">Score: 3.2/5 (14 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"></div>
<div id="I_content">
This is just a little handy structure defining a variable type & a simple operator overload, to get a bit value from a string.<br>
<br>
First things first we declare a structure, so:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br></code></pre></td>
<td class="source"><pre><code><var>struct</var> bin
{

};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
Next we need to create a private variable to accept a byte, so we use an unsigned char & let's call it "val":<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br></code></pre></td>
<td class="source"><pre><code><var>private</var>:
<var>unsigned</var> <var>char</var> val;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
We need to be able to give the byte a value, so let's create the subroutine to accept the byte & set it to our private variable:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code><var>public</var>:
bin(<var>unsigned</var> <var>char</var> v)
{
val=v;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
And last, but not least an operator overload so that we can decide which bit we want:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br></code></pre></td>
<td class="source"><pre><code><var>bool</var> <var>operator</var>[](<var>unsigned</var> <var>char</var> i)
{
<var>return</var> (val&amp;(1&lt;&lt;i))&gt;&gt;i;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
To quickly explain that above, perhaps complex looking, bitwise statement - it takes a number (i) & then finds if that bit is 1 or 0, then it makes the return value equal to that (1 or 0).<br>
<br>
So our completed structure is:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br></code></pre></td>
<td class="source"><pre><code><var>struct</var> bin
{
<var>private</var>:<var>unsigned</var> <var>char</var> val;
<var>public</var>:bin(<var>unsigned</var> <var>char</var> v){val=v;}
<var>bool</var> <var>operator</var>[](<var>unsigned</var> <var>char</var> i){<var>return</var> (val&amp;(1&lt;&lt;i))&gt;&gt;i;}
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Now - how to use this, in this example we will take an unsigned char variable called "a" holding the ASCII value of "a", which is 97 - then find all the bits of it.<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br></code></pre></td>
<td class="source"><pre><code><var>int</var> main()
{
<var>unsigned</var> <var>char</var> a=97; <cite>// declare our "a"</cite>
<var>for</var>(<var>unsigned</var> <var>int</var> c=7;c!=-1;c--) <cite>// create a loop to access all the bits</cite>
{
printf(<kbd>"%u"</kbd>,bin(a)[c]); <cite>// print out the value of a at bit c.</cite>
}
getchar(); <cite>// wait for user input so we can see previous output</cite>
<var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
From this we should get "01100001" - 97 in binary.<br>
<br>
I hope this is some help to anyone really, & is my first attempt at an article - any feedback or suggestions are welcome.<br>
<br>
Chris.<br>
</div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','GhTbqMoL');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../ovr0/contact.doreferrerwww.cplusplus.com_252farticles_252~9.htm">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='EAf9GNh0')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgiaghtbqmol.htm'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgiaghtbqmol'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>