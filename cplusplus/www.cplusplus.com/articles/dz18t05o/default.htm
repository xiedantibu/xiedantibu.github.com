<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/dz18t05o/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>C++ Pointer Basics (Part 1) - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">C++ Pointer Basics (Part 1)</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/mborja/default.htm" rel="author">mborja</a></b></div>
<div id="I_date">Apr 6, 2009</div>
<h1>C++ Pointer Basics (Part 1)</h1>
<div id="I_score">Score: 3.5/5 (8 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-half.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"></div>
<div id="I_content">
Note: While reading through this short overview of pointers in C++, you will find some<br>
code samples that are given to help illustrate and document the concepts being<br>
explained herein. Parts of code samples are not intended to be conclusive, compile<br>
ready or free of type declaration or initialization errors.<br>
<br>
If you've ever worked with shortcuts (Windows) or symbolic links (UNIX), you should<br>
find pointers a relatively easy concept. There are references and then there are<br>
pointers (which looks at the value being referenced). Though very similar in context,<br>
there is a slight distinction between the proper usage and interpretation of references<br>
and the proper usage and interpretation of pointers.<br>
<br>
To illustrate this point, if you can imagine having a shortcut on your desktop in<br>
Windows. This shortcut can be considered a pointer as it "points" directly to the<br>
target file itself. A reference would then be the actual location (or container)<br>
of our target file, similar to a mailing address (i.e. where can we find our target?)<br>
<br>
When working with pointers, there are two operators with very specific functions<br>
to keep into consideration:<br>
<br>
REFERENCE: The first is the ampersand (&) which precedes an existing<br>
variable or function and returns its actual address (reference) in memory.<br>
<br>
For example:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code><var>char</var> * varAuthor = <kbd>"Matt Borja"</kbd>;

<cite>// a pointer (*) to another pointer (*), or simply **</cite>
<var>char</var> ** address_varAuthor = &amp;varAuthor;
printf(<kbd>"Memory address of varAuthor: %x\n"</kbd>, address_varAuthor);</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
POINTER: The other operator is an asterisk (*) preceding our address variable, returning the<br>
value pointed to by a reference.<br>
<br>
For example:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>&nbsp;</code></pre></td>
<td class="source"><pre><code>printf(<kbd>"Value found at this memory address: %s\n"</kbd>, *address_varAuthor);</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Keep in mind that it is important to observe data types as they must be treated<br>
the same as standard variables in C++.<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<var>using</var> <var>namespace</var> std;

<var>int</var> main()
{
	<cite>// declare char type varAuthor</cite>
	<var>char</var> * varAuthor = <kbd>"Matt Borja"</kbd>;
	
	<cite>// reference variable addr_varAuthor of our original varAuthor</cite>
	<var>char</var> ** addr_varAuthor = &amp;varAuthor;
	
	printf(<kbd>"Value of our original varAuthor is %s.\n"</kbd>, varAuthor);
	printf(<kbd>"Address (reference) of our original varAuthor is %x.\n"</kbd>, addr_varAuthor);
	printf(<kbd>"Value (pointer) of our address (%x) is %s.\n"</kbd>, addr_varAuthor, *addr_varAuthor);
	printf(<kbd>"Get it?\n"</kbd>);
	<var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
</div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','Dz18T05o');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../ovr0/contact.doreferrerwww.cplusplus.com_252farticles_252~4.htm">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='2vUMDjzh')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgiadz18t05o.htm'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgiadz18t05o'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>