<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/j3wturfi/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Why system() is evil - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">Why system() is evil</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/duoas/default.htm" rel="author">Duoas</a></b></div>
<div id="I_date">May 19, 2009 (last update: May 19, 2009)</div>
<h1>Why system() is evil</h1>
<div id="I_score">Score: 4.5/5 (226 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-half.png" width="16" height="16" alt="*"></div>
<div id="I_content">
So, you are here because everyone keeps telling you that things like <span class="auto"><code class="source">system(<kbd>"PAUSE"</kbd>)</code></span> and <span class="auto"><code class="source">system(<kbd>"CLS"</kbd>)</code></span> are bad. But no one really says <i>why</i>.<br>
<br>
Here's why.<br>
<br>
<br>
<div class="center"><blockquote><b> ----------------- It Is Resource Heavy ---------------- </b></blockquote></div>
First, you have to think about what the <b>system</b>() function really does: it executes not just one, but maybe <i>two</i> separate processes and returns an exit status to your program (hopefully the exit status from the program you are attempting to run).<br>
<tt>    </tt><a href="../../../linux.die.net/man/3/system">http://linux.die.net/man/3/system</a>
Notice all the things that can go wrong... and very little recourse for error recognition and handling.<br>
<br>
But wait, there's more! Speaking of system("PAUSE"), here is <b>WaltP</b>'s simplified, but complete, breakdown of what exactly system() does to accomplish its goal:<br>
<tt>    </tt><a href="../../../www.gidnetwork.com/b-61.html">http://www.gidnetwork.com/b-61.html</a>
<br>
<br>
<div class="center"><blockquote><b> ----------------- It Defeats Security ----------------- </b></blockquote></div>
So, if all it is is resource heavy, then what makes it so evil?<br>
<br>
Because you have no guarantee that the program you are executing<br>
<tt>   1 </tt> is a valid command<br>
<tt>   2 </tt> does the same thing on all systems<br>
<tt>   3 </tt> hasn't been compromised with malicious code, or<br>
<tt>   4 </tt> is the program you think it is<br>
The last two need a little explanation.<br>
<br>
Here's a little console program to try out:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;stdio.h&gt;</dfn>
<dfn>#include &lt;stdlib.h&gt;</dfn>

<dfn>#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__TOS_WIN__) || defined(__WINDOWS__)</dfn>
<dfn>#define EDITOR "notepad"</dfn>
<dfn>#else</dfn>
<dfn>#define EDITOR "emacs"</dfn>
<dfn>#endif</dfn>

<var>int</var> main()
  {
  printf( <kbd>"Now I'm going to start your text editor!\n"</kbd> );
  system( EDITOR );
  printf( <kbd>"Good-bye!\n"</kbd> );
  <var>return</var> 0;
  }</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
A few notes for Unix/Linux users:<br>
- I don't have emacs installed (I can't stand the thing). I use "kate" and "vim" instead. If you don't have Emacs installed, edit the above source to the name of your favorite text editor.<br>
- To escape emacs if you don't know how, press <tt>Ctrl-X</tt>, then <tt>Ctrl-C</tt>.<br>
- Before running your program, you'll have to make sure that the PATH includes the current directory. For bash users, type:<br>
<tt>
    ECHO=.:"$PATH"<br>
</tt>
at the command prompt before running the program. Don't worry, this is only temporary. Once you are done with these exercises, type a period and press ENTER to restart bash to the proper defaults.<br>
<br>
So then, go ahead and compile and run it to see it work.<br>
<br>
<br>
Now that you've seen it work properly, create yourself a new little program in the same directory:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;stdio.h&gt;</dfn>

<var>int</var> main()
  {
  printf( <kbd>"Bwah, hah, hah, hah, hah!\n"</kbd> );
  <var>return</var> 0;
  }</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
Compile it and name the executable "<tt>notepad.exe</tt>" if you are on Windows, or "<tt>emacs</tt>" (or whatever your used above) if you are on *nix. (Be careful not to clobber your first program's executable.)<br>
<br>
Now run the first program again. What happened? (Unix/Linux users, now would be a good time to restart your shell. Remember, this example was contrived -- there are plenty of other ways to get malicious software into the execution path.)<br>
<br>
<br>
The <b><i>danger</i></b> is that when you directly execute a program, it gets the same <i>privileges</i> as your program -- meaning that if, for example, you are running as system administrator then the malicious program you just inadvertently executed <i>is also running as system administrator</i>. If that doesn't scare you silly, check your pulse.<br>
<br>
It doesn't matter if you aren't sysadmin either. Anything <i>you</i> can do <i>it</i> can do.<br>
<br>
<br>
<div class="center"><blockquote><b> ------------- Anti-Virus Programs Hate It ------------- </b></blockquote></div>
The last thing is simply a matter of perception. If your users are running any sort of anti-virus, like ZoneAlarm, Norton, McAfee, etc. then they will get a very unpleasant message about your program trying to do something considered dangerous. Remember, the AV software doesn't say <i>what</i> you are trying to do, only that it is trying to do something uncouth. Users treat such programs with suspicion.<br>
<br>
<br>
Well, that's about it. Don't use <b>system</b>() unless you have to.<br>
<br>
Hope this helps.<br>
As an addendum, if you <i>do</i> need to use <b>system</b>(), it is generally a good idea to check that you have a shell available:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br></code></pre></td>
<td class="source"><pre><code><var>if</var> (system( NULL )) then_I_can_safely_use_system();
<var>else</var> fooey();</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Also, straight from the manual page:<br>
<blockquote>Do not use <b>system</b>() from a program with set-user-ID or set-group-ID privileges, because strange values for some environment variables might be used to subvert system integrity. Use the <i><u><b>exec</b></u>(3)</i> family of functions instead, but not <i><u><b>execlp</b></u>(3)</i> or <i><u><b>execvp</b></u>(3)</i>. <b>system</b>() will not, in fact, work properly from programs with set-user-ID or set-group-ID privileges on systems on which /bin/sh is bash version 2, since bash 2 drops privileges on startup. (Debian uses a modified bash which does not do this when invoked as <b>sh</b>.) </blockquote>
<br>
Enjoy!</div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','j3wTURfi');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../contact.doreferrerwww.cplusplus.com_252farticles_25~78.htm">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='i8vCpfjN')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgiaj3wturfi.htm'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgiaj3wturfi'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>