<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/j13haqks/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>My way to make a game map in the console - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">My way to make a game map in the console</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/blitz_coder/default.htm" rel="author">Blitz Coder</a></b></div>
<div id="I_date">Mar 16, 2010</div>
<h1>My way to make a game map in the console.</h1>
<div id="I_score">Score: 3.0/5 (54 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"></div>
<div id="I_content">
simple enough...<br>
<br>
This post most likely contains either an error or something somebody disagrees with. This is just my way to do this,If you have other (or better) ways to do this, please share as well.<br>
<br>
I have decided to put up my way (one of) of how to make a game map/world for a text rpg in the console. <br>
<br>
After reading posts on various forums I have seen one common question is "How do I make the game map". One way to do this in the console is to use a double nested for loop to draw a x*x grid (see the dungeon crawler thread) and then place objects represented by text onto said grid and then have it do when you make a move it redraws the grid/map with the updated values. Blarg.<br>
<br>
This is a much simpler and to the point way.<br>
<br>
My example will use a coordinate systems to represent a game world and place events/objects/battles/etc at various X/Y coordinate values. <br>
<br>
First with classes:<br>
<br>
Lets say you have your Character class. In your main() you have made a new Character called Hero. Your Character class may look like:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br></code></pre></td>
<td class="source"><pre><code><var>class</var> Character{

<var>public</var>:

    <var>int</var> getXCoord();
    <var>void</var> setXCoord(<var>int</var> xCoord);

    <var>int</var> getYCoord();
    <var>void</var> setYCoord(<var>int</var> yCoord);

<var>private</var>:
    <var>int</var> itsXCoord;
    <var>int</var> itsYCoord;

};
</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
then in your main() you would put <br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include "Character.h"</dfn>
<var>using</var> <var>namespace</var> std;

<var>int</var> main()
{
Character Hero;
Hero.setXCoord(0);
Hero.setYCoord(0);

<var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Ok, so now we have a Hero, and its X/Y values are 0,0. The point of this is so you can now create a move function or loop that will then change either the x or y Coord value +/-. With this system it would be something like:<br>
<br>
You find yourself in a forest. You can move North/South/West/East. The player then picks one of the choices given and the program changes the values of X/Y. Say the player decides to move north. Your program will add 1 to the X value. Now you are at 1.0. How is this useful? It is useful because it allows you to make a virtually infinite sized world and set conditional events at certain X/Y locations. For example: If a player moves to 3/-2 on your world, then perhaps a battle happens:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br></code></pre></td>
<td class="source"><pre><code><var>if</var> (Hero.getXCoord() == 3 &amp;&amp; Hero.getYCoord() == -2){
orcAmbush(); <cite>// don;t bother trying to compile this, orcAmbush has not been declared, used as an example</cite>
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Now lets say we want to move around. You have told your player they are in *insert background story* and you cout the current location (0,0). You then want the player to be able to move around your world. Two ways to do this are by using either a playerMove(); function or a loop/nested if series. I will used the latter since using a playerMover function outside of the main scope requires pointers and ...no.<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include "Character.h"</dfn>
<var>using</var> <var>namespace</var> std;

<var>int</var> main()
{
<var>int</var> move;
Character Hero;
Hero.setXCoord(0);
Hero.setYCoord(0);
cout &lt;&lt; <kbd>"You are at :"</kbd> &lt;&lt; Hero.getXCoord() &lt;&lt; <kbd>", "</kbd> &lt;&lt; Hero.getYCoord() &lt;&lt; endl;
cout &lt;&lt; <kbd>"You find yourself in a clearing. Make a move\n"</kbd>;
cout &lt;&lt; <kbd>"1)North 2)South 3)East 4)West: "</kbd>;
cin &gt;&gt; move;
<var>if</var> (move == 1){
    Hero.setXCoord(Hero.getXCoord()+1);
}
<var>if</var> (move == 2){
    Hero.setXCoord(Hero.getXCoord()-1);
}
<var>if</var> (move == 3){
    Hero.setYCoord(Hero.getYCoord()-1);
}
<var>if</var> (move == 4){
    Hero.setYCoord(Hero.getYCoord()+1);
}

cout &lt;&lt; <kbd>"Currently you are at: "</kbd> &lt;&lt; Hero.getXCoord() &lt;&lt; <kbd>", "</kbd> &lt;&lt; Hero.getYCoord();

<var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Of course this only allows one move, but you can use this type of setup in a loop or a function as well.<br>
<br>
Now, to do this all without classes, which is much simpler but much more restrictive on what your player can do (since you lose the class):<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<var>using</var> <var>namespace</var> std;

<var>int</var> main()
{
<var>int</var> move;
<var>int</var> xCoord = 0;
<var>int</var> yCoord = 0;

cout &lt;&lt; <kbd>"You are at :"</kbd> xCoord &lt;&lt; yCoord &lt;, endl;
cout &lt;&lt; <kbd>"You find yourself in a clearing. Make a move\n"</kbd>;
cout &lt;&lt; <kbd>"1)North 2)South 3)East 4)West: "</kbd>;
cin &gt;&gt; move;
<var>if</var> (move == 1){
    xCoord++;
    }
    
<cite>/*repeat for rest of choices*/</cite>

<var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
This method is much shorter but is restrictive since you can't really do much if you want your x/y to be assigned to a player class. I wanted to show both methods though.<br>
<br>
To be honest in my unprofessional opinion the best way to do this type of map/grid/world is to use the class and have a movePlayer() function. I would try to write it but its 4:40am and I just can't focus...<br>
<br>
ps: the .cpp is: <div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br></code></pre></td>
<td class="source"><pre><code><dfn>#include "Character.h"</dfn>

    <var>int</var> Character::getXCoord(){
    <var>return</var> itsXCoord;
    }

    <var>int</var> Character::setXCoord(<var>int</var> xCoord){
    itsXCoord = xCoord;
    }

    <var>int</var> Character::getYCoord(){
        <var>return</var> itsYCoord;
    }

    <var>int</var> Character::setYCoord(<var>int</var> yCoord){
        itsYCoord = yCoord;
    }
</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
Well, this was meant more for an outdoor map. It is easier this way to make very large maps I feel, but for smaller room with walls a char grid may work better.<br>
<br>
As for the second point, I guess what I would do is if I had a key at lets say 0,4 then I would have a if statement and a bool following it. If Hero's location is 0,4 hasGoldKey = true removeGoldKey = true (or alternatively removeGoldKey();). I suppose with many objects it could get a little jumbled though...<br>
<br>
As noted before, this is just one of I am sure many many ways to do this. <br>
<br>
P.s. for walls and the like you could use a “If hero is at 0,5 tell the hero “you cannot go any further” and set the hero’s position to where it was before.<br>
</div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','j13hAqkS');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../contact.doreferrerwww.cplusplus.com_252farticles_25~79.htm">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='2wkjLyTq')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgiaj13haqks.htm'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgiaj13haqks'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>