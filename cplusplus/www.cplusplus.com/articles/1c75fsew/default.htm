<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/1c75fsew/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Explicit Template Instantiation - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">Explicit Template Instantiation</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/closed_account_s6k9gnh0/default.htm" rel="author">closed account S6k9GNh0</a></b></div>
<div id="I_date">Jun 25, 2011 (last update: Jun 26, 2011)</div>
<h1>Explicit Template Instantiation</h1>
<div id="I_score">Score: 3.2/5 (98 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"></div>
<div id="I_content">
Check this out:<br>
<br>
I was wanting a templated class in my library so I can easily change the amount of strings that are supported (following a class model). However, templates are compiled on demand only. Take this example (which we will say compiles into libExample.a):<br>
<br>
Header (Example.h):<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>typename</var> T&gt;
<var>class</var> Example
<var>public</var>:
    Example( T test );
    <var>void</var> setTest( T test );</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Implementation (Example.cpp):<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>typename</var> T&gt;
<var>class</var> Example
{
<var>public</var>:
    Example( T test )
    {
        _data = test;
    }

    <var>void</var> setTest(T test)
    {
        _data = T;
    }
<var>private</var>:
    T _data;
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
When you compile this into a library and try to link to instantiate an "Example" class with a template, you will get an error stating that a symbol with the template signature doesn't exist. The above example indeed does compile but it does not contain the given template instance.<br>
<br>
However, we can add specialized template support through explicit template instantiation which will add the symbols needed to link (properly) against the library for use. Take the following revision of the Example.cpp:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>typename</var> T&gt;
<var>class</var> Example
{
<var>public</var>:
    Example( T test )
    {
        _data = test;
    }

    <var>void</var> setTest(T test)
    {
        _data = T;
    }
<var>private</var>:
    T _data;
};

<var>class</var> <var>template</var> Example&lt;<var>int</var>&gt;;
<var>class</var> <var>template</var> Example&lt;<var>float</var>&gt;;
<var>class</var> <var>template</var> Example&lt;<var>double</var>&gt;;</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Now, the header still works as long as you use only the allowed types (int, float, double). The following should work as long as you link against libExample.a:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br></code></pre></td>
<td class="source"><pre><code><dfn>#include "Example.h"</dfn>
<dfn>#include &lt;string&gt;</dfn>

<var>int</var> main()
{
    Example&lt;<var>int</var>&gt; example(3);
    Example&lt;<var>float</var>&gt; exampletwo(4.f);
    example.setTest(6);
    <cite>//With the given header, the follwing will compile but generate linker errors!</cite>
    Example&lt;std::string&gt; example(<kbd>"lol"</kbd>);
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Notice the note about linker errors. The proper way to fix that is template specialization so it will generate a compiler error. I was just too lazy to make an example &gt;.&gt;. Also, the only reason to use template specialization inside of the implementation is if the behavior is different for different types otherwise doing so is rather pointless. My inbox is open for feedback! </div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','1C75fSEw');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../contact.doreferrerwww.cplusplus~90.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='S6k9GNh0')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgia1c75fsew'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgia1c75fsew'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>