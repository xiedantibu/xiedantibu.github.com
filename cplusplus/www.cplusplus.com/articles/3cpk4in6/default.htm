<!DOCTYPE html><!-- saved from url=(0054)http://www.cplusplus.com/articles/3cpk4in6/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>C++ console game! - C++ Articles</title>
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Articles</a></li>
<li class="here">C++ console game!</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div id="I_content">
<div class="C_art">
<div id="I_author">Published by <b><a href="../../user/foxefde/default.htm" rel="author">Foxefde</a></b></div>
<div id="I_date">Oct 30, 2013</div>
<h1>C++ console game!</h1>
<div id="I_score">Score: 3.5/5 (197 votes)</div>
<div id="I_stars"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star.png" width="16" height="16" alt="*"><img src="../../ico/16star-half.png" width="16" height="16" alt="*"><img src="../../ico/16star-empty.png" width="16" height="16" alt="*"></div>
<div id="I_content">
Hello guys,<br>
<br>
This is very simple and one of my old projects I've created.It's probably the best one,as it really looks like a game,mind you the code is not very complicated.It has 11 levels you can try, every level the speed and the amount of "birds" is increasing.The controls are arrow keys for moving and 1 / 2 for shooting.<br>
<br>
Have fun ! Foxefde<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142<br>143<br>144<br>145<br>146<br>147<br>148<br>149<br>150<br>151<br>152<br>153<br>154<br>155<br>156<br>157<br>158<br>159<br>160<br>161<br>162<br>163<br>164<br>165<br>166<br>167<br>168<br>169<br>170<br>171<br>172<br>173<br>174<br>175<br>176<br>177<br>178<br>179<br>180<br>181<br>182<br>183<br>184<br>185<br>186<br>187<br>188<br>189<br>190<br>191<br>192<br>193<br>194<br>195<br>196<br>197<br>198<br>199<br>200<br>201<br>202<br>203<br>204<br>205<br>206<br>207<br>208<br>209<br>210<br>211<br>212<br>213<br>214<br>215<br>216<br>217<br>218<br>219<br>220<br>221<br>222<br>223<br>224<br>225<br>226<br>227<br>228<br>229<br>230<br>231<br>232<br>233<br>234<br>235<br>236<br>237<br>238<br>239<br>240<br>241<br>242<br>243<br>244<br>245<br>246<br>247<br>248<br>249<br>250<br>251<br>252<br>253<br>254<br>255<br>256<br>257<br>258<br>259<br>260<br>261<br>262<br>263<br>264<br>265<br>266<br>267<br>268<br>269<br>270<br>271<br>272<br>273<br>274<br>275<br>276<br>277<br>278<br>279<br>280<br>281<br>282<br>283<br>284<br>285<br>286<br>287<br>288<br>289<br>290<br>291<br>292<br>293<br>294<br>295<br>296<br>297<br>298<br>299<br>300<br>301<br>302<br>303<br>304<br>305<br>306<br>307<br>308<br>309<br>310<br>311<br>312<br>313<br>314<br>315<br>316<br>317<br>318<br>319<br>320<br>321<br>322<br>323<br>324<br>325<br>326<br>327<br>328<br>329<br>330<br>331<br>332<br>333<br>334<br>335<br>336<br>337<br>338<br>339<br>340<br>341<br>342<br>343<br>344<br>345<br>346<br>347<br>348<br>349<br>350<br>351<br>352<br>353<br>354<br>355<br>356<br>357<br>358<br>359<br>360<br>361<br>362<br>363<br>364<br>365<br>366<br>367<br>368<br>369<br>370<br>371<br>372<br>373<br>374<br>375<br>376<br>377<br>378<br>379<br>380<br>381<br>382<br>383<br>384<br>385<br>386<br>387<br>388<br>389<br>390<br>391<br>392<br>393<br>394<br>395<br>396<br>397<br>398<br>399<br>400<br>401<br>402<br>403<br>404<br>405<br>406<br>407<br>408<br>409<br>410<br>411<br>412<br>413<br>414<br>415<br>416<br>417<br>418<br>419<br>420<br>421<br>422<br>423<br>424<br>425<br>426<br>427<br>428<br>429<br>430<br>431<br>432<br>433<br>434<br>435<br>436<br>437<br>438<br>439<br>440<br>441<br>442<br>443<br>444<br>445<br>446<br>447<br>448<br>449<br>450<br>451<br>452<br>453<br>454<br>455<br>456<br>457<br>458<br>459<br>460<br>461<br>462<br>463<br>464<br>465<br>466<br>467<br>468<br>469<br>470<br>471<br>472<br>473<br>474<br>475<br>476<br>477<br>478<br>479<br>480<br>481<br>482<br>483<br>484<br>485<br>486<br>487<br>488<br>489<br>490<br>491<br>492<br>493<br>494<br>495<br>496<br>497<br>498<br>499<br>500<br>501<br>502<br>503<br>504<br>505<br>506<br>507<br>508<br>509<br>510<br>511<br>512<br>513<br>514<br>515<br>516<br>517<br>518<br>519<br>520<br>521<br>522<br>523<br>524<br>525<br>526<br>527<br>528<br>529<br>530<br>531<br>532<br>533<br>534<br>535<br>536<br>537<br>538<br>539<br>540<br>541<br>542<br>543<br>544<br>545<br>546<br>547<br>548<br>549<br>550<br>551<br>552<br>553<br>554<br>555<br>556<br>557<br>558<br>559<br>560<br>561<br>562<br>563<br>564<br>565<br>566<br>567<br>568<br>569<br>570<br>571<br>572<br>573<br>574<br>575<br>576<br>577<br>578<br>579<br>580<br>581<br>582<br>583<br>584<br>585<br>586<br>587<br>588<br>589<br>590<br>591<br>592<br>593<br>594<br>595<br>596<br>597<br>598<br>599<br>600<br>601<br>602<br>603<br>604<br>605<br>606<br>607<br>608<br>609<br>610<br>611<br>612<br>613<br>614<br>615<br>616<br>617<br>618<br>619<br>620<br>621<br>622<br>623<br>624<br>625<br>626<br>627<br>628<br>629<br>630<br>631<br>632<br>633<br>634<br>635<br>636<br>637<br>638<br>639<br>640<br>641<br>642<br>643<br>644<br>645<br>646<br>647<br>648<br>649<br>650<br>651<br>652<br>653<br>654<br>655<br>656<br>657<br>658<br>659<br>660<br>661<br>662<br>663<br>664<br>665<br>666<br>667<br>668<br>669<br>670<br>671<br>672<br>673<br>674<br>675<br>676<br>677<br>678<br>679<br>680<br>681<br>682<br>683<br>684<br>685<br>686<br>687<br>688<br>689<br>690<br>691<br>692<br>693<br>694<br>695<br>696<br>697<br>698<br>699<br>700<br>701<br>702<br>703<br>704<br>705<br>706<br>707<br>708<br>709<br>710<br>711<br>712<br>713<br>714<br>715<br>716<br>717<br>718<br>719<br>720<br>721<br>722<br>723<br>724<br>725<br>726<br>727<br>728<br>729<br>730<br>731<br>732<br>733<br>734<br>735<br>736<br>737<br>738<br>739<br>740<br>741<br>742<br>743<br>744<br>745<br>746<br>747<br>748<br>749<br>750<br>751<br>752<br>753<br>754<br>755<br>756<br>757<br>758<br>759<br>760<br>761<br>762<br>763<br>764<br>765<br>766<br>767<br>768<br>769<br>770<br>771<br>772<br>773<br>774<br>775<br>776<br>777<br>778<br>779<br>780<br>781<br>782<br>783<br>784<br>785<br>786<br>787<br>788<br>789<br>790<br>791<br>792<br>793<br>794<br>795<br>796<br>797<br>798<br>799<br>800<br>801<br>802<br>803<br>804<br>805<br>806<br>807<br>808<br>809<br>810<br>811<br>812<br>813<br>814<br>815<br>816<br>817<br>818<br>819<br>820<br>821<br>822<br>823<br>824<br>825<br>826<br>827<br>828<br>829<br>830<br>831<br>832<br>833<br>834<br>835<br>836<br>837<br>838<br>839<br>840<br>841<br>842<br>843<br>844<br>845<br>846<br>847<br>848<br></code></pre></td>
<td class="source"><pre><code><dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;conio.h&gt;</dfn>
<dfn>#include &lt;windows.h&gt;</dfn>
<dfn>#include &lt;ctime&gt;</dfn>
<dfn>#include &lt;vector&gt;</dfn>

<var>class</var> game
{
<var>private</var>:
    std::vector &lt;<var>int</var>&gt; fake;
    <var>char</var> map[1800];
    <var>int</var> x;<cite>//COORDINATES</cite>
    <var>int</var> c;
    <var>int</var> speed;
    <var>int</var> points ;
    <var>int</var> CurrentLevel;
    <var>bool</var> check;
<var>public</var>:
    game()
    {
        x = 1940;
        speed = 215;
        check = 0;
        points = 0;
    }
    <var>void</var> PrepareGraphics();
    <var>void</var> graphics();
    <var>void</var> LevelMenu();
    <var>void</var> Levels();
    <var>void</var> LOGIC();
    <var>void</var> gameover();
    <var>friend</var> <var>void</var> cls();
    <var>friend</var> <var>void</var> sp();
    <var>friend</var> <var>void</var> s();
};
<var>void</var> cls()
{
    HANDLE hOut;
    COORD Position;

    hOut = GetStdHandle(STD_OUTPUT_HANDLE);

    Position.X = 0;
    Position.Y = 0;
    SetConsoleCursorPosition(hOut, Position);
}
<var>void</var> game::Levels() <cite>//Just minimize this function</cite>
<cite>////////////////////////////////////////////////////////////////////////////*//</cite>
{
    speed-=20;
    <var>for</var>(<var>int</var> a = 0;a &lt; 1800;a++)
    {
        map[a] = <kbd>' '</kbd>;           <cite>//CLEAN IT FIRST</cite>
    }
    <var>switch</var>(CurrentLevel)
    {
    <var>case</var> 1:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 7] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 47] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 87] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 127] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 167] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 207] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 2:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 7] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 47] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 87] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 127] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 167] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 26;b++)
    {
        map[b + 207] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 3:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 30;b++)
    {
        map[b + 5] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 30;b++)
    {
        map[b + 45] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 30;b++)
    {
        map[b + 85] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 30;b++)
    {
        map[b + 125] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 30;b++)
    {
        map[b + 165] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 30;b++)
    {
        map[b + 205] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 4:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 3] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 43] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 83] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 123] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 163] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 203] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 5:<cite>/////////////////////////////////////////////////////////////////*//</cite>

    <var>for</var>(<var>int</var> b = 0;b &lt; 38;b++)
    {
        map[b + 1] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 38;b++)
    {
        map[b + 41] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 38;b++)
    {
        map[b + 81] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 38;b++)
    {
        map[b + 121] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 38;b++)
    {
        map[b + 161] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 38;b++)
    {
        map[b + 201] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 6:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 3] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 43] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 83] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 123] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 163] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 34;b++)
    {
        map[b + 203] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 400] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 7:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 40] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 80] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 120] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 160] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 200] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 8:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 40] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 80] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 120] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 160] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 200] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 400] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 440] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 480] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 9:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 40] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 80] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 120] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 160] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 200] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 400] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[400 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[440 + 2 * b] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 10:<cite>/////////////////////////////////////////////////////////////////*//</cite>
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 40] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 80] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 120] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 160] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 200] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 400] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[400 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[440 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[480 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[520 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[560 + 2 * b] = <var>char</var>(253);
    }
    <var>break</var>;
    <var>case</var> 11:
        <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 40] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 80] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 120] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 160] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 200] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 240] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 280] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 320] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 360] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 40;b++)
    {
        map[b + 400] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[400 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[440 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[480 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[520 + 2 * b] = <var>char</var>(253);
    }
    <var>for</var>(<var>int</var> b = 0;b &lt; 20 ;b++)
    {
        map[560 + 2 * b] = <var>char</var>(253);
    }
    <var>break</var>;

    <var>default</var>:
        system(<kbd>"cls"</kbd>);
        std::cout &lt;&lt; <kbd>"CONGRULATIONS "</kbd>;
        Sleep(5000);
        }
PrepareGraphics();
}
<cite>//////////////////////////////////////////////////////////////////////////</cite>
<var>void</var> sp(<var>int</var> spalva)
{
    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), spalva);
}
<var>void</var> game::LevelMenu()
{
    std::cout &lt;&lt;<kbd>"CONTROLS: &gt; ^ &lt; for moving and  1 / 2  for shooting..."</kbd>;
    Sleep(4500);
    system(<kbd>"cls"</kbd>);
    system(<kbd>"color a5"</kbd>);
    sp(481);
    std::cout &lt;&lt; <kbd>"CHOOSE YOUR LEVEL:"</kbd>;
    std::cout &lt;&lt;<kbd>"1."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"2."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"3."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"4."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"5."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"6."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"7."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"8."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"9."</kbd> &lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"10."</kbd>&lt;&lt; std::endl;
    std::cout &lt;&lt;<kbd>"11."</kbd>&lt;&lt; std::endl;
    <var>int</var> y;
    <var>while</var>(y &gt; 12 || y &lt; 1)
    {
        std::cin &gt;&gt; y;
    }
    <var>if</var>(y == 1)
    {
        CurrentLevel = 1;
        speed = 215;
    }
    <var>else</var> <var>if</var>(y == 2)
    {
        CurrentLevel = 2;
        speed = 195;
    }
    <var>else</var> <var>if</var>(y == 3)
    {
        CurrentLevel = 3;
        speed = 175;
    }
    <var>else</var> <var>if</var>(y == 4)
    {
        CurrentLevel = 4;
        speed = 155;
    }
    <var>else</var> <var>if</var>(y == 5)
    {
        CurrentLevel = 5;
        speed = 135;
    }
    <var>else</var> <var>if</var>(y == 6)
    {
        CurrentLevel = 6;
        speed = 115;
    }
    <var>else</var> <var>if</var>(y == 7)
    {
        CurrentLevel = 7;
        speed = 95;
    }
    <var>else</var> <var>if</var>(y == 8)
    {
        CurrentLevel = 8;
        speed = 75;
    }
    <var>else</var> <var>if</var>(y == 9)
    {
        CurrentLevel = 9;
        speed = 55;
    }
    <var>else</var> <var>if</var>(y == 10)
    {
        CurrentLevel = 10;
        speed =35 ;
    }
    <var>else</var> <var>if</var>(y == 11)
    {
        CurrentLevel = 11;
        speed = 28;
    }
    std::cout &lt;&lt; <kbd>"GET READY."</kbd>;
    Sleep(2500);
    Levels();
}

<var>void</var> game::PrepareGraphics()
{
    x = 1140;
    map[x] = <kbd>'H'</kbd>;
    graphics();
}

<var>void</var> game::graphics()
{
    c = 0;
    <var>for</var>(<var>int</var> CheckingForWin = 0;CheckingForWin &lt; 40;CheckingForWin++)
    {
        <var>if</var>(map[CheckingForWin] == <kbd>' '</kbd>)
        {
            c++;
        }
    }
    <var>if</var>(c == 40)
    {
        CurrentLevel++;
        std::cout &lt;&lt; <kbd>"Congrulations,you have passed this level\n,let's try another one!"</kbd>;
        Sleep(4000);
        Levels();
    }
    std::cout &lt;&lt; std::endl;
    <var>for</var>(<var>int</var> k = 0;k &lt; 40;k++ )
    {
        std::cout &lt;&lt; <var>char</var>(219);
    }
    std::cout &lt;&lt; std::endl;

    <var>for</var>(<var>int</var> u = 0;u &lt; 1800;u++)
    {
        <var>if</var>(u!= 0 &amp;&amp; u % 40 == 0)
        {
            std::cout &lt;&lt; std::endl;
        }
        <cite>/////////////////////////////////////</cite>
        <cite>/////////////////////////////////////</cite>
        <cite>/////////////////////////////////////</cite>
        <var>if</var>(map[u + 40] == <var>char</var>(173))
        {
            map[u + 40] = <kbd>' '</kbd>;
            <var>if</var>(map[u]!=<var>char</var>(253))
            {
                map[u] = <var>char</var>(173);
            }
            <var>else</var>
            {
                map[u] = <kbd>' '</kbd>;
                points++;
            }
        }
        <var>else</var> <var>if</var>(u &lt;= 39 &amp;&amp; map[u] == <var>char</var>(173))
        {
            map[u] = <kbd>' '</kbd>;
        }
        <var>if</var>(map[u] == <var>char</var>(253) &amp;&amp; map[u + 40 ] != <var>char</var>(253))
        {
            c = rand() % speed + 1;
            <var>if</var>(c == 5)
            {
                map[u + 40] = <kbd>'o'</kbd>;
            }
        };
        <var>if</var>(map[u] == <kbd>'o'</kbd>)
        {
            <var>for</var>(<var>unsigned</var> <var>int</var> g = 0;g != fake.size();g++)
            {
                    <var>if</var>(fake[g] == u)
                    {
                        g = fake.size() - 1;
                        check = 1;
                    }
            }
            <var>if</var>(!check)
            {
                map[u] = <kbd>' '</kbd>;
                <var>if</var>(x == u + 40)
                {
                    gameover();
                }
                map[u + 40] = <kbd>'o'</kbd>;
                fake.push_back(u + 40);
            }
        };
        check = 0;
        std::cout &lt;&lt; map[u];
    }
    <var>for</var>(<var>int</var> h = 1760;h &lt; 1800;h++)
    {
        <var>if</var>(map[h] == <kbd>'o'</kbd>)
        {
            map[h] = <kbd>' '</kbd>;
        }
    }
    fake.clear();
    std::cout &lt;&lt; std::endl;
    <var>for</var>(<var>int</var> k = 0;k &lt; 40;k++ )
    {
        std::cout &lt;&lt; <var>char</var>(219);
    }
    std::cout &lt;&lt; std::endl;
    std::cout &lt;&lt; <kbd>"\n\n\n\n            Points:"</kbd> &lt;&lt; points;
    LOGIC();
}

<var>void</var> game::gameover()
{
    system(<kbd>"cls"</kbd>);
    std::cout &lt;&lt;<kbd>"GG,YOU'VE JUST LOSE!"</kbd>;
    std::cout &lt;&lt;<kbd>"You scored "</kbd> &lt;&lt; points &lt;&lt; <kbd>" points\n"</kbd>;
    Sleep(2000);
    std::cout &lt;&lt;<kbd>"Restarting..."</kbd>;
    Sleep(2000);
    system(<kbd>"cls"</kbd>);
    system(<kbd>"color a5"</kbd>);
    sp(481);
    LevelMenu();
}
<var>void</var> game::LOGIC()
{
             <var>if</var> (GetAsyncKeyState(VK_LEFT))
        {
            <var>if</var>(x % 40 != 0)
            {
                <var>if</var>(map[x - 1] == <kbd>'o'</kbd>)
                {
                    gameover();
                };
                x--;
                map[x + 1] = <kbd>' '</kbd>;
                map[x] = <kbd>'H'</kbd>;
            }
        }
        <var>else</var> <var>if</var> (GetAsyncKeyState(VK_RIGHT))
        {
            <var>if</var>((x + 1) % 40 != 0)
            {
                <var>if</var>(map[x + 1] == <kbd>'o'</kbd>)
                {
                    gameover();
                };
                x++;
                map[x - 1] = <kbd>' '</kbd>;
                map[x] = <kbd>'H'</kbd>;
            }
        }
        <var>else</var> <var>if</var> (GetAsyncKeyState(VK_UP))
        {
            <var>if</var>(x &gt; 480)
            {
                x-=40;
                map[x+40] = <kbd>' '</kbd>;
                map[x] = <kbd>'H'</kbd>;
            }
        }
        <var>else</var> <var>if</var> (GetAsyncKeyState(VK_DOWN))
        {
            <var>if</var>(x &lt; 1760 )
            {
                x+=40;
                map[x - 40] = <kbd>' '</kbd>;
                map[x] = <kbd>'H'</kbd>;
            }
        }
        <var>else</var>{}
        <var>if</var>(_kbhit())
        {
            <var>char</var> l = _getch();
            <var>if</var>(l == <kbd>'1'</kbd> || l == <kbd>'2'</kbd>)
            {
                map[x - 40] = <var>char</var>(173);
            };
        }
    cls();
    graphics();
}

<var>int</var> main()
{
    system(<kbd>"color a5"</kbd>);
    sp(481);
    srand((<var>unsigned</var>)time(0));
    game *memb;
    memb = <var>new</var> game;
    memb-&gt;LevelMenu();
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
</div></div><div id="CH_bb"></div><div id="CH_scoreapp"></div><script type="text/javascript">new Score('CH_scoreapp','../score.cgi','3Cpk4iN6');</script></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder reference"><a href="../../reference/default.htm">Reference</a></li>
<li class="folder selected articles"><a href="../default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="sect">
<h3><b><a href="../default.htm">Articles</a></b></h3>
<ul>
<li><a href="../algorithms/default.htm">Algorithms</a></li><li><a href="../cpp11/default.htm">C++ 11</a></li><li><a href="../graphics/default.htm">Graphics and multimedia</a></li><li><a href="../howto/default.htm">How-To</a></li><li><a href="../language/default.htm">Language Features</a></li><li><a href="../linux/default.htm">Unix/Linux programming</a></li><li><a href="../sourcecode/default.htm">Source Code</a></li><li><a href="../standard_library/default.htm">Standard Library</a></li><li><a href="../tips/default.htm">Tips and Tricks</a></li><li><a href="../tools/default.htm">Tools and Libraries</a></li><li><a href="../visualcpp/default.htm">Visual C++</a></li><li><a href="../winapi/default.htm">Windows API</a></li></ul>
</div>
<div id="I_subnav"></div>
</div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../contact.doreferrerwww.cplusplus~65.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
onSession(function(us) {
		document.getElementById('I_subnav').innerHTML=
			us.ok?
				'<div class="sect"><h3><b><a href="../../user/default.htm">'+us.user+'</a></b></h3><ul>'+
				'<li><a href="../myitems.cgi.htm">My items</a></li>'+
				(us.auth(32768)?'<li><a href="../adminitems.cgi.htm">Admin items</a></li>':'')+
				'</ul></div>'
			:'';
	}); onSession(function (us) {
		var el=document.getElementById('CH_bb'); el.innerHTML='';
		if ( (us.auth(32768)) || ((us.uniqid=='LAkz8vqX')&&(us.auth(128))) ) {
			el.appendChild(btn('Edit article','Edit this version of the article','edit','../edit.cgia3cpk4in6'));
	
			if (us.auth(32768)) {
				el.appendChild(btn('Delete article','Delete this article','delete','javascript:artdel()'));
			}
	
		}
	});
	function artdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgia3cpk4in6'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>