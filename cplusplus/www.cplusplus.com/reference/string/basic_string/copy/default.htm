<!DOCTYPE html><!-- saved from url=(0071)http://www.cplusplus.com/reference/string/basic_string/copy/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>basic_string::copy - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../../v321/main.css">
<script src="../../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../../default.htm">Reference</a></li>
<li><a href="../../default.htm">&lt;string&gt;</a></li>
<li><a href="../default.htm">basic_string</a></li>
<li class="here">copy</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;string&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="../default.htm">basic_string</a>::copy</h1>
<div class="C_prototype"><pre>size_type copy (charT* s, size_type len, size_type pos = 0) const;</pre></div><div id="I_description">Copy sequence of characters from string</div>
<section id="description">
Copies a substring of the current value of the <a href="../default.htm">basic_string</a> object into the array pointed by <i>s</i>. This substring contains the <i>len</i> characters that start at position <i>pos</i>.<br>
<br>
The function does not append a null character at the end of the copied content.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>s</dt>
<dd>Pointer to an array of characters.<br>
The array shall contain enough storage for the copied characters.</dd>
<dt>len</dt>
<dd>Number of characters to copy (if the string is shorter, as many characters as possible are copied).</dd>
<dt>pos</dt>
<dd>Position of the first character to be copied.<br>
If this is greater than the <a href="../../../../basic_string_3a_3alength">string length</a>, it throws <a href="../../../stdexcept/out_of_range/default.htm">out_of_range</a>.<br>
Note: The first character in the <a href="../default.htm">basic_string</a> is denoted by a value of <tt>0</tt> (not <tt>1</tt>).<br>
</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return value</h3>
The number of characters copied to the array pointed by <i>s</i>. This may be equal to <i>len</i> or to <tt><a href="../../../../basic_string_3a_3alength">length()</a>-pos</tt> (if the string value is shorter than <tt>pos+len</tt>).<br>
<br>
Member type <tt>size_type</tt> is an unsigned integral type.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br></code></pre></td>
<td class="source"><pre><code><cite>// string::copy</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;string&gt;</dfn>

<var>int</var> main ()
{
  <var>char</var> buffer[20];
  std::string str (<kbd>"Test string..."</kbd>);
  std::size_t length = str.copy(buffer,6,5);
  buffer[length]=<kbd>'\0'</kbd>;
  std::cout &lt;&lt; <kbd>"buffer contains: "</kbd> &lt;&lt; buffer &lt;&lt; <kbd>'\n'</kbd>;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>buffer contains: string
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
Linear in the number of characters copied.<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
No changes.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
The object is accessed.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Strong guarantee:</b> if an exception is thrown, there are no changes in the <a href="../default.htm">basic_string</a>.<br>
<br>
If <i>s</i> does not point to an array long enough, it causes <i>undefined behavior</i>.<br>
<br>
If <i>pos</i> is greater than the <a href="../../../../basic_string_3a_3alength">string length</a>, an <a href="../../../stdexcept/out_of_range/default.htm">out_of_range</a> exception is thrown.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../substr/default.htm"><b>basic_string::substr</b></a></dt><dd>Generate substring <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "../assign/default.htm"><b>basic_string::assign</b></a></dt><dd>Assign content to string <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "../c_str/default.htm"><b>basic_string::c_str</b></a></dt><dd>Get C-string equivalent</dd></dl><dl class="links"><dt><a href= "../replace/default.htm"><b>basic_string::replace</b></a></dt><dd>Replace portion of string <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "../insert/default.htm"><b>basic_string::insert</b></a></dt><dd>Insert into string <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "../append/default.htm"><b>basic_string::append</b></a></dt><dd>Append to string <span class="typ">(public member function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="../../default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="string_box">
<h3><b><a href="../../default.htm">&lt;string&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>class templates:</h4><ul>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>basic_string</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../char_traits/default.htm"><span>char_traits</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>classes:</h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../string/default.htm"><span>string</span></a></li>
<li class="cpp11"><a href="../../u16string/default.htm"><span>u16string</span></a></li>
<li class="cpp11"><a href="../../u32string/default.htm"><span>u32string</span></a></li>
<li class="cpp98 cpp11"><a href="../../wstring/default.htm"><span>wstring</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp11"><a href="../../stod/default.htm"><span>stod</span></a></li>
<li class="cpp11"><a href="../../stof/default.htm"><span>stof</span></a></li>
<li class="cpp11"><a href="../../stoi/default.htm"><span>stoi</span></a></li>
<li class="cpp11"><a href="../../stol/default.htm"><span>stol</span></a></li>
<li class="cpp11"><a href="../../stold/default.htm"><span>stold</span></a></li>
<li class="cpp11"><a href="../../stoll/default.htm"><span>stoll</span></a></li>
<li class="cpp11"><a href="../../stoul/default.htm"><span>stoul</span></a></li>
<li class="cpp11"><a href="../../stoull/default.htm"><span>stoull</span></a></li>
<li class="cpp11"><a href="../../to_string/default.htm"><span>to_string</span></a></li>
<li class="cpp11"><a href="../../to_wstring/default.htm"><span>to_wstring</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="basic_string_box">
<h3><b><a href="../default.htm">basic_string</a></b></h3>
<ul>
<li class="cpp98 cpp11"><a href="../basic_string/default.htm"><span>basic_string::basic_string</span></a></li>
<li class="cpp98 cpp11"><a href="../~basic_string/default.htm"><span>basic_string::~basic_string</span></a></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp98 cpp11"><a href="../append/default.htm"><span>basic_string::append</span></a></li>
<li class="cpp98 cpp11"><a href="../assign/default.htm"><span>basic_string::assign</span></a></li>
<li class="cpp98 cpp11"><a href="../at/default.htm"><span>basic_string::at</span></a></li>
<li class="cpp11"><a href="../back/default.htm"><span>basic_string::back</span></a></li>
<li class="cpp98 cpp11"><a href="../begin/default.htm"><span>basic_string::begin</span></a></li>
<li class="cpp98 cpp11"><a href="../capacity/default.htm"><span>basic_string::capacity</span></a></li>
<li class="cpp11"><a href="../cbegin/default.htm"><span>basic_string::cbegin</span></a></li>
<li class="cpp11"><a href="../cend/default.htm"><span>basic_string::cend</span></a></li>
<li class="cpp98 cpp11"><a href="../clear/default.htm"><span>basic_string::clear</span></a></li>
<li class="cpp98 cpp11"><a href="../compare/default.htm"><span>basic_string::compare</span></a></li>
<li class="cpp98 cpp11 selected"><a href="default.htm"><span>basic_string::copy</span></a></li>
<li class="cpp11"><a href="../crbegin/default.htm"><span>basic_string::crbegin</span></a></li>
<li class="cpp11"><a href="../crend/default.htm"><span>basic_string::crend</span></a></li>
<li class="cpp98 cpp11"><a href="../c_str/default.htm"><span>basic_string::c_str</span></a></li>
<li class="cpp98 cpp11"><a href="../data/default.htm"><span>basic_string::data</span></a></li>
<li class="cpp98 cpp11"><a href="../empty/default.htm"><span>basic_string::empty</span></a></li>
<li class="cpp98 cpp11"><a href="../end/default.htm"><span>basic_string::end</span></a></li>
<li class="cpp98 cpp11"><a href="../erase/default.htm"><span>basic_string::erase</span></a></li>
<li class="cpp98 cpp11"><a href="../find/default.htm"><span>basic_string::find</span></a></li>
<li class="cpp98 cpp11"><a href="../find_first_not_of/default.htm"><span>basic_string::find_first_not_of</span></a></li>
<li class="cpp98 cpp11"><a href="../find_first_of/default.htm"><span>basic_string::find_first_of</span></a></li>
<li class="cpp98 cpp11"><a href="../find_last_not_of/default.htm"><span>basic_string::find_last_not_of</span></a></li>
<li class="cpp98 cpp11"><a href="../find_last_of/default.htm"><span>basic_string::find_last_of</span></a></li>
<li class="cpp11"><a href="../front/default.htm"><span>basic_string::front</span></a></li>
<li class="cpp98 cpp11"><a href="../get_allocator/default.htm"><span>basic_string::get_allocator</span></a></li>
<li class="cpp98 cpp11"><a href="../insert/default.htm"><span>basic_string::insert</span></a></li>
<li class="cpp98 cpp11"><a href="../length/default.htm"><span>basic_string::length</span></a></li>
<li class="cpp98 cpp11"><a href="../max_size/default.htm"><span>basic_string::max_size</span></a></li>
<li class="cpp98 cpp11"><a href="../operator/default.htm"><span>basic_string::operator+=</span></a></li>
<li class="cpp98 cpp11"><a href="../operator/default.htm"><span>basic_string::operator=</span></a></li>
<li class="cpp98 cpp11"><a href="../operator/default.htm"><span>basic_string::operator[]</span></a></li>
<li class="cpp11"><a href="../pop_back/default.htm"><span>basic_string::pop_back</span></a></li>
<li class="cpp98 cpp11"><a href="../push_back/default.htm"><span>basic_string::push_back</span></a></li>
<li class="cpp98 cpp11"><a href="../rbegin/default.htm"><span>basic_string::rbegin</span></a></li>
<li class="cpp98 cpp11"><a href="../rend/default.htm"><span>basic_string::rend</span></a></li>
<li class="cpp98 cpp11"><a href="../replace/default.htm"><span>basic_string::replace</span></a></li>
<li class="cpp98 cpp11"><a href="../reserve/default.htm"><span>basic_string::reserve</span></a></li>
<li class="cpp98 cpp11"><a href="../resize/default.htm"><span>basic_string::resize</span></a></li>
<li class="cpp98 cpp11"><a href="../rfind/default.htm"><span>basic_string::rfind</span></a></li>
<li class="cpp11"><a href="../shrink_to_fit/default.htm"><span>basic_string::shrink_to_fit</span></a></li>
<li class="cpp98 cpp11"><a href="../size/default.htm"><span>basic_string::size</span></a></li>
<li class="cpp98 cpp11"><a href="../substr/default.htm"><span>basic_string::substr</span></a></li>
<li class="cpp98 cpp11"><a href="../swap/default.htm"><span>basic_string::swap</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>member constants:</h4><ul>
<li class="cpp98 cpp11"><a href="../npos/default.htm"><span>basic_string::npos</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member overloads:</h4><ul>
<li class="cpp98 cpp11"><a href="../getline/default.htm"><span>getline (basic_string)</span></a></li>
<li class="cpp98 cpp11"><a href="../operator/default.htm"><span>operator+ (basic_string)</span></a></li>
<li class="cpp98 cpp11"><a href="../operator_5f3c_5f3c/default.htm"><span>operator&lt;&lt; (basic_string)</span></a></li>
<li class="cpp98 cpp11"><a href="../operator_5f3e_5f3e/default.htm"><span>operator&gt;&gt; (basic_string)</span></a></li>
<li class="cpp98 cpp11"><a href="../operators/default.htm"><span>relational operators (basic_string)</span></a></li>
<li class="cpp98 cpp11"><a href="../swap-free/default.htm"><span>swap (basic_string)</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../../default.htm">Home page</a> | <a href="../../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../../contact.doreferrerwww.cplusplus~702.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../../edit.cgiastringbasic_stringcopy'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../../delete.cgiastringbasic_stringcopy'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../../httpsssl/default.htm' : '../../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>