<!DOCTYPE html><!-- saved from url=(0053)http://www.cplusplus.com/reference/iosfwd/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>&lt;iosfwd&gt; - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../v321/main.css">
<script src="../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../default.htm">Reference</a></li>
<li class="here">&lt;iosfwd&gt;</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">header</div>
<h1>&lt;iosfwd&gt;</h1>
<div id="I_description">Input-Output forward declarations</div>
<section id="description">
This header provides forward declarations for the types of the standard input/output library.<br>
<br>
Note that the file does not contain the template definitions, and thus shall only be included in other headers to provide forward declarations of these types.<br>
</section>
<br>
<h3><code>&lt;iosfwd&gt;</code></h3>
<div class="C_SwitchCases">
<div title="C++98">
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br></code></pre></td>
<td class="source"><pre><code><var>namespace</var> std {
  <var>template</var>&lt;<var>class</var> charT&gt; <var>struct</var> char_traits;
  <var>template</var>&lt;&gt; <var>class</var> char_traits&lt;<var>char</var>&gt;;
  <var>template</var>&lt;&gt; <var>class</var> char_traits&lt;<var>wchar_t</var>&gt;;

  <var>template</var>&lt;<var>class</var> T&gt; <var>class</var> allocator;

  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ios;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_streambuf;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_istream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ostream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_iostream;
 
 <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt;
    <var>class</var> basic_stringbuf;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt; 
    <var>class</var> basic_istringstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt;
    <var>class</var> basic_ostringstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt;
    <var>class</var> basic_stringstream;

  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_filebuf;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ifstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ofstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_fstream;

  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> istreambuf_iterator;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> ostreambuf_iterator;

  <var>template</var>&lt;<var>class</var> stateT&gt; <var>class</var> fpos;

  <var>typedef</var> basic_ios&lt;<var>char</var>&gt;              ios;
  <var>typedef</var> basic_streambuf&lt;<var>char</var>&gt;        streambuf;
  <var>typedef</var> basic_istream&lt;<var>char</var>&gt;          istream;
  <var>typedef</var> basic_ostream&lt;<var>char</var>&gt;          ostream;
  <var>typedef</var> basic_iostream&lt;<var>char</var>&gt;         iostream;
  <var>typedef</var> basic_stringbuf&lt;<var>char</var>&gt;        stringbuf;
  <var>typedef</var> basic_istringstream&lt;<var>char</var>&gt;    istringstream;
  <var>typedef</var> basic_ostringstream&lt;<var>char</var>&gt;    ostringstream;
  <var>typedef</var> basic_stringstream&lt;<var>char</var>&gt;     stringstream;
  <var>typedef</var> basic_filebuf&lt;<var>char</var>&gt;          filebuf;
  <var>typedef</var> basic_ifstream&lt;<var>char</var>&gt;         ifstream;
  <var>typedef</var> basic_ofstream&lt;<var>char</var>&gt;         ofstream;
  <var>typedef</var> basic_fstream&lt;<var>char</var>&gt;          fstream;

  <var>typedef</var> basic_ios&lt;<var>wchar_t</var>&gt;           wios;
  <var>typedef</var> basic_streambuf&lt;<var>wchar_t</var>&gt;     wstreambuf;
  <var>typedef</var> basic_istream&lt;<var>wchar_t</var>&gt;       wistream;
  <var>typedef</var> basic_ostream&lt;<var>wchar_t</var>&gt;       wostream;
  <var>typedef</var> basic_iostream&lt;<var>wchar_t</var>&gt;      wiostream;
  <var>typedef</var> basic_stringbuf&lt;<var>wchar_t</var>&gt;     wstringbuf;
  <var>typedef</var> basic_istringstream&lt;<var>wchar_t</var>&gt; wistringstream;
  <var>typedef</var> basic_ostringstream&lt;<var>wchar_t</var>&gt; wostringstream;
  <var>typedef</var> basic_stringstream&lt;<var>wchar_t</var>&gt;  wstringstream;
  <var>typedef</var> basic_filebuf&lt;<var>wchar_t</var>&gt;       wfilebuf;
  <var>typedef</var> basic_ifstream&lt;<var>wchar_t</var>&gt;      wifstream;
  <var>typedef</var> basic_ofstream&lt;<var>wchar_t</var>&gt;      wofstream;
  <var>typedef</var> basic_fstream&lt;<var>wchar_t</var>&gt;       wfstream;

  <var>typedef</var> fpos&lt;mbstate_t&gt; streampos;
  <var>typedef</var> fpos&lt;mbstate_t&gt; wstreampos;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
<div title="C++11">
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br></code></pre></td>
<td class="source"><pre><code><var>namespace</var> std {
  <var>template</var>&lt;<var>class</var> charT&gt; <var>struct</var> char_traits;
  <var>template</var>&lt;&gt; <var>class</var> char_traits&lt;<var>char</var>&gt;;
  <var>template</var>&lt;&gt; <var>class</var> char_traits&lt;<var>char16_t</var>&gt;;
  <var>template</var>&lt;&gt; <var>class</var> char_traits&lt;<var>char32_t</var>&gt;;
  <var>template</var>&lt;&gt; <var>class</var> char_traits&lt;<var>wchar_t</var>&gt;;

  <var>template</var>&lt;<var>class</var> T&gt; <var>class</var> allocator;

  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ios;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_streambuf;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_istream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ostream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_iostream;
 
 <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt;
    <var>class</var> basic_stringbuf;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt; 
    <var>class</var> basic_istringstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt;
    <var>class</var> basic_ostringstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt;, <var>class</var> Alloc=allocator&lt;charT&gt; &gt;
    <var>class</var> basic_stringstream;

  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_filebuf;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ifstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_ofstream;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> basic_fstream;

  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> istreambuf_iterator;
  <var>template</var> &lt;<var>class</var> charT, <var>class</var> traits=char_traits&lt;charT&gt; &gt; <var>class</var> ostreambuf_iterator;

  <var>template</var>&lt;<var>class</var> stateT&gt; <var>class</var> fpos;

  <var>typedef</var> basic_ios&lt;<var>char</var>&gt;              ios;
  <var>typedef</var> basic_streambuf&lt;<var>char</var>&gt;        streambuf;
  <var>typedef</var> basic_istream&lt;<var>char</var>&gt;          istream;
  <var>typedef</var> basic_ostream&lt;<var>char</var>&gt;          ostream;
  <var>typedef</var> basic_iostream&lt;<var>char</var>&gt;         iostream;
  <var>typedef</var> basic_stringbuf&lt;<var>char</var>&gt;        stringbuf;
  <var>typedef</var> basic_istringstream&lt;<var>char</var>&gt;    istringstream;
  <var>typedef</var> basic_ostringstream&lt;<var>char</var>&gt;    ostringstream;
  <var>typedef</var> basic_stringstream&lt;<var>char</var>&gt;     stringstream;
  <var>typedef</var> basic_filebuf&lt;<var>char</var>&gt;          filebuf;
  <var>typedef</var> basic_ifstream&lt;<var>char</var>&gt;         ifstream;
  <var>typedef</var> basic_ofstream&lt;<var>char</var>&gt;         ofstream;
  <var>typedef</var> basic_fstream&lt;<var>char</var>&gt;          fstream;

  <var>typedef</var> basic_ios&lt;<var>wchar_t</var>&gt;           wios;
  <var>typedef</var> basic_streambuf&lt;<var>wchar_t</var>&gt;     wstreambuf;
  <var>typedef</var> basic_istream&lt;<var>wchar_t</var>&gt;       wistream;
  <var>typedef</var> basic_ostream&lt;<var>wchar_t</var>&gt;       wostream;
  <var>typedef</var> basic_iostream&lt;<var>wchar_t</var>&gt;      wiostream;
  <var>typedef</var> basic_stringbuf&lt;<var>wchar_t</var>&gt;     wstringbuf;
  <var>typedef</var> basic_istringstream&lt;<var>wchar_t</var>&gt; wistringstream;
  <var>typedef</var> basic_ostringstream&lt;<var>wchar_t</var>&gt; wostringstream;
  <var>typedef</var> basic_stringstream&lt;<var>wchar_t</var>&gt;  wstringstream;
  <var>typedef</var> basic_filebuf&lt;<var>wchar_t</var>&gt;       wfilebuf;
  <var>typedef</var> basic_ifstream&lt;<var>wchar_t</var>&gt;      wifstream;
  <var>typedef</var> basic_ofstream&lt;<var>wchar_t</var>&gt;      wofstream;
  <var>typedef</var> basic_fstream&lt;<var>wchar_t</var>&gt;       wfstream;

  <var>typedef</var> fpos&lt;mbstate_t&gt; streampos;
  <var>typedef</var> fpos&lt;mbstate_t&gt; wstreampos;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
</div></div><div id="CH_bb"></div></div>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../default.htm">Home page</a> | <a href="../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../ovr0/contact.doreferrerwww.cplusplus.com_252freference_~135.htm">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			el.appendChild(btn('New Page','New Page','new','../new.cgiaiosfwd.htm'));
			el.appendChild(btn('Edit Page','Edit Page','edit','../edit.cgiaiosfwd.htm'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../delete.cgiaiosfwd'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../httpsssl/default.htm' : '../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>