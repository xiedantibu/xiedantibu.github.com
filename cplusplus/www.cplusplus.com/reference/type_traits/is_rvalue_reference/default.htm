<!DOCTYPE html><!-- saved from url=(0078)http://www.cplusplus.com/reference/type_traits/is_rvalue_reference/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>is_rvalue_reference - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Reference</a></li>
<li><a href="../default.htm">&lt;type_traits&gt;</a></li>
<li class="here">is_rvalue_reference</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">class template</div>
<div id="I_file">&lt;type_traits&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>is_rvalue_reference<span class="C_ico cpp11warning" title="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it." alt="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it."></span></h1>
<div class="C_prototype"><pre>template &lt;class T&gt; struct is_rvalue_reference;</pre></div><div id="I_description">Is rvalue reference</div>
<section id="description">
<div class="hierarchy">
<ul>
<li><b><a href="../../../integral_constant">integral_constant</a></b></li>
<li><b>is_rvalue_reference</b></li>
</ul>
</div>
<br>
Trait class that identifies whether <i>T</i> is an <i>r-value</i> reference.<br>
<br>
It inherits from <a href="../../../integral_constant">integral_constant</a> as being either <a href="../../../true_type">true_type</a> or <a href="../../../false_type">false_type</a>.<br>
</section>
<br>
<section id="parameters">
<h3>Template parameters</h3>
<dl>
<dt>T</dt>
<dd>A type.</dd>
</dl>
</section>
<br>
<section id="types">
<h3>Member types</h3>
Inherited from <a href="../../../integral_constant">integral_constant</a>:<br>
<table class="boxed">
<tr><th>member type</th><th>definition</th></tr>
<tr><td><tt>value_type</tt></td><td><tt>bool</tt></td></tr>
<tr><td><tt>type</tt></td><td>either <a href="../../../true_type">true_type</a> or <a href="../../../false_type">false_type</a></td></tr>
</table>
</section>
<br>
<section id="constants">
<h3>Member constants</h3>
Inherited from <a href="../../../integral_constant">integral_constant</a>:<br>
<table class="boxed">
<tr><th>member constant</th><th>definition</th></tr>
<tr><td><tt>value</tt></td><td>either <tt>true</tt> or <tt>false</tt></td></tr>
</table>
</section>
<br>
<section id="functions">
<h3>Member functions</h3>
Inherited from <a href="../../../integral_constant">integral_constant</a>:<br>
<dl class="links"><dt><a href= "../integral_constant/operator%20value_type/default.htm"><b>operator bool</b></a></dt><dd>Returns value <span class="typ">(public member function)</span></dd></dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br></code></pre></td>
<td class="source"><pre><code><cite>// is_rvalue_reference example</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;type_traits&gt;</dfn>

<var>int</var> main() {
  std::cout &lt;&lt; std::boolalpha;
  std::cout &lt;&lt; <kbd>"is_rvalue_reference:"</kbd> &lt;&lt; std::endl;
  std::cout &lt;&lt; <kbd>"int: "</kbd> &lt;&lt; std::is_rvalue_reference&lt;<var>int</var>&gt;::value &lt;&lt; std::endl;
  std::cout &lt;&lt; <kbd>"int&amp;: "</kbd> &lt;&lt; std::is_rvalue_reference&lt;<var>int</var>&amp;&gt;::value &lt;&lt; std::endl;
  std::cout &lt;&lt; <kbd>"int&amp;&amp;: "</kbd> &lt;&lt; std::is_rvalue_reference&lt;<var>int</var>&amp;&amp;&gt;::value &lt;&lt; std::endl;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>is_rvalue_reference:
int: false
int&amp;: false
int&amp;&amp;: true
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../is_reference/default.htm"><b>is_reference</b></a></dt><dd>Is reference type <span class="typ">(class template)</span></dd></dl><dl class="links"><dt><a href= "../is_lvalue_reference/default.htm"><b>is_lvalue_reference</b></a></dt><dd>Is lvalue reference <span class="typ">(class template)</span></dd></dl><dl class="links"><dt><a href= "../is_pointer/default.htm"><b>is_pointer</b></a></dt><dd>Is pointer <span class="typ">(class template)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 selected folder"><a href="../default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp11" id="type_traits_box">
<h3><b><a href="../default.htm">&lt;type_traits&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>helper classes:</h4><ul>
<li class="cpp11"><a href="../false_type/default.htm"><span>false_type</span></a></li>
<li class="cpp11 folder"><a href="../integral_constant/default.htm"><span>integral_constant</span></a></li>
<li class="cpp11"><a href="../true_type/default.htm"><span>true_type</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>type traits:</h4><ul>
<li class="cpp11"><a href="../alignment_of/default.htm"><span>alignment_of</span></a></li>
<li class="cpp11"><a href="../extent/default.htm"><span>extent</span></a></li>
<li class="cpp11"><a href="../has_virtual_destructor/default.htm"><span>has_virtual_destructor</span></a></li>
<li class="cpp11"><a href="../is_abstract/default.htm"><span>is_abstract</span></a></li>
<li class="cpp11"><a href="../is_arithmetic/default.htm"><span>is_arithmetic</span></a></li>
<li class="cpp11"><a href="../is_array/default.htm"><span>is_array</span></a></li>
<li class="cpp11"><a href="../is_assignable/default.htm"><span>is_assignable</span></a></li>
<li class="cpp11"><a href="../is_base_of/default.htm"><span>is_base_of</span></a></li>
<li class="cpp11"><a href="../is_class/default.htm"><span>is_class</span></a></li>
<li class="cpp11"><a href="../is_compound/default.htm"><span>is_compound</span></a></li>
<li class="cpp11"><a href="../is_const/default.htm"><span>is_const</span></a></li>
<li class="cpp11"><a href="../is_constructible/default.htm"><span>is_constructible</span></a></li>
<li class="cpp11"><a href="../is_convertible/default.htm"><span>is_convertible</span></a></li>
<li class="cpp11"><a href="../is_copy_assignable/default.htm"><span>is_copy_assignable</span></a></li>
<li class="cpp11"><a href="../is_copy_constructible/default.htm"><span>is_copy_constructible</span></a></li>
<li class="cpp11"><a href="../is_default_constructible/default.htm"><span>is_default_constructible</span></a></li>
<li class="cpp11"><a href="../is_destructible/default.htm"><span>is_destructible</span></a></li>
<li class="cpp11"><a href="../is_empty/default.htm"><span>is_empty</span></a></li>
<li class="cpp11"><a href="../is_enum/default.htm"><span>is_enum</span></a></li>
<li class="cpp11"><a href="../is_floating_point/default.htm"><span>is_floating_point</span></a></li>
<li class="cpp11"><a href="../is_function/default.htm"><span>is_function</span></a></li>
<li class="cpp11"><a href="../is_fundamental/default.htm"><span>is_fundamental</span></a></li>
<li class="cpp11"><a href="../is_integral/default.htm"><span>is_integral</span></a></li>
<li class="cpp11"><a href="../is_literal_type/default.htm"><span>is_literal_type</span></a></li>
<li class="cpp11"><a href="../is_lvalue_reference/default.htm"><span>is_lvalue_reference</span></a></li>
<li class="cpp11"><a href="../is_member_function_pointer/default.htm"><span>is_member_function_pointer</span></a></li>
<li class="cpp11"><a href="../is_member_object_pointer/default.htm"><span>is_member_object_pointer</span></a></li>
<li class="cpp11"><a href="../is_member_pointer/default.htm"><span>is_member_pointer</span></a></li>
<li class="cpp11"><a href="../is_move_assignable/default.htm"><span>is_move_assignable</span></a></li>
<li class="cpp11"><a href="../is_move_constructible/default.htm"><span>is_move_constructible</span></a></li>
<li class="cpp11"><a href="../is_nothrow_assignable/default.htm"><span>is_nothrow_assignable</span></a></li>
<li class="cpp11"><a href="../is_nothrow_constructible/default.htm"><span>is_nothrow_constructible</span></a></li>
<li class="cpp11"><a href="../is_nothrow_copy_assignable/default.htm"><span>is_nothrow_copy_assignable</span></a></li>
<li class="cpp11"><a href="../is_nothrow_copy_constructible/default.htm"><span>is_nothrow_copy_constructible</span></a></li>
<li class="cpp11"><a href="../is_nothrow_default_constructible/default.htm"><span>is_nothrow_default_constructible</span></a></li>
<li class="cpp11"><a href="../is_nothrow_destructible/default.htm"><span>is_nothrow_destructible</span></a></li>
<li class="cpp11"><a href="../is_nothrow_move_assignable/default.htm"><span>is_nothrow_move_assignable</span></a></li>
<li class="cpp11"><a href="../is_nothrow_move_constructible/default.htm"><span>is_nothrow_move_constructible</span></a></li>
<li class="cpp14"><a href="../is_null_pointer/default.htm"><span>is_null_pointer</span></a></li>
<li class="cpp11"><a href="../is_object/default.htm"><span>is_object</span></a></li>
<li class="cpp11"><a href="../is_pod/default.htm"><span>is_pod</span></a></li>
<li class="cpp11"><a href="../is_pointer/default.htm"><span>is_pointer</span></a></li>
<li class="cpp11"><a href="../is_polymorphic/default.htm"><span>is_polymorphic</span></a></li>
<li class="cpp11"><a href="../is_reference/default.htm"><span>is_reference</span></a></li>
<li class="cpp11 selected"><a href="default.htm"><span>is_rvalue_reference</span></a></li>
<li class="cpp11"><a href="../is_same/default.htm"><span>is_same</span></a></li>
<li class="cpp11"><a href="../is_scalar/default.htm"><span>is_scalar</span></a></li>
<li class="cpp11"><a href="../is_signed/default.htm"><span>is_signed</span></a></li>
<li class="cpp11"><a href="../is_standard_layout/default.htm"><span>is_standard_layout</span></a></li>
<li class="cpp11"><a href="../is_trivial/default.htm"><span>is_trivial</span></a></li>
<li class="cpp11"><a href="../is_trivially_assignable/default.htm"><span>is_trivially_assignable</span></a></li>
<li class="cpp11"><a href="../is_trivially_constructible/default.htm"><span>is_trivially_constructible</span></a></li>
<li class="cpp11"><a href="../is_trivially_copyable/default.htm"><span>is_trivially_copyable</span></a></li>
<li class="cpp11"><a href="../is_trivially_copy_assignable/default.htm"><span>is_trivially_copy_assignable</span></a></li>
<li class="cpp11"><a href="../is_trivially_copy_constructible/default.htm"><span>is_trivially_copy_constructible</span></a></li>
<li class="cpp11"><a href="../is_trivially_default_constructible/default.htm"><span>is_trivially_default_constructible</span></a></li>
<li class="cpp11"><a href="../is_trivially_destructible/default.htm"><span>is_trivially_destructible</span></a></li>
<li class="cpp11"><a href="../is_trivially_move_assignable/default.htm"><span>is_trivially_move_assignable</span></a></li>
<li class="cpp11"><a href="../is_trivially_move_constructible/default.htm"><span>is_trivially_move_constructible</span></a></li>
<li class="cpp11"><a href="../is_union/default.htm"><span>is_union</span></a></li>
<li class="cpp11"><a href="../is_unsigned/default.htm"><span> is_unsigned</span></a></li>
<li class="cpp11"><a href="../is_void/default.htm"><span>is_void</span></a></li>
<li class="cpp11"><a href="../is_volatile/default.htm"><span>is_volatile</span></a></li>
<li class="cpp11"><a href="../rank/default.htm"><span>rank</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>type transformations:</h4><ul>
<li class="cpp11"><a href="../add_const/default.htm"><span>add_const</span></a></li>
<li class="cpp11"><a href="../add_cv/default.htm"><span>add_cv</span></a></li>
<li class="cpp11"><a href="../add_lvalue_reference/default.htm"><span>add_lvalue_reference</span></a></li>
<li class="cpp11"><a href="../add_pointer/default.htm"><span>add_pointer</span></a></li>
<li class="cpp11"><a href="../add_rvalue_reference/default.htm"><span>add_rvalue_reference</span></a></li>
<li class="cpp11"><a href="../add_volatile/default.htm"><span>add_volatile</span></a></li>
<li class="cpp11"><a href="../aligned_storage/default.htm"><span>aligned_storage</span></a></li>
<li class="cpp11"><a href="../aligned_union/default.htm"><span>aligned_union</span></a></li>
<li class="cpp11"><a href="../common_type/default.htm"><span>common_type</span></a></li>
<li class="cpp11"><a href="../conditional/default.htm"><span>conditional</span></a></li>
<li class="cpp11"><a href="../decay/default.htm"><span>decay</span></a></li>
<li class="cpp11"><a href="../enable_if/default.htm"><span>enable_if</span></a></li>
<li class="cpp11"><a href="../make_signed/default.htm"><span>make_signed</span></a></li>
<li class="cpp11"><a href="../make_unsigned/default.htm"><span>make_unsigned</span></a></li>
<li class="cpp11"><a href="../remove_all_extents/default.htm"><span>remove_all_extents</span></a></li>
<li class="cpp11"><a href="../remove_const/default.htm"><span>remove_const</span></a></li>
<li class="cpp11"><a href="../remove_cv/default.htm"><span>remove_cv</span></a></li>
<li class="cpp11"><a href="../remove_extent/default.htm"><span>remove_extent</span></a></li>
<li class="cpp11"><a href="../remove_pointer/default.htm"><span>remove_pointer</span></a></li>
<li class="cpp11"><a href="../remove_reference/default.htm"><span>remove_reference</span></a></li>
<li class="cpp11"><a href="../remove_volatile/default.htm"><span>remove_volatile</span></a></li>
<li class="cpp11"><a href="../result_of/default.htm"><span>result_of</span></a></li>
<li class="cpp11"><a href="../underlying_type/default.htm"><span>underlying_type</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~2067.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../edit.cgiatype_traitsis_rvalue_reference'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../delete.cgiatype_traitsis_rvalue_reference'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>