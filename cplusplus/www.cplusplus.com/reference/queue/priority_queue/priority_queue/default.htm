<!DOCTYPE html><!-- saved from url=(0082)http://www.cplusplus.com/reference/queue/priority_queue/priority_queue/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>priority_queue::priority_queue - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../../v321/main.css">
<script src="../../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../../default.htm">Reference</a></li>
<li><a href="../../default.htm">&lt;queue&gt;</a></li>
<li><a href="../default.htm">priority_queue</a></li>
<li class="here">priority_queue</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;queue&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="../default.htm">priority_queue</a>::priority_queue</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<table><tr class="odd"><th>initialize (1)</th><td><pre>explicit priority_queue (const Compare&amp; comp = Compare(),                         const Container&amp; ctnr = Container());</pre></td></tr><tr class="even"><th>range (2)</th><td><pre>template &lt;class InputIterator&gt;         priority_queue (InputIterator first, InputIterator last,                         const Compare&amp; comp = Compare(),                         const Container&amp; ctnr = Container());</pre></td></tr></table></div>
<div title="C++11" class="off">
<table><tr class="odd"><th>initialize (1)</th><td><pre>priority_queue (const Compare&amp; comp, const Container&amp; ctnr);</pre></td></tr><tr class="even"><th>range (2)</th><td><pre>template &lt;class InputIterator&gt;  priority_queue (InputIterator first, InputIterator last,                  const Compare&amp; comp, const Container&amp; ctnr);</pre></td></tr><tr class="odd"><th>move-initialize (3)</th><td><pre>explicit priority_queue (const Compare&amp; comp = Compare(),                         Container&amp;&amp; ctnr = Container());</pre></td></tr><tr class="even"><th>move-range (4)</th><td><pre>template &lt;class InputIterator&gt;  priority_queue (InputIterator first, InputIterator last,                  const Compare&amp; comp, Container&amp;&amp; ctnr = Container());</pre></td></tr><tr class="odd"><th>allocator versions (5)</th><td><pre>template &lt;class Alloc&gt; explicit priority_queue (const Alloc&amp; alloc);template &lt;class Alloc&gt; priority_queue (const Compare&amp; comp, const Alloc&amp; alloc);template &lt;class Alloc&gt; priority_queue (const Compare&amp; comp, const Container&amp; ctnr,                                       const Alloc&amp; alloc);template &lt;class Alloc&gt; priority_queue (const Compare&amp; comp, Container&amp;&amp; ctnr,                                       const Alloc&amp; alloc);template &lt;class Alloc&gt; priority_queue (const priority_queue&amp; x, const Alloc&amp; alloc);template &lt;class Alloc&gt; priority_queue (priority_queue&amp;&amp; x, const Alloc&amp; alloc);</pre></td></tr></table></div>
</div>
</div><div id="I_description">Construct priority queue</div>
<section id="description">
Constructs a <samp><a href="../default.htm">priority_queue</a></samp> container adaptor object.<br>
<br>
<div class="C_SwitchCases">
<div title="C++98">
A <samp><a href="../default.htm">priority_queue</a></samp> keeps internally a comparing function and a container object as data, which are copies of <var>comp</var> and <var>ctnr</var> respectively.<br>
<br>
The <i>range version (2)</i>, on top that, inserts the elements between <var>first</var> and <var>last</var> (before the container is converted into a <i>heap</i>).<br>
</div>
<div title="C++11">
A <samp><a href="../default.htm">priority_queue</a></samp> keeps internally a comparing function and a container object as data. The comparing function is a copy of <var>comp</var> and the <i>underlying container</i> depends on the constructor used:<br>
<br>
<dl>
<dt>(1) initialization constructor</dt>
<dd>The <i>underlying container</i> is a copy of <var>ctnr</var>, sorted by the <samp><a href="../../../algorithm/make_heap/default.htm">make_heap</a></samp> algorithm.</dd>
<dt>(2) range initialization constructor</dt>
<dd>The <i>underlying container</i> is a copy of <var>ctnr</var>, with the insertion of the elements in the range <code>[first,last)</code>, and then sorted by <samp><a href="../../../algorithm/make_heap/default.htm">make_heap</a></samp>.</dd>
<dt>(3) move-initialization constructor</dt>
<dd>The <i>underlying container</i> acquires the value of <var>ctnr</var> by <i>move-constructing</i> it. The elements are sorted by <samp><a href="../../../algorithm/make_heap/default.htm">make_heap</a></samp>.</dd>
<dt>(4) move-range initialization constructor</dt>
<dd>The <i>underlying container</i> acquires the value of <var>ctnr</var> by <i>move-constructing</i>. It also inserts the elements in the range <code>[first,last)</code> and then sorts them with <samp><a href="../../../algorithm/make_heap/default.htm">make_heap</a></samp>.</dd>
<dt>(5) allocator constructors</dt>
<dd>Constructs a <samp><a href="../default.htm">priority_queue</a></samp> using a specific <i>allocator</i> value.</dd>
</dl>
</div>
</div>
<br>
The constructor effectively initializes the comparison and container objects and then calls algorithm <samp><a href="../../../algorithm/make_heap/default.htm">make_heap</a></samp> on the range that includes all its elements before returning.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>comp</dt>
<dd>Comparison object to be used to order the <i>heap</i>.<br>
This may be a function pointer or function object able to perform a <i>strict weak ordering</i> by comparing its two arguments.<br>
<samp>Compare</samp> is the third class template paramete ( by default: <code><a href="../../../functional/less/default.htm">less</a>&lt;T&gt;</code>).</dd>
<dt>ctnr</dt>
<dd>Container object.<br>
<samp>Container</samp> is the second class template parameter (the type of the <i>underlying container</i> for the <samp><a href="../default.htm">priority_queue</a></samp>; by default: <code><a href="../../../vector/vector/default.htm">vector</a>&lt;T&gt;</code>).<br>
</dd>
<dt>first,last</dt>
<dd><a href="../../../iterator/inputiterator/default.htm">Input iterators</a> to the initial and final positions in a sequence. The elements in this sequence are inserted into the <i>underlying container</i> before sorting it.<br>
The range used is <code>[first,last)</code>, which includes all the elements between <var>first</var> and <var>last</var>, including the element pointed by <var>first</var> but not the element pointed by <var>last</var>.<br>
</dd>
</dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br></code></pre></td>
<td class="source"><pre><code><cite>// constructing priority queues</cite>
<dfn>#include &lt;iostream&gt;       </dfn><cite>// std::cout</cite>
<dfn>#include &lt;queue&gt;          </dfn><cite>// std::priority_queue</cite>
<dfn>#include &lt;vector&gt;         </dfn><cite>// std::vector</cite>
<dfn>#include &lt;functional&gt;     </dfn><cite>// std::greater</cite>

<var>class</var> mycomparison
{
  <var>bool</var> reverse;
<var>public</var>:
  mycomparison(<var>const</var> <var>bool</var>&amp; revparam=<var>false</var>)
    {reverse=revparam;}
  <var>bool</var> <var>operator</var>() (<var>const</var> <var>int</var>&amp; lhs, <var>const</var> <var>int</var>&amp;rhs) <var>const</var>
  {
    <var>if</var> (reverse) <var>return</var> (lhs&gt;rhs);
    <var>else</var> <var>return</var> (lhs&lt;rhs);
  }
};

<var>int</var> main ()
{
  <var>int</var> myints[]= {10,60,50,20};

  std::priority_queue&lt;<var>int</var>&gt; first;
  std::priority_queue&lt;<var>int</var>&gt; second (myints,myints+4);
  std::priority_queue&lt;<var>int</var>, std::vector&lt;<var>int</var>&gt;, std::greater&lt;<var>int</var>&gt; &gt;
                            third (myints,myints+4);
  <cite>// using mycomparison:</cite>
  <var>typedef</var> std::priority_queue&lt;<var>int</var>,std::vector&lt;<var>int</var>&gt;,mycomparison&gt; mypq_type;

  mypq_type fourth;                       <cite>// less-than comparison</cite>
  mypq_type fifth (mycomparison(<var>true</var>));   <cite>// greater-than comparison</cite>

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
The example does not produce any output, but it constructs different <samp><a href="../default.htm">priority_queue</a></samp> objects:<br>
- First is empty.<br>
- Second contains the four ints defined for <samp>myints</samp>, with <code>60</code> (the highest) at its top.<br>
- Third has the same four ints, but because it uses <samp><a href="../../../../greater">greater</a></samp> instead of the default (which is <samp><a href="../../../functional/less/default.htm">less</a></samp>), it has 10 as its top element.<br>
- Fourth and fifth are very similar to first: they are both empty, except that these use <samp>mycomparison</samp> for comparisons, which is a special stateful comparison function that behaves differently depending on a flag set on construction.<br>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
One container construction, and one call to <samp><a href="../../../algorithm/make_heap/default.htm">make_heap</a></samp>, plus linear in the number of elements in the range <code>[first,last)</code> (if specified).<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
<i>Moving constructors</i> may invalidate all iterators, pointers and references related to their moved argument.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
All copied elements are accessed.<br>
The <i>moving constructors</i> may modify their rvalue reference argument.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
Provides the same level of guarantees as the operation performed on the container.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../push/default.htm"><b>priority_queue::push</b></a></dt><dd>Insert element <span class="typ">(public member function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="../../default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="queue_box">
<h3><b><a href="../../default.htm">&lt;queue&gt;</a></b></h3>
<ul>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>priority_queue</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../queue/default.htm"><span>queue</span></a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="priority_queue_box">
<h3><b><a href="../default.htm">priority_queue</a></b></h3>
<ul>
<li class="cpp98 cpp11 selected"><a href="default.htm"><span>priority_queue::priority_queue</span></a></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp11"><a href="../emplace/default.htm"><span>priority_queue::emplace</span></a></li>
<li class="cpp98 cpp11"><a href="../empty/default.htm"><span>priority_queue::empty</span></a></li>
<li class="cpp98 cpp11"><a href="../pop/default.htm"><span>priority_queue::pop</span></a></li>
<li class="cpp98 cpp11"><a href="../push/default.htm"><span>priority_queue::push</span></a></li>
<li class="cpp98 cpp11"><a href="../size/default.htm"><span>priority_queue::size</span></a></li>
<li class="cpp11"><a href="../swap/default.htm"><span>priority_queue::swap</span></a></li>
<li class="cpp98 cpp11"><a href="../top/default.htm"><span>priority_queue::top</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member overloads:</h4><ul>
<li class="cpp11"><a href="../swap-free/default.htm"><span>swap (priority_queue)</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member specializations:</h4><ul>
<li class="cpp11"><a href="../uses_allocator/default.htm"><span>uses_allocator&lt;priority_queue&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../../default.htm">Home page</a> | <a href="../../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../../contact.doreferrerwww.cplusplus~1914.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../../edit.cgiaqueuepriority_queuepriority_queue'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../../delete.cgiaqueuepriority_queuepriority_queue'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../../httpsssl/default.htm' : '../../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>