<!DOCTYPE html><!-- saved from url=(0072)http://www.cplusplus.com/reference/functional/unary_function/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>unary_function - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Reference</a></li>
<li><a href="../default.htm">&lt;functional&gt;</a></li>
<li class="here">unary_function</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">class template</div>
<div id="I_file">&lt;functional&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>unary_function</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<pre>template &lt;class Arg, class Result&gt; struct unary_function;</pre></div>
<div title="C++11" class="off">
<pre>template &lt;class Arg, class Result&gt; struct unary_function; // deprecated</pre></div>
</div>
</div><div id="I_description">Unary function object base class</div>
<section id="description">
Note: This class has been deprecated in C++11. <br>
<br>
This is a base class for standard <i>unary function objects</i>.<br>
<br>
Generically, <i>function objects</i> are instances of a class with member function <code>operator()</code> defined. This member function allows the object to be used with the same syntax as a regular function call, and therefore its type can be used as template parameter when a generic function type is expected.<br>
<br>
In the case of <i>unary function objects</i>, this <code>operator()</code> member function takes a single parameter.<br>
<br>
<samp>unary_function</samp> is just a base class, from which specific unary function objects are derived. It has no <code>operator()</code> member defined (which derived classes are expected to define) - it simply has two public data members that are <i>typedefs</i> of the template parameters. It is defined as:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>class</var> Arg, <var>class</var> Result&gt;
  <var>struct</var> unary_function {
    <var>typedef</var> Arg argument_type;
    <var>typedef</var> Result result_type;
  };</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</section>
<br>
<section id="types">
<h3>Member types</h3>
<table class="boxed">
<tr><th>member type</th><th>definition</th><th>notes</th></tr>
<tr><td><samp>argument_type</samp></td><td>The first template parameter (<samp>Arg</samp>)</td><td>Type of the argument in member <code>operator()</code></td></tr>
<tr><td><samp>result_type</samp></td><td>The second template parameter (<samp>Result</samp>)</td><td>Type returned by member <code>operator()</code></td></tr>
</table>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br></code></pre></td>
<td class="source"><pre><code><cite>// unary_function example</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout, std::cin</cite>
<dfn>#include &lt;functional&gt;   </dfn><cite>// std::unary_function</cite>

<var>struct</var> IsOdd : <var>public</var> std::unary_function&lt;<var>int</var>,<var>bool</var>&gt; {
  <var>bool</var> <var>operator</var>() (<var>int</var> number) {<var>return</var> (number%2!=0);}
};

<var>int</var> main () {
  IsOdd IsOdd_object;
  IsOdd::argument_type input;
  IsOdd::result_type result;

  std::cout &lt;&lt; <kbd>"Please enter a number: "</kbd>;
  std::cin &gt;&gt; input;

  result = IsOdd_object (input);

  std::cout &lt;&lt; <kbd>"Number "</kbd> &lt;&lt; input &lt;&lt; <kbd>" is "</kbd> &lt;&lt; (result?<kbd>"odd"</kbd>:<kbd>"even"</kbd>) &lt;&lt; <kbd>".\n"</kbd>;

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Possible output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
Please enter a number: 2
Number 2 is even.
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../binary_function/default.htm"><b>binary_function</b></a></dt><dd>Binary function object base class <span class="typ">(class template)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="functional_box">
<h3><b><a href="../default.htm">&lt;functional&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp11"><a href="../bind/default.htm"><span>bind</span></a></li>
<li class="cpp11"><a href="../cref/default.htm"><span>cref</span></a></li>
<li class="cpp11"><a href="../mem_fn/default.htm"><span>mem_fn</span></a></li>
<li class="cpp98 cpp11"><a href="../not1/default.htm"><span>not1</span></a></li>
<li class="cpp98 cpp11"><a href="../not2/default.htm"><span>not2</span></a></li>
<li class="cpp11"><a href="../ref/default.htm"><span>ref</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>wrapper classes:</h4><ul>
<li class="cpp98 cpp11"><a href="../binary_negate/default.htm"><span>binary_negate</span></a></li>
<li class="cpp11 folder"><a href="../function/default.htm"><span>function</span></a></li>
<li class="cpp11 folder"><a href="../reference_wrapper/default.htm"><span>reference_wrapper</span></a></li>
<li class="cpp98 cpp11"><a href="../unary_negate/default.htm"><span>unary_negate</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>operator classes:</h4><ul>
<li class="cpp11"><a href="../bit_and/default.htm"><span>bit_and</span></a></li>
<li class="cpp11"><a href="../bit_or/default.htm"><span>bit_or</span></a></li>
<li class="cpp11"><a href="../bit_xor/default.htm"><span>bit_xor</span></a></li>
<li class="cpp98 cpp11"><a href="../divides/default.htm"><span>divides</span></a></li>
<li class="cpp98 cpp11"><a href="../equal_to/default.htm"><span>equal_to</span></a></li>
<li class="cpp98 cpp11"><a href="../greater/default.htm"><span>greater</span></a></li>
<li class="cpp98 cpp11"><a href="../greater_equal/default.htm"><span>greater_equal</span></a></li>
<li class="cpp98 cpp11"><a href="../less/default.htm"><span>less</span></a></li>
<li class="cpp98 cpp11"><a href="../less_equal/default.htm"><span>less_equal</span></a></li>
<li class="cpp98 cpp11"><a href="../logical_and/default.htm"><span>logical_and</span></a></li>
<li class="cpp98 cpp11"><a href="../logical_not/default.htm"><span>logical_not</span></a></li>
<li class="cpp98 cpp11"><a href="../logical_or/default.htm"><span>logical_or</span></a></li>
<li class="cpp98 cpp11"><a href="../minus/default.htm"><span>minus</span></a></li>
<li class="cpp98 cpp11"><a href="../modulus/default.htm"><span>modulus</span></a></li>
<li class="cpp98 cpp11"><a href="../multiplies/default.htm"><span>multiplies</span></a></li>
<li class="cpp98 cpp11"><a href="../negate/default.htm"><span>negate</span></a></li>
<li class="cpp98 cpp11"><a href="../not_equal_to/default.htm"><span>not_equal_to</span></a></li>
<li class="cpp98 cpp11"><a href="../plus/default.htm"><span>plus</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>other classes:</h4><ul>
<li class="cpp11"><a href="../bad_function_call/default.htm"><span>bad_function_call</span></a></li>
<li class="cpp11"><a href="../hash/default.htm"><span>hash</span></a></li>
<li class="cpp11"><a href="../is_bind_expression/default.htm"><span>is_bind_expression</span></a></li>
<li class="cpp11"><a href="../is_placeholder/default.htm"><span>is_placeholder</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>namespaces:</h4><ul>
<li class="cpp11"><a href="../placeholders/default.htm"><span>placeholders</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>deprecated:</h4><ul>
<li class="cpp98 cpp11"><a href="../binary_function/default.htm"><span>binary_function</span></a></li>
<li class="cpp98 cpp11"><a href="../bind1st/default.htm"><span>bind1st</span></a></li>
<li class="cpp98 cpp11"><a href="../bind2nd/default.htm"><span>bind2nd</span></a></li>
<li class="cpp98 cpp11"><a href="../binder1st/default.htm"><span>binder1st</span></a></li>
<li class="cpp98 cpp11"><a href="../binder2nd/default.htm"><span>binder2nd</span></a></li>
<li class="cpp98 cpp11"><a href="../const_mem_fun1_ref_t/default.htm"><span>const_mem_fun1_ref_t</span></a></li>
<li class="cpp98 cpp11"><a href="../const_mem_fun1_t/default.htm"><span>const_mem_fun1_t</span></a></li>
<li class="cpp98 cpp11"><a href="../const_mem_fun_ref_t/default.htm"><span>const_mem_fun_ref_t</span></a></li>
<li class="cpp98 cpp11"><a href="../const_mem_fun_t/default.htm"><span>const_mem_fun_t</span></a></li>
<li class="cpp98 cpp11"><a href="../mem_fun/default.htm"><span>mem_fun</span></a></li>
<li class="cpp98 cpp11"><a href="../mem_fun1_ref_t/default.htm"><span>mem_fun1_ref_t</span></a></li>
<li class="cpp98 cpp11"><a href="../mem_fun1_t/default.htm"><span>mem_fun1_t</span></a></li>
<li class="cpp98 cpp11"><a href="../mem_fun_ref/default.htm"><span>mem_fun_ref</span></a></li>
<li class="cpp98 cpp11"><a href="../mem_fun_ref_t/default.htm"><span>mem_fun_ref_t</span></a></li>
<li class="cpp98 cpp11"><a href="../mem_fun_t/default.htm"><span>mem_fun_t</span></a></li>
<li class="cpp98 cpp11"><a href="../pointer_to_binary_function/default.htm"><span>pointer_to_binary_function</span></a></li>
<li class="cpp98 cpp11"><a href="../pointer_to_unary_function/default.htm"><span>pointer_to_unary_function</span></a></li>
<li class="cpp98 cpp11"><a href="../ptr_fun/default.htm"><span>ptr_fun</span></a></li>
<li class="cpp98 cpp11 selected"><a href="default.htm"><span>unary_function</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~1431.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../edit.cgiafunctionalunary_function'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../delete.cgiafunctionalunary_function'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>