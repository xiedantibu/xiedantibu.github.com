<!DOCTYPE html><!-- saved from url=(0063)http://www.cplusplus.com/reference/algorithm/unique/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>unique - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Reference</a></li>
<li><a href="../default.htm">&lt;algorithm&gt;</a></li>
<li class="here">unique</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">function template</div>
<div id="I_file">&lt;algorithm&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>unique</h1>
<div class="C_prototype"><table><tr class="odd"><th>equality (1)</th><td><pre>template &lt;class ForwardIterator&gt;  ForwardIterator unique (ForwardIterator first, ForwardIterator last);</pre></td></tr><tr class="even"><th>predicate (2)</th><td><pre>template &lt;class ForwardIterator, class BinaryPredicate&gt;  ForwardIterator unique (ForwardIterator first, ForwardIterator last,                          BinaryPredicate pred);</pre></td></tr></table></div><div id="I_description">Remove consecutive duplicates in range</div>
<section id="description">
Removes all but the first element from every consecutive group of equivalent elements in the range <code>[first,last)</code>.<br>
<br>
The function cannot alter the properties of the object containing the range of elements (i.e., it cannot alter the size of an array or a container): The removal is done by replacing the duplicate elements by the next element that is not a duplicate, and signaling the new size of the shortened range by returning an iterator to the element that should be considered its new <i>past-the-end</i> element.<br>
<br>
The relative order of the elements not removed is preserved, while the elements between the returned iterator and <var>last</var> are left in a valid but unspecified state.<br>
<br>
The function uses <code>operator==</code> to compare the pairs of elements (or <var>pred</var>, in version <i>(2)</i>).<br>
<br>
The behavior of this function template is equivalent to:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>class</var> ForwardIterator&gt;
  ForwardIterator unique (ForwardIterator first, ForwardIterator last)
{
  <var>if</var> (first==last) <var>return</var> last;

  ForwardIterator result = first;
  <var>while</var> (++first != last)
  {
    <var>if</var> (!(*result == *first))  <cite>// or: if (!pred(*result,*first)) for version (2)</cite>
      *(++result)=*first;
  }
  <var>return</var> ++result;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>first, last</dt>
<dd><a href="../../iterator/forwarditerator/default.htm">Forward iterators</a> to the initial and final positions of the sequence of <i><a href="../../type_traits/is_move_assignable/default.htm">move-assignable</a></i> elements. The range used is <code>[first,last)</code>, which contains all the elements between <var>first</var> and <var>last</var>, including the element pointed by <var>first</var> but not the element pointed by <var>last</var>.</dd>
<dt>pred</dt>
<dd>Binary function that accepts two elements in the range as argument, and returns a value convertible to <code>bool</code>. The value returned indicates whether both arguments are considered equivalent (if <code>true</code>, they are equivalent and one of them is removed).<br>
The function shall not modify any of its arguments.<br>
This can either be a function pointer or a function object.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return value</h3>
An iterator to the element that follows the last element not removed.<br>
The range between <var>first</var> and this iterator includes all the elements in the sequence that were not considered duplicates.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br></code></pre></td>
<td class="source"><pre><code><cite>// unique algorithm example</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout</cite>
<dfn>#include &lt;algorithm&gt;    </dfn><cite>// std::unique, std::distance</cite>
<dfn>#include &lt;vector&gt;       </dfn><cite>// std::vector</cite>

<var>bool</var> myfunction (<var>int</var> i, <var>int</var> j) {
  <var>return</var> (i==j);
}

<var>int</var> main () {
  <var>int</var> myints[] = {10,20,20,20,30,30,20,20,10};           <cite>// 10 20 20 20 30 30 20 20 10</cite>
  std::vector&lt;<var>int</var>&gt; myvector (myints,myints+9);

  <cite>// using default comparison:</cite>
  std::vector&lt;<var>int</var>&gt;::iterator it;
  it = std::unique (myvector.begin(), myvector.end());   <cite>// 10 20 30 20 10 ?  ?  ?  ?</cite>
                                                         <cite>//                ^</cite>

  myvector.resize( std::distance(myvector.begin(),it) ); <cite>// 10 20 30 20 10</cite>

  <cite>// using predicate comparison:</cite>
  std::unique (myvector.begin(), myvector.end(), myfunction);   <cite>// (no changes)</cite>

  <cite>// print out content:</cite>
  std::cout &lt;&lt; <kbd>"myvector contains:"</kbd>;
  <var>for</var> (it=myvector.begin(); it!=myvector.end(); ++it)
    std::cout &lt;&lt; <kbd>' '</kbd> &lt;&lt; *it;
  std::cout &lt;&lt; <kbd>'\n'</kbd>;

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>myvector contains: 10 20 30 20 10
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
For non-empty ranges, linear in one less than the <a href="../../iterator/distance/default.htm">distance</a> between <var>first</var> and <var>last</var>: Compares each pair of elements, and possibly performs assignments on some of them.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
The objects in the range <code>[first,last)</code> are accessed and potentially modified.<br>
</section>
<br>
<section id="exceptions">
<h3>Exceptions</h3>
Throws if any of <var>pred</var>, the element comparisons, the element assignments or the operations on iterators throws.<br>
Note that invalid arguments cause <i>undefined behavior</i>.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../unique_copy/default.htm"><b>unique_copy</b></a></dt><dd>Copy range removing duplicates <span class="typ">(function template)</span></dd></dl><dl class="links"><dt><a href= "../adjacent_find/default.htm"><b>adjacent_find</b></a></dt><dd>Find equal adjacent elements in range <span class="typ">(function template)</span></dd></dl><dl class="links"><dt><a href= "../remove/default.htm"><b>remove</b></a></dt><dd>Remove value from range <span class="typ">(function template)</span></dd></dl><dl class="links"><dt><a href= "../remove_if/default.htm"><b>remove_if</b></a></dt><dd>Remove elements from range <span class="typ">(function template)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="algorithm_box">
<h3><b><a href="../default.htm">&lt;algorithm&gt;</a></b></h3>
<ul>
<li class="cpp98 cpp11"><a href="../adjacent_find/default.htm"><span>adjacent_find</span></a></li>
<li class="cpp11"><a href="../all_of/default.htm"><span>all_of</span></a></li>
<li class="cpp11"><a href="../any_of/default.htm"><span>any_of</span></a></li>
<li class="cpp98 cpp11"><a href="../binary_search/default.htm"><span>binary_search</span></a></li>
<li class="cpp98 cpp11"><a href="../copy/default.htm"><span>copy</span></a></li>
<li class="cpp98 cpp11"><a href="../copy_backward/default.htm"><span>copy_backward</span></a></li>
<li class="cpp11"><a href="../copy_if/default.htm"><span>copy_if</span></a></li>
<li class="cpp11"><a href="../copy_n/default.htm"><span>copy_n</span></a></li>
<li class="cpp98 cpp11"><a href="../count/default.htm"><span>count</span></a></li>
<li class="cpp98 cpp11"><a href="../count_if/default.htm"><span>count_if</span></a></li>
<li class="cpp98 cpp11"><a href="../equal/default.htm"><span>equal</span></a></li>
<li class="cpp98 cpp11"><a href="../equal_range/default.htm"><span>equal_range</span></a></li>
<li class="cpp98 cpp11"><a href="../fill/default.htm"><span>fill</span></a></li>
<li class="cpp98 cpp11"><a href="../fill_n/default.htm"><span>fill_n</span></a></li>
<li class="cpp98 cpp11"><a href="../find/default.htm"><span>find</span></a></li>
<li class="cpp98 cpp11"><a href="../find_end/default.htm"><span>find_end</span></a></li>
<li class="cpp98 cpp11"><a href="../find_first_of/default.htm"><span>find_first_of</span></a></li>
<li class="cpp98 cpp11"><a href="../find_if/default.htm"><span>find_if</span></a></li>
<li class="cpp11"><a href="../find_if_not/default.htm"><span>find_if_not</span></a></li>
<li class="cpp98 cpp11"><a href="../for_each/default.htm"><span>for_each</span></a></li>
<li class="cpp98 cpp11"><a href="../generate/default.htm"><span>generate</span></a></li>
<li class="cpp98 cpp11"><a href="../generate_n/default.htm"><span>generate_n</span></a></li>
<li class="cpp98 cpp11"><a href="../includes/default.htm"><span>includes</span></a></li>
<li class="cpp98 cpp11"><a href="../inplace_merge/default.htm"><span>inplace_merge</span></a></li>
<li class="cpp11"><a href="../is_heap/default.htm"><span>is_heap</span></a></li>
<li class="cpp11"><a href="../is_heap_until/default.htm"><span>is_heap_until</span></a></li>
<li class="cpp11"><a href="../is_partitioned/default.htm"><span>is_partitioned</span></a></li>
<li class="cpp11"><a href="../is_permutation/default.htm"><span>is_permutation</span></a></li>
<li class="cpp11"><a href="../is_sorted/default.htm"><span>is_sorted</span></a></li>
<li class="cpp11"><a href="../is_sorted_until/default.htm"><span>is_sorted_until</span></a></li>
<li class="cpp98 cpp11"><a href="../iter_swap/default.htm"><span>iter_swap</span></a></li>
<li class="cpp98 cpp11"><a href="../lexicographical_compare/default.htm"><span>lexicographical_compare</span></a></li>
<li class="cpp98 cpp11"><a href="../lower_bound/default.htm"><span>lower_bound</span></a></li>
<li class="cpp98 cpp11"><a href="../make_heap/default.htm"><span>make_heap</span></a></li>
<li class="cpp98 cpp11"><a href="../max/default.htm"><span>max</span></a></li>
<li class="cpp98 cpp11"><a href="../max_element/default.htm"><span>max_element</span></a></li>
<li class="cpp98 cpp11"><a href="../merge/default.htm"><span>merge</span></a></li>
<li class="cpp98 cpp11"><a href="../min/default.htm"><span>min</span></a></li>
<li class="cpp11"><a href="../minmax/default.htm"><span>minmax</span></a></li>
<li class="cpp11"><a href="../minmax_element/default.htm"><span>minmax_element</span></a></li>
<li class="cpp98 cpp11"><a href="../min_element/default.htm"><span>min_element</span></a></li>
<li class="cpp98 cpp11"><a href="../mismatch/default.htm"><span>mismatch</span></a></li>
<li class="cpp11"><a href="../move/default.htm"><span>move</span></a></li>
<li class="cpp11"><a href="../move_backward/default.htm"><span>move_backward</span></a></li>
<li class="cpp98 cpp11"><a href="../next_permutation/default.htm"><span>next_permutation</span></a></li>
<li class="cpp11"><a href="../none_of/default.htm"><span>none_of</span></a></li>
<li class="cpp98 cpp11"><a href="../nth_element/default.htm"><span>nth_element</span></a></li>
<li class="cpp98 cpp11"><a href="../partial_sort/default.htm"><span>partial_sort</span></a></li>
<li class="cpp98 cpp11"><a href="../partial_sort_copy/default.htm"><span>partial_sort_copy</span></a></li>
<li class="cpp98 cpp11"><a href="../partition/default.htm"><span>partition</span></a></li>
<li class="cpp11"><a href="../partition_copy/default.htm"><span>partition_copy</span></a></li>
<li class="cpp11"><a href="../partition_point/default.htm"><span>partition_point</span></a></li>
<li class="cpp98 cpp11"><a href="../pop_heap/default.htm"><span>pop_heap</span></a></li>
<li class="cpp98 cpp11"><a href="../prev_permutation/default.htm"><span>prev_permutation</span></a></li>
<li class="cpp98 cpp11"><a href="../push_heap/default.htm"><span>push_heap</span></a></li>
<li class="cpp98 cpp11"><a href="../random_shuffle/default.htm"><span>random_shuffle</span></a></li>
<li class="cpp98 cpp11"><a href="../remove/default.htm"><span>remove</span></a></li>
<li class="cpp98 cpp11"><a href="../remove_copy/default.htm"><span>remove_copy</span></a></li>
<li class="cpp98 cpp11"><a href="../remove_copy_if/default.htm"><span>remove_copy_if</span></a></li>
<li class="cpp98 cpp11"><a href="../remove_if/default.htm"><span>remove_if</span></a></li>
<li class="cpp98 cpp11"><a href="../replace/default.htm"><span>replace</span></a></li>
<li class="cpp98 cpp11"><a href="../replace_copy/default.htm"><span>replace_copy</span></a></li>
<li class="cpp98 cpp11"><a href="../replace_copy_if/default.htm"><span>replace_copy_if</span></a></li>
<li class="cpp98 cpp11"><a href="../replace_if/default.htm"><span>replace_if</span></a></li>
<li class="cpp98 cpp11"><a href="../reverse/default.htm"><span>reverse</span></a></li>
<li class="cpp98 cpp11"><a href="../reverse_copy/default.htm"><span>reverse_copy</span></a></li>
<li class="cpp98 cpp11"><a href="../rotate/default.htm"><span>rotate</span></a></li>
<li class="cpp98 cpp11"><a href="../rotate_copy/default.htm"><span>rotate_copy</span></a></li>
<li class="cpp98 cpp11"><a href="../search/default.htm"><span>search</span></a></li>
<li class="cpp98 cpp11"><a href="../search_n/default.htm"><span>search_n</span></a></li>
<li class="cpp98 cpp11"><a href="../set_difference/default.htm"><span>set_difference</span></a></li>
<li class="cpp98 cpp11"><a href="../set_intersection/default.htm"><span>set_intersection</span></a></li>
<li class="cpp98 cpp11"><a href="../set_symmetric_difference/default.htm"><span>set_symmetric_difference</span></a></li>
<li class="cpp98 cpp11"><a href="../set_union/default.htm"><span>set_union</span></a></li>
<li class="cpp11"><a href="../shuffle/default.htm"><span>shuffle</span></a></li>
<li class="cpp98 cpp11"><a href="../sort/default.htm"><span>sort</span></a></li>
<li class="cpp98 cpp11"><a href="../sort_heap/default.htm"><span>sort_heap</span></a></li>
<li class="cpp98 cpp11"><a href="../stable_partition/default.htm"><span>stable_partition</span></a></li>
<li class="cpp98 cpp11"><a href="../stable_sort/default.htm"><span>stable_sort</span></a></li>
<li class="cpp98 cpp11"><a href="../swap/default.htm"><span>swap</span></a></li>
<li class="cpp98 cpp11"><a href="../swap_ranges/default.htm"><span>swap_ranges</span></a></li>
<li class="cpp98 cpp11"><a href="../transform/default.htm"><span>transform</span></a></li>
<li class="cpp98 cpp11 selected"><a href="default.htm"><span>unique</span></a></li>
<li class="cpp98 cpp11"><a href="../unique_copy/default.htm"><span>unique_copy</span></a></li>
<li class="cpp98 cpp11"><a href="../upper_bound/default.htm"><span>upper_bound</span></a></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~990.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../edit.cgiaalgorithmunique'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../delete.cgiaalgorithmunique'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>