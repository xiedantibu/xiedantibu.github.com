<!DOCTYPE html><!-- saved from url=(0064)http://www.cplusplus.com/reference/memory/owner_less/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>owner_less - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Reference</a></li>
<li><a href="../default.htm">&lt;memory&gt;</a></li>
<li class="here">owner_less</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">class template</div>
<div id="I_file">&lt;memory&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>owner_less<span class="C_ico cpp11warning" title="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it." alt="This page describes a feature introduced by the latest revision of the C++ standard (2011). Older compilers may not support it."></span></h1>
<div class="C_prototype"><pre>template &lt;class Ptr&gt; struct owner_less;template &lt;class T&gt; struct owner_less&lt;shared_ptr&lt;T&gt;&gt;;template &lt;class T&gt; struct owner_less&lt;weak_ptr&lt;T&gt;&gt;;</pre></div><div id="I_description">Owner-based less-than operation</div>
<section id="description">
This class defines function objects that perform an <i>owner-based</i> comparison between <a href="../shared_ptr/default.htm">shared_ptr</a> and/or <a href="../weak_ptr/default.htm">weak_ptr</a> objects.<br>
<br>
This is a replacement for <a href="../../functional/less/default.htm">less</a> (or <a href="../../../shared_ptr_3aoperators">operator&lt;</a>) to be used for these types when sorting needs to be based on their <i>owned pointer</i> instead of their <i>stored pointer</i> (which is what is compared by <a href="../../../shared_ptr_3aoperators">operator&lt;</a>).<br>
<br>
The <i>stored pointer</i> of a <a href="../shared_ptr/default.htm">shared_ptr</a> object (i.e., the pointer it <a href="../../../shared_ptr_3a_3aoperator_2a">dereferences</a> to) may be different from the <i>owned pointer</i> (i.e., the pointer deleted on object destruction) if the <a href="../shared_ptr/default.htm">shared_ptr</a> object is an alias (<a href="../../../shared_ptr_3a_3ashared_ptr">alias-constructed</a> objects and their copies).<br>
<br>
The comparison performed by <tt>owner_less::operator()</tt> relies on member function <a href="../../../shared_ptr_3a_3aowner_before">owner_before</a> of either <a href="../shared_ptr/default.htm">shared_ptr</a> or <a href="../weak_ptr/default.htm">weak_ptr</a>. <tt>owner_less</tt> is defined with an interface that mimics a <a href="../../../binary_function">binary_function</a>, but with additional overloads. It is implemented with the same behavior as:<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br></code></pre></td>
<td class="source"><pre><code><var>template</var>&lt;<var>class</var> P&gt; <var>struct</var> owner_less;  <cite>// not defined</cite>

<var>template</var>&lt;<var>class</var> T&gt; <var>struct</var> owner_less &lt;shared_ptr&lt;T&gt;&gt;
{
  <var>typedef</var> <var>bool</var> result_type;
  <var>typedef</var> shared_ptr&lt;T&gt; first_argument_type;
  <var>typedef</var> shared_ptr&lt;T&gt; second_argument_type;
  <var>bool</var> <var>operator</var>() (<var>const</var> shared_ptr&lt;T&gt;&amp; x, <var>const</var> shared_ptr&lt;T&gt;&amp; y) <var>const</var> {<var>return</var> x.owner_before(y);}
  <var>bool</var> <var>operator</var>() (<var>const</var> shared_ptr&lt;T&gt;&amp; x, <var>const</var> weak_ptr&lt;T&gt;&amp; y) <var>const</var> {<var>return</var> x.owner_before(y);}
  <var>bool</var> <var>operator</var>() (<var>const</var> weak_ptr&lt;T&gt;&amp; x, <var>const</var> shared_ptr&lt;T&gt;&amp; y) <var>const</var> {<var>return</var> x.owner_before(y);}
};

<var>template</var>&lt;<var>class</var> T&gt; <var>struct</var> owner_less &lt;weak_ptr&lt;T&gt;&gt;
{
  <var>typedef</var> <var>bool</var> result_type;
  <var>typedef</var> weak_ptr&lt;T&gt; first_argument_type;
  <var>typedef</var> weak_ptr&lt;T&gt; second_argument_type;
  <var>bool</var> <var>operator</var>() (<var>const</var> weak_ptr&lt;T&gt;&amp; x, <var>const</var> weak_ptr&lt;T&gt;&amp; y) <var>const</var> {<var>return</var> x.owner_before(y);}
  <var>bool</var> <var>operator</var>() (<var>const</var> shared_ptr&lt;T&gt;&amp; x, <var>const</var> weak_ptr&lt;T&gt;&amp; y) <var>const</var> {<var>return</var> x.owner_before(y);}
  <var>bool</var> <var>operator</var>() (<var>const</var> weak_ptr&lt;T&gt;&amp; x, <var>const</var> shared_ptr&lt;T&gt;&amp; y) <var>const</var> {<var>return</var> x.owner_before(y);}
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
</section>
<br>
<section id="parameters">
<h3>Template parameters</h3>
<dl>
<dt>Ptr</dt>
<dd>The type of the managed pointers to be ordered according to owned resource, aliased as member types <tt>first_argument_type</tt> and <tt>second_argument_type</tt>.<br>
<dt>T</dt>
<dd>The type of object pointed by the managed pointer type.</dd>
</dl>
</section>
<br>
<section id="types">
<h3>Member types</h3>
The following aliases are member types of <tt>owner_less</tt>.<br>
<br>
<table class="boxed">
<tr><th>member type</th><th>definition</th><th>notes</th></tr>
<tr><td><tt>result_type</tt></td><td><tt>bool</tt></td><td>The result of the operation</td></tr>
<tr><td><tt>first_argument_type</tt></td><td><tt>Ptr</tt></td><td>The type of the first argument</td></tr>
<tr><td><tt>second_argument_type</tt></td><td><tt>Ptr</tt></td><td>The type of the second argument</td></tr>
</table>
</section>
<br>
<section id="functions">
<h3>Member functions</h3>
<dl>
<dt>operator()</dt>
<dd>Returns <tt>true</tt> if the first argument is considered to go before the second argument in a strict weak ordering based on their <i>owned pointers</i>.<br>
The function uses <a href="../../../shared_ptr_3a_3aowner_before">shared_ptr::owner_before</a> and/or <a href="../../../weak_ptr_3a_3aowner_before">weak_ptr::owner_before</a> to determine this order.<br>
</dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br></code></pre></td>
<td class="source"><pre><code><cite>// owner_less example</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;memory&gt;</dfn>
<dfn>#include &lt;set&gt;</dfn>

<var>int</var> main ()
{
  <var>int</var> * p = <var>new</var> <var>int</var> (10);

  std::shared_ptr&lt;<var>int</var>&gt; a (<var>new</var> <var>int</var> (20));
  std::shared_ptr&lt;<var>int</var>&gt; b (a,p);  <cite>// alias constructor: co-owns a, points to p</cite>

  <cite>// standard set container: cannot contain duplicates.</cite>
  std::set &lt; std::shared_ptr&lt;<var>int</var>&gt; &gt; value_based;  <cite>// uses std::less</cite>
  std::set &lt; std::shared_ptr&lt;<var>int</var>&gt;, std::owner_less&lt;std::shared_ptr&lt;<var>int</var>&gt;&gt; &gt; owner_based;

  value_based.insert (a);
  value_based.insert (b);  <cite>// ok, different value</cite>

  owner_based.insert (a);
  owner_based.insert (b);  <cite>// overwrites (same owned pointer)</cite>

  std::cout &lt;&lt; <kbd>"value_based.size() is "</kbd> &lt;&lt; value_based.size() &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"owner_based.size() is "</kbd> &lt;&lt; owner_based.size() &lt;&lt; <kbd>'\n'</kbd>;

  <var>delete</var> p;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>value_based.size() is 2
owner_based.size() is 1
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../shared_ptr/owner_before/default.htm"><b>shared_ptr::owner_before</b></a></dt><dd>Owner-based ordering <span class="typ">(public member function template)</span></dd></dl><dl class="links"><dt><a href= "../weak_ptr/owner_before/default.htm"><b>weak_ptr::owner_before</b></a></dt><dd>Owner-based ordering <span class="typ">(public member function template)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="memory_box">
<h3><b><a href="../default.htm">&lt;memory&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>classes:</h4><ul>
<li class="cpp98 cpp11 folder"><a href="../allocator/default.htm"><span>allocator</span></a></li>
<li class="cpp11"><a href="../allocator_arg_t/default.htm"><span>allocator_arg_t</span></a></li>
<li class="cpp11 folder"><a href="../allocator_traits/default.htm"><span>allocator_traits</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../auto_ptr/default.htm"><span>auto_ptr</span></a></li>
<li class="cpp98 cpp11"><a href="../auto_ptr_ref/default.htm"><span>auto_ptr_ref</span></a></li>
<li class="cpp11 folder"><a href="../bad_weak_ptr/default.htm"><span>bad_weak_ptr</span></a></li>
<li class="cpp11 folder"><a href="../default_delete/default.htm"><span>default_delete</span></a></li>
<li class="cpp11 folder"><a href="../enable_shared_from_this/default.htm"><span>enable_shared_from_this</span></a></li>
<li class="cpp11 selected"><a href="default.htm"><span>owner_less</span></a></li>
<li class="cpp11 folder"><a href="../pointer_traits/default.htm"><span>pointer_traits</span></a></li>
<li class="cpp98 cpp11"><a href="../raw_storage_iterator/default.htm"><span>raw_storage_iterator</span></a></li>
<li class="cpp11 folder"><a href="../shared_ptr/default.htm"><span>shared_ptr</span></a></li>
<li class="cpp11 folder"><a href="../unique_ptr/default.htm"><span>unique_ptr</span></a></li>
<li class="cpp11"><a href="../uses_allocator/default.htm"><span>uses_allocator</span></a></li>
<li class="cpp11 folder"><a href="../weak_ptr/default.htm"><span>weak_ptr</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>enum classes:</h4><ul>
<li class="cpp11"><a href="../pointer_safety/default.htm"><span>pointer_safety</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp11"><a href="../addressof/default.htm"><span>addressof</span></a></li>
<li class="cpp11"><a href="../align/default.htm"><span>align</span></a></li>
<li class="cpp11"><a href="../allocate_shared/default.htm"><span>allocate_shared</span></a></li>
<li class="cpp11"><a href="../const_pointer_cast/default.htm"><span>const_pointer_cast</span></a></li>
<li class="cpp11"><a href="../declare_no_pointers/default.htm"><span>declare_no_pointers</span></a></li>
<li class="cpp11"><a href="../declare_reachable/default.htm"><span>declare_reachable</span></a></li>
<li class="cpp11"><a href="../dynamic_pointer_cast/default.htm"><span>dynamic_pointer_cast</span></a></li>
<li class="cpp11"><a href="../get_deleter/default.htm"><span>get_deleter</span></a></li>
<li class="cpp11"><a href="../get_pointer_safety/default.htm"><span>get_pointer_safety</span></a></li>
<li class="cpp98 cpp11"><a href="../get_temporary_buffer/default.htm"><span>get_temporary_buffer</span></a></li>
<li class="cpp11"><a href="../make_shared/default.htm"><span>make_shared</span></a></li>
<li class="cpp98 cpp11"><a href="../return_temporary_buffer/default.htm"><span>return_temporary_buffer</span></a></li>
<li class="cpp11"><a href="../static_pointer_cast/default.htm"><span>static_pointer_cast</span></a></li>
<li class="cpp11"><a href="../undeclare_no_pointers/default.htm"><span>undeclare_no_pointers</span></a></li>
<li class="cpp11"><a href="../undeclare_reachable/default.htm"><span>undeclare_reachable</span></a></li>
<li class="cpp98 cpp11"><a href="../uninitialized_copy/default.htm"><span>uninitialized_copy</span></a></li>
<li class="cpp11"><a href="../uninitialized_copy_n/default.htm"><span>uninitialized_copy_n</span></a></li>
<li class="cpp98 cpp11"><a href="../uninitialized_fill/default.htm"><span>uninitialized_fill</span></a></li>
<li class="cpp98 cpp11"><a href="../uninitialized_fill_n/default.htm"><span>uninitialized_fill_n</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>objects:</h4><ul>
<li class="cpp11"><a href="../allocator_arg/default.htm"><span>allocator_arg</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~1856.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../edit.cgiamemoryowner_less'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../delete.cgiamemoryowner_less'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>