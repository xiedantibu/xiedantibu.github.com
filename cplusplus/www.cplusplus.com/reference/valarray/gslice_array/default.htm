<!DOCTYPE html><!-- saved from url=(0068)http://www.cplusplus.com/reference/valarray/gslice_array/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>gslice_array - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../v321/main.css">
<script src="../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../default.htm">Reference</a></li>
<li><a href="../default.htm">&lt;valarray&gt;</a></li>
<li class="here">gslice_array</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">class template</div>
<div id="I_file">&lt;valarray&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>gslice_array</h1>
<div class="C_prototype"><pre>template &lt;class T&gt; gslice_array;</pre></div><div id="I_description">Valarray gslice selection</div>
<section id="description">
This class is used as an intermediate type returned by <samp><a href="../valarray/default.htm">valarray</a></samp>'s <i>subscript operator</i> (<a href="../valarray/operator/default.htm">operator[]</a>) when used with <i><a href="../../../gslice">generalized gslices</a></i>.<br>
<br>
It references the elements in the <samp><a href="../valarray/default.htm">valarray</a></samp> object that are selected by the <samp><a href="../../../gslice">gslice</a></samp>, and overloads the assignment and compound assignment operators, allowing direct access to the elements in the selection.<br>
<br>
The type is convertible to a <samp><a href="../valarray/default.htm">valarray</a></samp> (see <i><a href="../../../valarray_3a_3avalarray">valarray constructor</a></i>), producing a new object with copies of the referred elements.<br>
<br>
<div class="C_SwitchCases">
<div title="C++98">
Objects of this type are obtained as the return value of a call to <samp><a href="../valarray/operator/default.htm">valarray::operator[]</a></samp>. They cannot be directly <i>constructed</i> nor copied. It is declared as:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>class</var> T&gt; <var>class</var> gslice_array {
<var>public</var>:
  <var>typedef</var> T value_type;
  <var>void</var> <var>operator</var>=   (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>*=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>/=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>%=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>+=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>-=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>^=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>&amp;=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>|=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>&lt;&lt;= (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>&gt;&gt;= (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>=(<var>const</var> T&amp;);
  ~gslice_array();
<var>private</var>:
  gslice_array();
  gslice_array(<var>const</var> gslice_array&amp;);
  gslice_array&amp; <var>operator</var>= (<var>const</var> gslice_array&amp;);
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
<div title="C++11">
Objects of this type are obtained as the return value of a call to <samp><a href="../valarray/operator/default.htm">valarray::operator[]</a></samp>. They cannot be <i>default-constructed</i>, but can be copied. It is declared as:<br>
<br>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br></code></pre></td>
<td class="source"><pre><code><var>template</var> &lt;<var>class</var> T&gt; <var>class</var> gslice_array {
<var>public</var>:
  <var>typedef</var> T value_type;
  <var>void</var> <var>operator</var>=   (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>*=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>/=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>%=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>+=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>-=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>^=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>&amp;=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>|=  (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>&lt;&lt;= (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>&gt;&gt;= (<var>const</var> valarray&lt;T&gt;&amp;) <var>const</var>;
  <var>void</var> <var>operator</var>=(<var>const</var> T&amp;) <var>const</var>;

  gslice_array() = <var>delete</var>;
  gslice_array(<var>const</var> gslice_array&amp;);
  <var>const</var> gslice_array&amp; <var>operator</var>= (<var>const</var> gslice_array&amp;) <var>const</var>;
  ~gslice_array();
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
</div>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br></code></pre></td>
<td class="source"><pre><code><cite>// gslice_array example</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout</cite>
<dfn>#include &lt;cstddef&gt;      </dfn><cite>// std::size_t</cite>
<dfn>#include &lt;valarray&gt;     </dfn><cite>// std::valarray, std::gslice</cite>

<var>int</var> main ()
{
  std::valarray&lt;<var>int</var>&gt; foo (14);
  <var>for</var> (<var>int</var> i=0; i&lt;14; ++i) foo[i]=i;

  std::size_t start=1;
  std::size_t lengths[]= {2,3};
  std::size_t strides[]= {7,2};

  std::gslice mygslice (start,
                        std::valarray&lt;std::size_t&gt;(lengths,2),
                        std::valarray&lt;std::size_t&gt;(strides,2));
  foo[mygslice] = 0;

  std::cout &lt;&lt; <kbd>"foo:\n"</kbd>;
  <var>for</var> (std::size_t n=0; n&lt;foo.size(); n++)
	  std::cout &lt;&lt; <kbd>' '</kbd> &lt;&lt; foo[n];
  std::cout &lt;&lt; <kbd>'\n'</kbd>;

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
0 0 2 0 4 0 6 7 0 9 0 11 0 13
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../slice_array/default.htm"><b>slice_array</b></a></dt><dd>Valarray slice selection <span class="typ">(class template)</span></dd></dl><dl class="links"><dt><a href= "../mask_array/default.htm"><b>mask_array</b></a></dt><dd>Valarray mask selection <span class="typ">(class template)</span></dd></dl><dl class="links"><dt><a href= "../indirect_array/default.htm"><b>indirect_array</b></a></dt><dd>Valarray indirect selection <span class="typ">(class template)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../utility/default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="valarray_box">
<h3><b><a href="../default.htm">&lt;valarray&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>classes:</h4><ul>
<li class="cpp98 cpp11 folder"><a href="../gslice/default.htm"><span>gslice</span></a></li>
<li class="cpp98 cpp11 selected"><a href="default.htm"><span>gslice_array</span></a></li>
<li class="cpp98 cpp11"><a href="../indirect_array/default.htm"><span>indirect_array</span></a></li>
<li class="cpp98 cpp11"><a href="../mask_array/default.htm"><span>mask_array</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../slice/default.htm"><span>slice</span></a></li>
<li class="cpp98 cpp11"><a href="../slice_array/default.htm"><span>slice_array</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../valarray/default.htm"><span>valarray</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp98 cpp11"><a href="../abs/default.htm"><span>abs</span></a></li>
<li class="cpp98 cpp11"><a href="../acos/default.htm"><span>acos</span></a></li>
<li class="cpp98 cpp11"><a href="../asin/default.htm"><span>asin</span></a></li>
<li class="cpp98 cpp11"><a href="../atan/default.htm"><span>atan</span></a></li>
<li class="cpp98 cpp11"><a href="../atan2/default.htm"><span>atan2</span></a></li>
<li class="cpp98 cpp11"><a href="../cos/default.htm"><span>cos</span></a></li>
<li class="cpp98 cpp11"><a href="../cosh/default.htm"><span>cosh</span></a></li>
<li class="cpp98 cpp11"><a href="../exp/default.htm"><span>exp</span></a></li>
<li class="cpp98 cpp11"><a href="../log/default.htm"><span>log</span></a></li>
<li class="cpp98 cpp11"><a href="../log10/default.htm"><span>log10</span></a></li>
<li class="cpp98 cpp11"><a href="../pow/default.htm"><span>pow</span></a></li>
<li class="cpp98 cpp11"><a href="../sin/default.htm"><span>sin</span></a></li>
<li class="cpp98 cpp11"><a href="../sinh/default.htm"><span>sinh</span></a></li>
<li class="cpp98 cpp11"><a href="../sqrt/default.htm"><span>sqrt</span></a></li>
<li class="cpp98 cpp11"><a href="../tan/default.htm"><span>tan</span></a></li>
<li class="cpp98 cpp11"><a href="../tanh/default.htm"><span>tanh</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../default.htm">Home page</a> | <a href="../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../contact.doreferrerwww.cplusplus~2190.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../edit.cgiavalarraygslice_array'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../delete.cgiavalarraygslice_array'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../httpsssl/default.htm' : '../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>