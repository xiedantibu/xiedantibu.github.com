<!DOCTYPE html><!-- saved from url=(0064)http://www.cplusplus.com/reference/utility/pair/pair/default.htm --><meta http-equiv="X-UA-Compatible" content="IE=Edge" />

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>pair::pair - C++ Reference</title>
<link rel="canonical" href="default.htm">
<link rel="shortcut icon" type="image/x-icon" href="../../../../favicon.ico">
<link rel="stylesheet" type="text/css" href="../../../../v321/main.css">
<script src="../../../../v321/main.js" type="text/javascript"></script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="../../../../default.htm" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="../../../default.htm">Reference</a></li>
<li><a href="../../default.htm">&lt;utility&gt;</a></li>
<li><a href="../default.htm">pair</a></li>
<li class="here">pair</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support"><script type="text/javascript"><!--
if (!cookieGet("hspt31")) {
  document.write('<div class="C_DonateBox"></div>');
}
//-->
</script><div class="C_ad728"><script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7973859818";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<acript type="text/javascript"
src="../../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div><div class="C_supportbottom"></div></div><div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;utility&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="../default.htm">pair</a>::pair</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<table><tr class="odd"><th>default (1)</th><td><pre>pair();</pre></td></tr><tr class="even"><th>copy (2)</th><td><pre>template&lt;class U, class V&gt; pair (const pair&lt;U,V&gt;&amp; pr);</pre></td></tr><tr class="odd"><th>initialization (3)</th><td><pre>pair (const first_type&amp; a, const second_type&amp; b);</pre></td></tr></table></div>
<div title="C++11" class="off">
<table><tr class="even"><th>default (1)</th><td><pre>constexpr pair();</pre></td></tr><tr class="odd"><th>copy / move (2)</th><td><pre>template&lt;class U, class V&gt; pair (const pair&lt;U,V&gt;&amp; pr);template&lt;class U, class V&gt; pair (pair&lt;U,V&gt;&amp;&amp; pr);pair (const pair&amp; pr) = default;pair (pair&amp;&amp; pr) = default;</pre></td></tr><tr class="even"><th>initialization (3)</th><td><pre>pair (const first_type&amp; a, const second_type&amp; b);template&lt;class U, class V&gt; pair (U&amp;&amp; a, V&amp;&amp; b);</pre></td></tr><tr class="odd"><th>piecewise (4)</th><td><pre>template &lt;class... Args1, class... Args2&gt;  pair (piecewise_construct_t pwc, tuple&lt;Args1...&gt; first_args,                                   tuple&lt;Args2...&gt; second_args);</pre></td></tr></table></div>
</div>
</div><div id="I_description">Construct pair</div>
<section id="description">
Constructs a <samp><a href="../default.htm">pair</a></samp> object.<br>
This involves individually constructing its two component objects, with an initialization that depends on the constructor form invoked:<br>
<br>
<dl>
<dt>(1) default constructor</dt>
<dd>Constructs a <samp><a href="../default.htm">pair</a></samp> object with its elements <i>value-initialized</i>.</dd>
<dt>(2) copy / move constructor (and implicit conversion)</dt>
<dd>The object is initialized with the contents of the <var>pr</var> <samp><a href="../default.htm">pair</a></samp> object.<br>
The corresponding member of <var>pr</var> is passed to the constructor of each of its members.</dd>
<dt>(3) initialization constructor</dt>
<dd>Member <samp>first</samp> is constructed with <var>a</var> and member <samp>second</samp> with <var>b</var>.</dd>
<dt>(4) piecewise constructor</dt>
<dd>Constructs members <samp>first</samp> and <samp>second</samp> <i>in place</i>, passing the elements of <samp>first_args</samp> as arguments to the constructor of <samp>first</samp>, and the elements of <samp>second_args</samp> to the constructor of <samp>second</samp>.<br>
</dd>
</dl>
<br>
Most forms have two signatures: one taking const <i>lvalue references</i>, which copies the values into the <samp><a href="../default.htm">pair</a></samp>, and one taking <i>rvalue references</i>, which moves them instead if their types support <i>move semantics</i> (for such types, the contents are transferred to the <samp><a href="../default.htm">pair</a></samp> object and lost by their previous referrers, which are left in an unspecified but valid state).<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>pr</dt>
<dd>Another <samp><a href="../default.htm">pair</a></samp> object.<br>
This may be an object of the same type as the object being constructed or of a <samp><a href="../default.htm">pair</a></samp> type whose elements' types are implicitly convertible to those in the <samp><a href="../default.htm">pair</a></samp> being constructed.<br>
</dd>
<dt>a</dt>
<dd>An object of the type of <samp>first</samp>, or some other type implicitly convertible to it.<br>
</dd>
<dt>b</dt>
<dd>An object of the type of <samp>second</samp>, or some other type implicitly convertible to it.<br>
</dd>
<dt>pwc</dt>
<dd>The <samp><a href="../../piecewise_construct/default.htm">piecewise_construct</a></samp> object.<br>
The only purpose of this argument is to select the proper constructor signature. It conveys no information to be incorporated into the new object.</dd>
<dt>first_args, second_args</dt>
<dd><samp><a href="../../../tuple/tuple/default.htm">tuple</a></samp> objects with the arguments to be passed to the constructors of members <samp>first</samp> and <samp>second</samp>.<br>
</dd>
</dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></code></pre></td>
<td class="source"><pre><code><cite>// pair::pair example</cite>
<dfn>#include &lt;utility&gt;      </dfn><cite>// std::pair, std::make_pair</cite>
<dfn>#include &lt;string&gt;       </dfn><cite>// std::string</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout</cite>

<var>int</var> main () {
  std::pair &lt;std::string,<var>double</var>&gt; product1;                     <cite>// default constructor</cite>
  std::pair &lt;std::string,<var>double</var>&gt; product2 (<kbd>"tomatoes"</kbd>,2.30);   <cite>// value init</cite>
  std::pair &lt;std::string,<var>double</var>&gt; product3 (product2);          <cite>// copy constructor</cite>

  product1 = std::make_pair(std::string(<kbd>"lightbulbs"</kbd>),0.99);   <cite>// using make_pair (move)</cite>

  product2.first = <kbd>"shoes"</kbd>;                  <cite>// the type of first is string</cite>
  product2.second = 39.90;                   <cite>// the type of second is double</cite>

  std::cout &lt;&lt; <kbd>"The price of "</kbd> &lt;&lt; product1.first &lt;&lt; <kbd>" is $"</kbd> &lt;&lt; product1.second &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"The price of "</kbd> &lt;&lt; product2.first &lt;&lt; <kbd>" is $"</kbd> &lt;&lt; product2.second &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"The price of "</kbd> &lt;&lt; product3.first &lt;&lt; <kbd>" is $"</kbd> &lt;&lt; product3.second &lt;&lt; <kbd>'\n'</kbd>;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>The price of lightbulbs is $0.99
The price of shoes is $39.9
The price of tomatoes is $2.3
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="access">
<h3>Data races</h3>
The elements of <var>pr</var>, <var>first_args</var> and <var>second_args</var> are accessed.<br>
The constructors taking <i>rvalue references</i> as arguments modify these arguments if their types support <i>move semantics</i> for this construction.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
If none of the individual constructions of members of <samp><a href="../default.htm">pair</a></samp> can throw, the operation never throws exceptions (no-throw guarantee).<br>
Otherwise, if any of the forms taking an <i>rvalue reference</i> as argument is called, and at least one of the types in the <samp><a href="../default.htm">pair</a></samp> can be constructed with <i>move semantics</i>, the operation may leave <var>pr</var> in an invalid state in case of exception (no guarantees).<br>
Otherwise, the function only implies copies and the operation produces no side effects (strong guarantee).<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "../operator/default.htm"><b>pair::operator=</b></a></dt><dd>Assign contents <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "../../make_pair/default.htm"><b>make_pair</b></a></dt><dd>Construct pair object <span class="typ">(function template)</span></dd></dl><dl class="links"><dt><a href= "../../../tuple/tuple/default.htm"><b>tuple</b></a></dt><dd>Tuple <span class="typ">(class template)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="../../../../default.htm">C++</a></b></h3>
<ul>
<li class="folder info"><a href="../../../../info/default.htm">Information</a></li>
<li class="folder doc"><a href="../../../../doc/default.htm">Tutorials</a></li>
<li class="folder selected reference"><a href="../../../default.htm">Reference</a></li>
<li class="folder articles"><a href="../../../../articles/default.htm">Articles</a></li>
<li class="folder forum"><a href="../../../../forum/default.htm">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="../../../default.htm">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="../../../clibrary/default.htm">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cassert/default.htm"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cctype/default.htm"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cerrno/default.htm"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cfenv/default.htm"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cfloat/default.htm"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cinttypes/default.htm"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../ciso646/default.htm"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../climits/default.htm"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../clocale/default.htm"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cmath/default.htm"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../csetjmp/default.htm"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../csignal/default.htm"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdarg/default.htm"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="../../../cstdbool/default.htm"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstddef/default.htm"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../cstdint/default.htm"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdio/default.htm"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstdlib/default.htm"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cstring/default.htm"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="../../../ctgmath/default.htm"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../ctime/default.htm"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="../../../cuchar/default.htm"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cwchar/default.htm"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="../../../cwctype/default.htm"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../stl/default.htm">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="../../../array/default.htm"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../deque/default.htm"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../forward_list/default.htm"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../list/default.htm"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../map/default.htm"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../queue/default.htm"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../set/default.htm"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../stack/default.htm"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../unordered_map/default.htm"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../unordered_set/default.htm"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../vector/default.htm"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../iolibrary/default.htm">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../../fstream/default.htm"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iomanip/default.htm"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../ios/default.htm"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iosfwd/default.htm"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iostream/default.htm"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../istream/default.htm"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../ostream/default.htm"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../sstream/default.htm"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../streambuf/default.htm"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="../../../multithreading/default.htm">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="../../../atomic/default.htm"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../condition_variable/default.htm"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../future/default.htm"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../mutex/default.htm"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../thread/default.htm"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="../../../std/default.htm">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="../../../algorithm/default.htm"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../bitset/default.htm"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../chrono/default.htm"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../codecvt/default.htm"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../complex/default.htm"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../exception/default.htm"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../functional/default.htm"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../initializer_list/default.htm"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../iterator/default.htm"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../limits/default.htm"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../locale/default.htm"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../memory/default.htm"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../new/default.htm"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../numeric/default.htm"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../random/default.htm"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../ratio/default.htm"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../regex/default.htm"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../stdexcept/default.htm"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../string/default.htm"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../system_error/default.htm"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../tuple/default.htm"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../typeindex/default.htm"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../typeinfo/default.htm"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="../../../type_traits/default.htm"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="../../default.htm"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="../../../valarray/default.htm"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="utility_box">
<h3><b><a href="../../default.htm">&lt;utility&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>classes:</h4><ul>
<li class="cpp98 cpp11 selected folder"><a href="../default.htm"><span>pair</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp11"><a href="../../declval/default.htm"><span>declval</span></a></li>
<li class="cpp11"><a href="../../forward/default.htm"><span>forward</span></a></li>
<li class="cpp98 cpp11"><a href="../../make_pair/default.htm"><span>make_pair</span></a></li>
<li class="cpp11"><a href="../../move/default.htm"><span>move</span></a></li>
<li class="cpp11"><a href="../../move_if_noexcept/default.htm"><span>move_if_noexcept</span></a></li>
<li class="cpp11"><a href="../../swap/default.htm"><span>swap</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>types:</h4><ul>
<li class="cpp11"><a href="../../piecewise_construct_t/default.htm"><span>piecewise_construct_t</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>constants:</h4><ul>
<li class="cpp11"><a href="../../piecewise_construct/default.htm"><span>piecewise_construct</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>namespaces:</h4><ul>
<li class="cpp98 cpp11"><a href="../../rel_ops/default.htm"><span>rel_ops</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="pair_box">
<h3><b><a href="../default.htm">pair</a></b></h3>
<ul>
<li class="cpp98 cpp11 selected"><a href="default.htm"><span>pair::pair</span></a></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp98 cpp11"><a href="../operator/default.htm"><span>pair::operator=</span></a></li>
<li class="cpp11"><a href="../swap/default.htm"><span>pair::swap</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member overloads:</h4><ul>
<li class="cpp11"><a href="../get/default.htm"><span>get (pair)</span></a></li>
<li class="cpp98 cpp11"><a href="../operators/default.htm"><span>relational operators (pair)</span></a></li>
<li class="cpp11"><a href="../swap-free/default.htm"><span>swap (pair)</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member specializations:</h4><ul>
<li class="cpp11"><a href="../tuple_element/default.htm"><span>tuple_element&lt;pair&gt;</span></a></li>
<li class="cpp11"><a href="../tuple_size/default.htm"><span>tuple_size&lt;pair&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<acript type="text/javascript"
src="../../../../../pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="../../../../default.htm">Home page</a> | <a href="../../../../privacy.do.htm">Privacy policy</a><br>&copy; cplusplus.com, 2000-2014 - All rights reserved - <i>v3.1</i><br><a href="../../../../contact.doreferrerwww.cplusplus~2145.com_">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','../../../edit.cgiautilitypairpair'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='../../../delete.cgiautilitypairpair'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? '../../../../../httpsssl/default.htm' : '../../../../../www/default.htm') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>